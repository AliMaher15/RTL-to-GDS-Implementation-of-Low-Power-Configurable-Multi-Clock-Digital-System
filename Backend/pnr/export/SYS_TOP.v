/*
###############################################################
#  Generated by:      Cadence Innovus 15.20-p005_1
#  OS:                Linux x86_64(Host ID IC)
#  Generated on:      Sat Aug 20 17:19:13 2022
#  Design:            SYS_TOP
#  Command:           saveNetlist export/SYS_TOP.v
###############################################################
*/
module SYS_TOP (
	scan_clk, 
	scan_rst, 
	test_mode, 
	SE, 
	SI, 
	SO, 
	RST_N, 
	UART_CLK, 
	REF_CLK, 
	UART_RX_IN, 
	UART_TX_O, 
	parity_error, 
	framing_error);
   input scan_clk;
   input scan_rst;
   input test_mode;
   input SE;
   input [2:0] SI;
   output [2:0] SO;
   input RST_N;
   input UART_CLK;
   input REF_CLK;
   input UART_RX_IN;
   output UART_TX_O;
   output parity_error;
   output framing_error;

   // Internal wires
   wire FE_PHN26_scan_rst;
   wire scan_clk__L4_N0;
   wire scan_clk__L3_N0;
   wire scan_clk__L2_N1;
   wire scan_clk__L2_N0;
   wire scan_clk__L1_N0;
   wire UART_CLK__L2_N0;
   wire UART_CLK__L1_N0;
   wire RX_SCAN_CLK__L8_N0;
   wire RX_SCAN_CLK__L7_N0;
   wire RX_SCAN_CLK__L6_N0;
   wire RX_SCAN_CLK__L5_N0;
   wire RX_SCAN_CLK__L4_N0;
   wire RX_SCAN_CLK__L3_N0;
   wire RX_SCAN_CLK__L2_N0;
   wire RX_SCAN_CLK__L1_N0;
   wire TX_SCAN_CLK__L1_N0;
   wire REF_CLK__L2_N0;
   wire REF_CLK__L1_N0;
   wire REF_SCAN_CLK__L3_N1;
   wire REF_SCAN_CLK__L3_N0;
   wire REF_SCAN_CLK__L2_N0;
   wire REF_SCAN_CLK__L1_N0;
   wire FE_OFN23_RF_Address_0_;
   wire FE_OFN22_RF_Address_1_;
   wire FE_OFN20_REF_SCAN_RST;
   wire FE_OFN19_SE;
   wire FE_OFN18_SE;
   wire FE_OFN17_SE;
   wire FE_OFN15_SO_0_;
   wire REF_SCAN_CLK;
   wire RX_SCAN_CLK;
   wire UART_TX_CLK;
   wire TX_SCAN_CLK;
   wire RST_SCAN_RST;
   wire SYNC_REF_RST;
   wire REF_SCAN_RST;
   wire SYNC_UART_RST;
   wire UART_SCAN_RST;
   wire UART_RX_V_OUT;
   wire UART_RX_V_SYNC;
   wire UART_TX_VLD;
   wire UART_TX_V_SYNC;
   wire UART_TX_Busy;
   wire UART_TX_Busy_SYNC;
   wire RF_RdData_VLD;
   wire RF_WrEn;
   wire RF_RdEn;
   wire ALU_EN;
   wire ALU_OUT_VLD;
   wire CLKG_EN;
   wire ALU_CLK;
   wire _0_net_;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n16;
   wire n19;
   wire [7:0] UART_RX_OUT;
   wire [7:0] UART_RX_SYNC;
   wire [7:0] UART_TX_IN;
   wire [7:0] UART_TX_SYNC;
   wire [7:0] DIV_RATIO;
   wire [7:0] UART_Config;
   wire [7:0] RF_RdData;
   wire [3:0] RF_Address;
   wire [7:0] RF_WrData;
   wire [3:0] ALU_FUN;
   wire [15:0] ALU_OUT;
   wire [7:0] Operand_A;
   wire [7:0] Operand_B;
   wire SYNOPSYS_UNCONNECTED__0;
   wire SYNOPSYS_UNCONNECTED__1;
   wire SYNOPSYS_UNCONNECTED__2;
   wire SYNOPSYS_UNCONNECTED__3;
   wire SYNOPSYS_UNCONNECTED__4;

   assign UART_TX_O = SO[0] ;

   DLY4X1M FE_PHC26_scan_rst (.A(scan_rst),
	.Y(FE_PHN26_scan_rst));
   CLKINVX40M scan_clk__L4_I0 (.A(scan_clk__L3_N0),
	.Y(scan_clk__L4_N0));
   CLKBUFX20M scan_clk__L3_I0 (.A(scan_clk__L2_N1),
	.Y(scan_clk__L3_N0));
   CLKBUFX20M scan_clk__L2_I1 (.A(scan_clk__L1_N0),
	.Y(scan_clk__L2_N1));
   CLKINVX32M scan_clk__L2_I0 (.A(scan_clk__L1_N0),
	.Y(scan_clk__L2_N0));
   CLKINVX40M scan_clk__L1_I0 (.A(scan_clk),
	.Y(scan_clk__L1_N0));
   CLKINVX32M UART_CLK__L2_I0 (.A(UART_CLK__L1_N0),
	.Y(UART_CLK__L2_N0));
   CLKINVX40M UART_CLK__L1_I0 (.A(UART_CLK),
	.Y(UART_CLK__L1_N0));
   CLKBUFX20M RX_SCAN_CLK__L8_I0 (.A(RX_SCAN_CLK__L7_N0),
	.Y(RX_SCAN_CLK__L8_N0));
   CLKBUFX24M RX_SCAN_CLK__L7_I0 (.A(RX_SCAN_CLK__L6_N0),
	.Y(RX_SCAN_CLK__L7_N0));
   CLKBUFX40M RX_SCAN_CLK__L6_I0 (.A(RX_SCAN_CLK__L5_N0),
	.Y(RX_SCAN_CLK__L6_N0));
   CLKBUFX24M RX_SCAN_CLK__L5_I0 (.A(RX_SCAN_CLK__L4_N0),
	.Y(RX_SCAN_CLK__L5_N0));
   CLKBUFX24M RX_SCAN_CLK__L4_I0 (.A(RX_SCAN_CLK__L3_N0),
	.Y(RX_SCAN_CLK__L4_N0));
   CLKBUFX24M RX_SCAN_CLK__L3_I0 (.A(RX_SCAN_CLK__L2_N0),
	.Y(RX_SCAN_CLK__L3_N0));
   CLKBUFX24M RX_SCAN_CLK__L2_I0 (.A(RX_SCAN_CLK__L1_N0),
	.Y(RX_SCAN_CLK__L2_N0));
   CLKBUFX24M RX_SCAN_CLK__L1_I0 (.A(RX_SCAN_CLK),
	.Y(RX_SCAN_CLK__L1_N0));
   CLKBUFX32M TX_SCAN_CLK__L1_I0 (.A(TX_SCAN_CLK),
	.Y(TX_SCAN_CLK__L1_N0));
   CLKINVX32M REF_CLK__L2_I0 (.A(REF_CLK__L1_N0),
	.Y(REF_CLK__L2_N0));
   CLKINVX40M REF_CLK__L1_I0 (.A(REF_CLK),
	.Y(REF_CLK__L1_N0));
   CLKINVX40M REF_SCAN_CLK__L3_I1 (.A(REF_SCAN_CLK__L2_N0),
	.Y(REF_SCAN_CLK__L3_N1));
   CLKINVX40M REF_SCAN_CLK__L3_I0 (.A(REF_SCAN_CLK__L2_N0),
	.Y(REF_SCAN_CLK__L3_N0));
   CLKINVX40M REF_SCAN_CLK__L2_I0 (.A(REF_SCAN_CLK__L1_N0),
	.Y(REF_SCAN_CLK__L2_N0));
   CLKBUFX32M REF_SCAN_CLK__L1_I0 (.A(REF_SCAN_CLK),
	.Y(REF_SCAN_CLK__L1_N0));
   BUFX8M FE_OFC23_RF_Address_0_ (.A(RF_Address[0]),
	.Y(FE_OFN23_RF_Address_0_));
   CLKBUFX6M FE_OFC22_RF_Address_1_ (.A(RF_Address[1]),
	.Y(FE_OFN22_RF_Address_1_));
   BUFX32M FE_OFC20_REF_SCAN_RST (.A(REF_SCAN_RST),
	.Y(FE_OFN20_REF_SCAN_RST));
   BUFX4M FE_OFC19_SE (.A(FE_OFN18_SE),
	.Y(FE_OFN19_SE));
   CLKBUFX6M FE_OFC18_SE (.A(FE_OFN17_SE),
	.Y(FE_OFN18_SE));
   CLKBUFX6M FE_OFC17_SE (.A(SE),
	.Y(FE_OFN17_SE));
   BUFX10M FE_OFC16_SO_0_ (.A(FE_OFN15_SO_0_),
	.Y(SO[0]));
   OR2X2M U9 (.A(CLKG_EN),
	.B(test_mode),
	.Y(_0_net_));
   mux2X1_0 U0_mux2X1 (.IN_0(REF_CLK__L2_N0),
	.IN_1(scan_clk__L4_N0),
	.SEL(test_mode),
	.OUT(REF_SCAN_CLK));
   mux2X1_5 U1_mux2X1 (.IN_0(UART_CLK__L2_N0),
	.IN_1(scan_clk__L2_N0),
	.SEL(test_mode),
	.OUT(RX_SCAN_CLK));
   mux2X1_4 U2_mux2X1 (.IN_0(UART_TX_CLK),
	.IN_1(scan_clk__L4_N0),
	.SEL(test_mode),
	.OUT(TX_SCAN_CLK));
   mux2X1_3 U3_mux2X1 (.IN_0(RST_N),
	.IN_1(FE_PHN26_scan_rst),
	.SEL(test_mode),
	.OUT(RST_SCAN_RST));
   mux2X1_2 U4_mux2X1 (.IN_0(SYNC_REF_RST),
	.IN_1(FE_PHN26_scan_rst),
	.SEL(test_mode),
	.OUT(REF_SCAN_RST));
   mux2X1_1 U5_mux2X1 (.IN_0(SYNC_UART_RST),
	.IN_1(FE_PHN26_scan_rst),
	.SEL(test_mode),
	.OUT(UART_SCAN_RST));
   RST_SYNC_test_0 U0_RST_SYNC (.RST(RST_SCAN_RST),
	.CLK(RX_SCAN_CLK__L8_N0),
	.SYNC_RST(SYNC_UART_RST),
	.test_si(n19),
	.test_se(SE));
   RST_SYNC_test_1 U1_RST_SYNC (.RST(RST_SCAN_RST),
	.CLK(REF_SCAN_CLK__L3_N1),
	.SYNC_RST(SYNC_REF_RST),
	.test_si(n11),
	.test_se(FE_OFN18_SE));
   DATA_SYNC_test_0 U0_ref_sync (.dest_clk(REF_SCAN_CLK__L3_N1),
	.dest_rst(REF_SCAN_RST),
	.unsync_bus(UART_RX_OUT),
	.bus_enable(UART_RX_V_OUT),
	.sync_bus(UART_RX_SYNC),
	.enable_pulse_d(UART_RX_V_SYNC),
	.test_si(UART_TX_Busy_SYNC),
	.test_so(n11),
	.test_se(FE_OFN17_SE),
	.p1(FE_OFN18_SE),
	.p2(FE_OFN20_REF_SCAN_RST));
   DATA_SYNC_test_1 U1_uart_sync (.dest_clk(TX_SCAN_CLK__L1_N0),
	.dest_rst(UART_SCAN_RST),
	.unsync_bus(UART_TX_IN),
	.bus_enable(UART_TX_VLD),
	.sync_bus(UART_TX_SYNC),
	.enable_pulse_d(UART_TX_V_SYNC),
	.test_si(SYNC_REF_RST),
	.test_so(n10),
	.test_se(FE_OFN19_SE));
   BIT_SYNC_test_1 U0_bit_sync (.dest_clk(REF_SCAN_CLK__L3_N1),
	.dest_rst(REF_SCAN_RST),
	.unsync_bit(UART_TX_Busy),
	.sync_bit(UART_TX_Busy_SYNC),
	.test_si(n12),
	.test_se(FE_OFN18_SE),
	.p1(FE_OFN19_SE));
   ClkDiv_test_1 U0_ClkDiv (.i_ref_clk(RX_SCAN_CLK),
	.i_rst(UART_SCAN_RST),
	.i_div_ratio({ DIV_RATIO[3],
		DIV_RATIO[2],
		DIV_RATIO[1],
		DIV_RATIO[0] }),
	.o_div_clk(UART_TX_CLK),
	.test_si(ALU_OUT_VLD),
	.test_so(n19),
	.test_se(SE));
   UART_test_1 U0_UART (.RST(UART_SCAN_RST),
	.TX_CLK(TX_SCAN_CLK__L1_N0),
	.RX_CLK(RX_SCAN_CLK__L8_N0),
	.RX_IN_S(UART_RX_IN),
	.RX_OUT_P(UART_RX_OUT),
	.RX_OUT_V(UART_RX_V_OUT),
	.TX_IN_P(UART_TX_SYNC),
	.TX_IN_V(UART_TX_V_SYNC),
	.TX_OUT_S(FE_OFN15_SO_0_),
	.TX_OUT_V(UART_TX_Busy),
	.Prescale({ UART_Config[6],
		UART_Config[5],
		UART_Config[4],
		UART_Config[3],
		UART_Config[2] }),
	.parity_enable(UART_Config[0]),
	.parity_type(UART_Config[1]),
	.parity_error(parity_error),
	.framing_error(framing_error),
	.test_si2(n10),
	.test_si1(n13),
	.test_so1(n12),
	.test_se(FE_OFN18_SE),
	.p1(FE_OFN19_SE));
   SYS_CTRL_test_1 U0_SYS_CTRL (.CLK(REF_SCAN_CLK__L3_N1),
	.RST(REF_SCAN_RST),
	.RF_RdData(RF_RdData),
	.RF_RdData_VLD(RF_RdData_VLD),
	.RF_WrEn(RF_WrEn),
	.RF_RdEn(RF_RdEn),
	.RF_Address(RF_Address),
	.RF_WrData(RF_WrData),
	.ALU_OUT(ALU_OUT),
	.ALU_OUT_VLD(ALU_OUT_VLD),
	.ALU_EN(ALU_EN),
	.ALU_FUN(ALU_FUN),
	.CLKG_EN(CLKG_EN),
	.UART_RX_DATA(UART_RX_SYNC),
	.UART_RX_VLD(UART_RX_V_SYNC),
	.UART_TX_Busy(UART_TX_Busy_SYNC),
	.UART_TX_DATA(UART_TX_IN),
	.UART_TX_VLD(UART_TX_VLD),
	.test_si2(SI[0]),
	.test_si1(n16),
	.test_so2(n13),
	.test_so1(SO[1]),
	.test_se(FE_OFN17_SE),
	.p1(FE_OFN18_SE),
	.p2(FE_OFN19_SE),
	.p3(FE_OFN20_REF_SCAN_RST));
   RegFile_test_1 U0_RegFile (.CLK(REF_SCAN_CLK__L3_N1),
	.RST(REF_SCAN_RST),
	.WrEn(RF_WrEn),
	.RdEn(RF_RdEn),
	.Address({ RF_Address[3],
		RF_Address[2],
		FE_OFN22_RF_Address_1_,
		FE_OFN23_RF_Address_0_ }),
	.WrData(RF_WrData),
	.RdData(RF_RdData),
	.RdData_VLD(RF_RdData_VLD),
	.REG0(Operand_A),
	.REG1(Operand_B),
	.REG2({ SYNOPSYS_UNCONNECTED__0,
		UART_Config[6],
		UART_Config[5],
		UART_Config[4],
		UART_Config[3],
		UART_Config[2],
		UART_Config[1],
		UART_Config[0] }),
	.REG3({ SYNOPSYS_UNCONNECTED__1,
		SYNOPSYS_UNCONNECTED__2,
		SYNOPSYS_UNCONNECTED__3,
		SYNOPSYS_UNCONNECTED__4,
		DIV_RATIO[3],
		DIV_RATIO[2],
		DIV_RATIO[1],
		DIV_RATIO[0] }),
	.test_si2(SI[1]),
	.test_si1(SYNC_UART_RST),
	.test_so2(n16),
	.test_so1(SO[2]),
	.test_se(SE),
	.p1(FE_OFN17_SE),
	.p2(FE_OFN18_SE),
	.p3(FE_OFN20_REF_SCAN_RST),
	.REF_SCAN_CLK__L3_N0(REF_SCAN_CLK__L3_N0));
   ALU_test_1 U0_ALU (.A(Operand_A),
	.B(Operand_B),
	.EN(ALU_EN),
	.ALU_FUN(ALU_FUN),
	.CLK(ALU_CLK),
	.RST(REF_SCAN_RST),
	.ALU_OUT(ALU_OUT),
	.OUT_VALID(ALU_OUT_VLD),
	.test_si(SI[2]),
	.test_se(FE_OFN18_SE),
	.p1(FE_OFN19_SE));
   CLK_GATE U0_CLK_GATE (.CLK_EN(_0_net_),
	.CLK(REF_SCAN_CLK__L1_N0),
	.GATED_CLK(ALU_CLK));
endmodule

/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : K-2015.06
// Date      : Thu Aug 18 04:44:13 2022
/////////////////////////////////////////////////////////////
module mux2X1_0 (
	IN_0, 
	IN_1, 
	SEL, 
	OUT);
   input IN_0;
   input IN_1;
   input SEL;
   output OUT;

   // Internal wires
   wire N0;

   assign N0 = SEL ;

   MX2X4M U1 (.S0(N0),
	.B(IN_1),
	.A(IN_0),
	.Y(OUT));
endmodule

module mux2X1_5 (
	IN_0, 
	IN_1, 
	SEL, 
	OUT);
   input IN_0;
   input IN_1;
   input SEL;
   output OUT;

   // Internal wires
   wire N0;

   assign N0 = SEL ;

   MX2X8M U1 (.S0(N0),
	.B(IN_1),
	.A(IN_0),
	.Y(OUT));
endmodule

module mux2X1_4 (
	IN_0, 
	IN_1, 
	SEL, 
	OUT);
   input IN_0;
   input IN_1;
   input SEL;
   output OUT;

   // Internal wires
   wire N0;

   assign N0 = SEL ;

   MX2X4M U1 (.S0(N0),
	.B(IN_1),
	.A(IN_0),
	.Y(OUT));
endmodule

module mux2X1_3 (
	IN_0, 
	IN_1, 
	SEL, 
	OUT);
   input IN_0;
   input IN_1;
   input SEL;
   output OUT;

   // Internal wires
   wire N0;

   assign N0 = SEL ;

   MX2X2M U1 (.S0(N0),
	.B(IN_1),
	.A(IN_0),
	.Y(OUT));
endmodule

module mux2X1_2 (
	IN_0, 
	IN_1, 
	SEL, 
	OUT);
   input IN_0;
   input IN_1;
   input SEL;
   output OUT;

   // Internal wires
   wire N0;

   assign N0 = SEL ;

   MX2X8M U1 (.S0(N0),
	.B(IN_1),
	.A(IN_0),
	.Y(OUT));
endmodule

module mux2X1_1 (
	IN_0, 
	IN_1, 
	SEL, 
	OUT);
   input IN_0;
   input IN_1;
   input SEL;
   output OUT;

   // Internal wires
   wire N0;

   assign N0 = SEL ;

   MX2X8M U1 (.S0(N0),
	.B(IN_1),
	.A(IN_0),
	.Y(OUT));
endmodule

module RST_SYNC_test_0 (
	RST, 
	CLK, 
	SYNC_RST, 
	test_si, 
	test_se);
   input RST;
   input CLK;
   output SYNC_RST;
   input test_si;
   input test_se;

   // Internal wires
   wire FE_PHN29_n19;
   wire HTIE_LTIEHI_NET;
   wire meta_flop;

   DLY4X1M FE_PHC29_n19 (.A(test_si),
	.Y(FE_PHN29_n19));
   TIEHIM HTIE_LTIEHI (.Y(HTIE_LTIEHI_NET));
   SDFFRQX2M sync_flop_reg (.SI(meta_flop),
	.SE(test_se),
	.D(meta_flop),
	.CK(CLK),
	.RN(RST),
	.Q(SYNC_RST));
   SDFFRQX2M meta_flop_reg (.SI(FE_PHN29_n19),
	.SE(test_se),
	.D(HTIE_LTIEHI_NET),
	.CK(CLK),
	.RN(RST),
	.Q(meta_flop));
endmodule

module RST_SYNC_test_1 (
	RST, 
	CLK, 
	SYNC_RST, 
	test_si, 
	test_se);
   input RST;
   input CLK;
   output SYNC_RST;
   input test_si;
   input test_se;

   // Internal wires
   wire HTIE_LTIEHI_NET;
   wire meta_flop;

   TIEHIM HTIE_LTIEHI (.Y(HTIE_LTIEHI_NET));
   SDFFRQX2M sync_flop_reg (.SI(meta_flop),
	.SE(test_se),
	.D(meta_flop),
	.CK(CLK),
	.RN(RST),
	.Q(SYNC_RST));
   SDFFRQX2M meta_flop_reg (.SI(test_si),
	.SE(test_se),
	.D(HTIE_LTIEHI_NET),
	.CK(CLK),
	.RN(RST),
	.Q(meta_flop));
endmodule

module DATA_SYNC_test_0 (
	dest_clk, 
	dest_rst, 
	unsync_bus, 
	bus_enable, 
	sync_bus, 
	enable_pulse_d, 
	test_si, 
	test_so, 
	test_se, 
	p1, 
	p2);
   input dest_clk;
   input dest_rst;
   input [7:0] unsync_bus;
   input bus_enable;
   output [7:0] sync_bus;
   output enable_pulse_d;
   input test_si;
   output test_so;
   input test_se;
   input p1;
   input p2;

   // Internal wires
   wire sync_flop;
   wire meta_flop;
   wire enable_flop;
   wire n1;
   wire n4;
   wire n6;
   wire n8;
   wire n10;
   wire n12;
   wire n14;
   wire n16;
   wire n18;
   wire n23;

   assign test_so = sync_flop ;

   SDFFRQX2M enable_flop_reg (.SI(test_si),
	.SE(p1),
	.D(sync_flop),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(enable_flop));
   SDFFRQX2M \sync_bus_reg[7]  (.SI(sync_bus[6]),
	.SE(test_se),
	.D(n18),
	.CK(dest_clk),
	.RN(p2),
	.Q(sync_bus[7]));
   SDFFRQX2M \sync_bus_reg[3]  (.SI(sync_bus[2]),
	.SE(test_se),
	.D(n10),
	.CK(dest_clk),
	.RN(p2),
	.Q(sync_bus[3]));
   SDFFRQX2M \sync_bus_reg[0]  (.SI(meta_flop),
	.SE(p1),
	.D(n4),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(sync_bus[0]));
   SDFFRQX2M \sync_bus_reg[6]  (.SI(sync_bus[5]),
	.SE(test_se),
	.D(n16),
	.CK(dest_clk),
	.RN(p2),
	.Q(sync_bus[6]));
   SDFFRQX2M \sync_bus_reg[4]  (.SI(sync_bus[3]),
	.SE(test_se),
	.D(n12),
	.CK(dest_clk),
	.RN(p2),
	.Q(sync_bus[4]));
   SDFFRQX2M \sync_bus_reg[2]  (.SI(sync_bus[1]),
	.SE(test_se),
	.D(n8),
	.CK(dest_clk),
	.RN(p2),
	.Q(sync_bus[2]));
   SDFFRQX2M \sync_bus_reg[5]  (.SI(sync_bus[4]),
	.SE(test_se),
	.D(n14),
	.CK(dest_clk),
	.RN(p2),
	.Q(sync_bus[5]));
   SDFFRQX2M \sync_bus_reg[1]  (.SI(sync_bus[0]),
	.SE(p1),
	.D(n6),
	.CK(dest_clk),
	.RN(p2),
	.Q(sync_bus[1]));
   SDFFRQX2M enable_pulse_d_reg (.SI(enable_flop),
	.SE(p1),
	.D(n23),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(enable_pulse_d));
   SDFFRQX2M meta_flop_reg (.SI(enable_pulse_d),
	.SE(p1),
	.D(bus_enable),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(meta_flop));
   INVX2M U4 (.A(n1),
	.Y(n23));
   NAND2BX2M U5 (.AN(enable_flop),
	.B(sync_flop),
	.Y(n1));
   AO22X1M U6 (.A0(unsync_bus[0]),
	.A1(n23),
	.B0(sync_bus[0]),
	.B1(n1),
	.Y(n4));
   AO22X1M U7 (.A0(unsync_bus[1]),
	.A1(n23),
	.B0(sync_bus[1]),
	.B1(n1),
	.Y(n6));
   AO22X1M U8 (.A0(unsync_bus[2]),
	.A1(n23),
	.B0(sync_bus[2]),
	.B1(n1),
	.Y(n8));
   AO22X1M U9 (.A0(unsync_bus[3]),
	.A1(n23),
	.B0(sync_bus[3]),
	.B1(n1),
	.Y(n10));
   AO22X1M U10 (.A0(unsync_bus[4]),
	.A1(n23),
	.B0(sync_bus[4]),
	.B1(n1),
	.Y(n12));
   AO22X1M U11 (.A0(unsync_bus[5]),
	.A1(n23),
	.B0(sync_bus[5]),
	.B1(n1),
	.Y(n14));
   AO22X1M U12 (.A0(unsync_bus[6]),
	.A1(n23),
	.B0(sync_bus[6]),
	.B1(n1),
	.Y(n16));
   AO22X1M U25 (.A0(unsync_bus[7]),
	.A1(n23),
	.B0(sync_bus[7]),
	.B1(n1),
	.Y(n18));
   SDFFRQX1M sync_flop_reg (.SI(sync_bus[7]),
	.SE(p1),
	.D(meta_flop),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(sync_flop));
endmodule

module DATA_SYNC_test_1 (
	dest_clk, 
	dest_rst, 
	unsync_bus, 
	bus_enable, 
	sync_bus, 
	enable_pulse_d, 
	test_si, 
	test_so, 
	test_se);
   input dest_clk;
   input dest_rst;
   input [7:0] unsync_bus;
   input bus_enable;
   output [7:0] sync_bus;
   output enable_pulse_d;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire sync_flop;
   wire meta_flop;
   wire enable_flop;
   wire n23;
   wire n27;
   wire n29;
   wire n31;
   wire n33;
   wire n35;
   wire n37;
   wire n39;
   wire n41;
   wire n44;

   assign test_so = sync_flop ;

   SDFFRQX2M enable_flop_reg (.SI(test_si),
	.SE(test_se),
	.D(sync_flop),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(enable_flop));
   SDFFRQX2M \sync_bus_reg[7]  (.SI(sync_bus[6]),
	.SE(test_se),
	.D(n27),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(sync_bus[7]));
   SDFFRQX2M \sync_bus_reg[0]  (.SI(meta_flop),
	.SE(test_se),
	.D(n41),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(sync_bus[0]));
   SDFFRQX2M \sync_bus_reg[6]  (.SI(sync_bus[5]),
	.SE(test_se),
	.D(n29),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(sync_bus[6]));
   SDFFRQX2M \sync_bus_reg[5]  (.SI(sync_bus[4]),
	.SE(test_se),
	.D(n31),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(sync_bus[5]));
   SDFFRQX2M \sync_bus_reg[4]  (.SI(sync_bus[3]),
	.SE(test_se),
	.D(n33),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(sync_bus[4]));
   SDFFRQX2M \sync_bus_reg[3]  (.SI(sync_bus[2]),
	.SE(test_se),
	.D(n35),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(sync_bus[3]));
   SDFFRQX2M \sync_bus_reg[2]  (.SI(sync_bus[1]),
	.SE(test_se),
	.D(n37),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(sync_bus[2]));
   SDFFRQX2M \sync_bus_reg[1]  (.SI(sync_bus[0]),
	.SE(test_se),
	.D(n39),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(sync_bus[1]));
   SDFFRQX2M enable_pulse_d_reg (.SI(enable_flop),
	.SE(test_se),
	.D(n23),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(enable_pulse_d));
   SDFFRQX2M meta_flop_reg (.SI(enable_pulse_d),
	.SE(test_se),
	.D(bus_enable),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(meta_flop));
   SDFFRQX1M sync_flop_reg (.SI(sync_bus[7]),
	.SE(test_se),
	.D(meta_flop),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(sync_flop));
   INVX2M U4 (.A(n44),
	.Y(n23));
   NAND2BX2M U5 (.AN(enable_flop),
	.B(sync_flop),
	.Y(n44));
   AO22X1M U6 (.A0(unsync_bus[0]),
	.A1(n23),
	.B0(sync_bus[0]),
	.B1(n44),
	.Y(n41));
   AO22X1M U7 (.A0(unsync_bus[1]),
	.A1(n23),
	.B0(sync_bus[1]),
	.B1(n44),
	.Y(n39));
   AO22X1M U8 (.A0(unsync_bus[2]),
	.A1(n23),
	.B0(sync_bus[2]),
	.B1(n44),
	.Y(n37));
   AO22X1M U9 (.A0(unsync_bus[3]),
	.A1(n23),
	.B0(sync_bus[3]),
	.B1(n44),
	.Y(n35));
   AO22X1M U10 (.A0(unsync_bus[4]),
	.A1(n23),
	.B0(sync_bus[4]),
	.B1(n44),
	.Y(n33));
   AO22X1M U11 (.A0(unsync_bus[5]),
	.A1(n23),
	.B0(sync_bus[5]),
	.B1(n44),
	.Y(n31));
   AO22X1M U12 (.A0(unsync_bus[6]),
	.A1(n23),
	.B0(sync_bus[6]),
	.B1(n44),
	.Y(n29));
   AO22X1M U25 (.A0(unsync_bus[7]),
	.A1(n23),
	.B0(sync_bus[7]),
	.B1(n44),
	.Y(n27));
endmodule

module BIT_SYNC_test_1 (
	dest_clk, 
	dest_rst, 
	unsync_bit, 
	sync_bit, 
	test_si, 
	test_se, 
	p1);
   input dest_clk;
   input dest_rst;
   input unsync_bit;
   output sync_bit;
   input test_si;
   input test_se;
   input p1;

   // Internal wires
   wire meta_flop;

   SDFFRQX2M sync_flop_reg (.SI(meta_flop),
	.SE(test_se),
	.D(meta_flop),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(sync_bit));
   SDFFRQX2M meta_flop_reg (.SI(test_si),
	.SE(p1),
	.D(unsync_bit),
	.CK(dest_clk),
	.RN(dest_rst),
	.Q(meta_flop));
endmodule

module ClkDiv_test_1 (
	i_ref_clk, 
	i_rst, 
	i_clk_en, 
	i_div_ratio, 
	o_div_clk, 
	test_si, 
	test_so, 
	test_se);
   input i_ref_clk;
   input i_rst;
   input i_clk_en;
   input [3:0] i_div_ratio;
   output o_div_clk;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire RX_SCAN_CLK__Fence_N0__L3_N0;
   wire RX_SCAN_CLK__Fence_N0__L2_N0;
   wire RX_SCAN_CLK__Fence_N0__L1_N0;
   wire div_clk__SKEWGRP1__MMExc_0_NET;
   wire RX_SCAN_CLK__Fence_N0;
   wire HTIE_LTIEHI_NET;
   wire div_clk;
   wire odd_edge_tog;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire [2:0] count;

   assign test_so = odd_edge_tog ;

   CLKBUFX24M RX_SCAN_CLK__Fence_N0__L3_I0 (.A(RX_SCAN_CLK__Fence_N0__L2_N0),
	.Y(RX_SCAN_CLK__Fence_N0__L3_N0));
   CLKBUFX24M RX_SCAN_CLK__Fence_N0__L2_I0 (.A(RX_SCAN_CLK__Fence_N0__L1_N0),
	.Y(RX_SCAN_CLK__Fence_N0__L2_N0));
   CLKBUFX24M RX_SCAN_CLK__Fence_N0__L1_I0 (.A(RX_SCAN_CLK__Fence_N0),
	.Y(RX_SCAN_CLK__Fence_N0__L1_N0));
   CLKBUFX20M div_clk__SKEWGRP1__MMExc_0 (.A(div_clk),
	.Y(div_clk__SKEWGRP1__MMExc_0_NET));
   CLKBUFX40M RX_SCAN_CLK__Fence_I0 (.A(i_ref_clk),
	.Y(RX_SCAN_CLK__Fence_N0));
   TIEHIM HTIE_LTIEHI (.Y(HTIE_LTIEHI_NET));
   SDFFRHQX8M div_clk_reg (.SI(n15),
	.SE(test_se),
	.D(n41),
	.CK(RX_SCAN_CLK__Fence_N0),
	.RN(i_rst),
	.Q(div_clk));
   SDFFRQX2M \count_reg[1]  (.SI(n13),
	.SE(test_se),
	.D(n39),
	.CK(RX_SCAN_CLK__Fence_N0),
	.RN(i_rst),
	.Q(count[1]));
   SDFFRQX2M \count_reg[2]  (.SI(n14),
	.SE(test_se),
	.D(n38),
	.CK(RX_SCAN_CLK__Fence_N0),
	.RN(i_rst),
	.Q(count[2]));
   SDFFRQX2M \count_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(n42),
	.CK(RX_SCAN_CLK__Fence_N0),
	.RN(i_rst),
	.Q(count[0]));
   SDFFSQX1M odd_edge_tog_reg (.SI(div_clk__SKEWGRP1__MMExc_0_NET),
	.SE(test_se),
	.D(n40),
	.CK(RX_SCAN_CLK__Fence_N0),
	.SN(i_rst),
	.Q(odd_edge_tog));
   OAI21X2M U9 (.A0(i_div_ratio[3]),
	.A1(n36),
	.B0(HTIE_LTIEHI_NET),
	.Y(n22));
   XNOR2X2M U10 (.A(n35),
	.B(n14),
	.Y(n31));
   OAI21X2M U11 (.A0(n12),
	.A1(n5),
	.B0(n36),
	.Y(n35));
   AOI21X2M U12 (.A0(n13),
	.A1(n4),
	.B0(n22),
	.Y(n21));
   NAND2X2M U13 (.A(n5),
	.B(n12),
	.Y(n36));
   INVX2M U14 (.A(n32),
	.Y(n11));
   INVX2M U15 (.A(n26),
	.Y(n4));
   INVX2M U16 (.A(n22),
	.Y(n3));
   XNOR2X2M U17 (.A(n12),
	.B(count[0]),
	.Y(n32));
   OAI32X1M U18 (.A0(n19),
	.A1(count[2]),
	.A2(n14),
	.B0(n20),
	.B1(n15),
	.Y(n38));
   INVX2M U19 (.A(count[2]),
	.Y(n15));
   AOI21BX2M U20 (.A0(n4),
	.A1(n14),
	.B0N(n21),
	.Y(n20));
   OAI32X1M U21 (.A0(n22),
	.A1(count[0]),
	.A2(n26),
	.B0(n3),
	.B1(n13),
	.Y(n42));
   OAI21X2M U22 (.A0(n28),
	.A1(n29),
	.B0(i_div_ratio[0]),
	.Y(n24));
   NOR4X1M U23 (.A(odd_edge_tog),
	.B(n32),
	.C(n33),
	.D(n34),
	.Y(n28));
   NOR4BX1M U24 (.AN(odd_edge_tog),
	.B(n11),
	.C(n30),
	.D(n31),
	.Y(n29));
   CLKXOR2X2M U25 (.A(i_div_ratio[3]),
	.B(count[2]),
	.Y(n33));
   XNOR2X2M U26 (.A(n37),
	.B(count[2]),
	.Y(n30));
   NAND2X2M U27 (.A(i_div_ratio[3]),
	.B(n36),
	.Y(n37));
   OAI22X1M U28 (.A0(n21),
	.A1(n14),
	.B0(count[1]),
	.B1(n19),
	.Y(n39));
   NAND2X2M U29 (.A(n27),
	.B(n24),
	.Y(n26));
   OR4X1M U30 (.A(n30),
	.B(n31),
	.C(n11),
	.D(i_div_ratio[0]),
	.Y(n27));
   NAND3X2M U31 (.A(n4),
	.B(count[0]),
	.C(n3),
	.Y(n19));
   CLKXOR2X2M U32 (.A(i_div_ratio[2]),
	.B(count[1]),
	.Y(n34));
   INVX2M U33 (.A(count[1]),
	.Y(n14));
   INVX2M U34 (.A(i_div_ratio[2]),
	.Y(n5));
   INVX2M U35 (.A(i_div_ratio[1]),
	.Y(n12));
   CLKXOR2X2M U36 (.A(div_clk__SKEWGRP1__MMExc_0_NET),
	.B(n25),
	.Y(n41));
   NOR2X2M U37 (.A(n4),
	.B(n22),
	.Y(n25));
   CLKXOR2X2M U38 (.A(odd_edge_tog),
	.B(n2),
	.Y(n40));
   NOR2X2M U39 (.A(n24),
	.B(n22),
	.Y(n2));
   INVX2M U40 (.A(count[0]),
	.Y(n13));
   MX2X3M U41 (.S0(n3),
	.B(div_clk),
	.A(RX_SCAN_CLK__Fence_N0__L3_N0),
	.Y(o_div_clk));
endmodule

module uart_tx_fsm_test_1 (
	CLK, 
	RST, 
	Data_Valid, 
	ser_done, 
	parity_enable, 
	Ser_enable, 
	mux_sel, 
	busy, 
	test_si, 
	test_so, 
	test_se);
   input CLK;
   input RST;
   input Data_Valid;
   input ser_done;
   input parity_enable;
   output Ser_enable;
   output [1:0] mux_sel;
   output busy;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire busy_c;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n5;
   wire n6;
   wire n7;
   wire [2:0] current_state;
   wire [2:0] next_state;

   assign test_so = current_state[2] ;

   SDFFRQX2M busy_reg (.SI(test_si),
	.SE(test_se),
	.D(busy_c),
	.CK(CLK),
	.RN(RST),
	.Q(busy));
   SDFFRQX2M \current_state_reg[2]  (.SI(n7),
	.SE(test_se),
	.D(next_state[2]),
	.CK(CLK),
	.RN(RST),
	.Q(current_state[2]));
   SDFFRQX2M \current_state_reg[1]  (.SI(current_state[0]),
	.SE(test_se),
	.D(next_state[1]),
	.CK(CLK),
	.RN(RST),
	.Q(current_state[1]));
   SDFFRQX2M \current_state_reg[0]  (.SI(busy),
	.SE(test_se),
	.D(next_state[0]),
	.CK(CLK),
	.RN(RST),
	.Q(current_state[0]));
   INVX2M U7 (.A(n13),
	.Y(n5));
   NOR3X2M U8 (.A(n9),
	.B(ser_done),
	.C(current_state[2]),
	.Y(Ser_enable));
   OAI21X2M U9 (.A0(current_state[1]),
	.A1(n6),
	.B0(n12),
	.Y(n13));
   NAND2X2M U10 (.A(current_state[1]),
	.B(n6),
	.Y(n12));
   NAND2X2M U11 (.A(n5),
	.B(current_state[0]),
	.Y(n9));
   INVX2M U12 (.A(current_state[0]),
	.Y(n6));
   OAI2B2X1M U13 (.A0(n12),
	.A1N(current_state[2]),
	.B0(current_state[2]),
	.B1(n13),
	.Y(mux_sel[0]));
   OAI21X2M U14 (.A0(current_state[2]),
	.A1(current_state[0]),
	.B0(n12),
	.Y(mux_sel[1]));
   NOR3X2M U15 (.A(n7),
	.B(current_state[2]),
	.C(n8),
	.Y(next_state[2]));
   AOI2B1X1M U16 (.A0(ser_done),
	.A1N(parity_enable),
	.B0(n6),
	.Y(n8));
   OAI21X2M U17 (.A0(current_state[2]),
	.A1(n6),
	.B0(n12),
	.Y(busy_c));
   AOI21X2M U18 (.A0(n5),
	.A1(n9),
	.B0(current_state[2]),
	.Y(next_state[1]));
   AOI21X2M U19 (.A0(n10),
	.A1(n11),
	.B0(current_state[2]),
	.Y(next_state[0]));
   OAI21X2M U20 (.A0(Data_Valid),
	.A1(current_state[0]),
	.B0(n7),
	.Y(n11));
   NAND2BX2M U21 (.AN(ser_done),
	.B(current_state[0]),
	.Y(n10));
   INVX2M U22 (.A(current_state[1]),
	.Y(n7));
endmodule

module Serializer_test_1 (
	CLK, 
	RST, 
	DATA, 
	Enable, 
	Busy, 
	Data_Valid, 
	ser_out, 
	ser_done, 
	test_si, 
	test_so, 
	test_se);
   input CLK;
   input RST;
   input [7:0] DATA;
   input Enable;
   input Busy;
   input Data_Valid;
   output ser_out;
   output ser_done;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire N23;
   wire N24;
   wire N25;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n13;
   wire n14;
   wire n36;
   wire [7:1] DATA_V;
   wire [2:0] ser_count;

   assign test_so = n36 ;

   SDFFRQX2M \DATA_V_reg[6]  (.SI(DATA_V[5]),
	.SE(test_se),
	.D(n30),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[6]));
   SDFFRQX2M \DATA_V_reg[5]  (.SI(DATA_V[4]),
	.SE(test_se),
	.D(n31),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[5]));
   SDFFRQX2M \DATA_V_reg[4]  (.SI(DATA_V[3]),
	.SE(test_se),
	.D(n32),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[4]));
   SDFFRQX2M \DATA_V_reg[3]  (.SI(DATA_V[2]),
	.SE(test_se),
	.D(n33),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[3]));
   SDFFRQX2M \DATA_V_reg[2]  (.SI(DATA_V[1]),
	.SE(test_se),
	.D(n34),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[2]));
   SDFFRQX2M \DATA_V_reg[1]  (.SI(ser_out),
	.SE(test_se),
	.D(n35),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[1]));
   SDFFRQX2M \DATA_V_reg[7]  (.SI(DATA_V[6]),
	.SE(test_se),
	.D(n29),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[7]));
   SDFFRQX2M \DATA_V_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(n28),
	.CK(CLK),
	.RN(RST),
	.Q(ser_out));
   SDFFRQX2M \ser_count_reg[2]  (.SI(n14),
	.SE(test_se),
	.D(N25),
	.CK(CLK),
	.RN(RST),
	.Q(ser_count[2]));
   SDFFRQX2M \ser_count_reg[1]  (.SI(ser_count[0]),
	.SE(test_se),
	.D(N24),
	.CK(CLK),
	.RN(RST),
	.Q(ser_count[1]));
   SDFFRQX2M \ser_count_reg[0]  (.SI(DATA_V[7]),
	.SE(test_se),
	.D(N23),
	.CK(CLK),
	.RN(RST),
	.Q(ser_count[0]));
   NOR2X2M U14 (.A(n13),
	.B(n18),
	.Y(n17));
   NOR2X2M U15 (.A(n18),
	.B(n17),
	.Y(n15));
   INVX2M U16 (.A(Enable),
	.Y(n13));
   OAI32X1M U17 (.A0(n25),
	.A1(n14),
	.A2(n13),
	.B0(n26),
	.B1(n36),
	.Y(N25));
   NAND2X2M U18 (.A(ser_count[0]),
	.B(n36),
	.Y(n25));
   AOI21X2M U19 (.A0(Enable),
	.A1(n14),
	.B0(N23),
	.Y(n26));
   INVX2M U20 (.A(ser_count[2]),
	.Y(n36));
   NOR2X2M U21 (.A(n13),
	.B(ser_count[0]),
	.Y(N23));
   OAI2BB1X2M U22 (.A0N(ser_out),
	.A1N(n15),
	.B0(n16),
	.Y(n28));
   AOI22X1M U23 (.A0(DATA_V[1]),
	.A1(n17),
	.B0(DATA[0]),
	.B1(n18),
	.Y(n16));
   OAI2BB1X2M U24 (.A0N(DATA_V[1]),
	.A1N(n15),
	.B0(n24),
	.Y(n35));
   AOI22X1M U25 (.A0(DATA_V[2]),
	.A1(n17),
	.B0(DATA[1]),
	.B1(n18),
	.Y(n24));
   OAI2BB1X2M U26 (.A0N(n15),
	.A1N(DATA_V[2]),
	.B0(n23),
	.Y(n34));
   AOI22X1M U27 (.A0(DATA_V[3]),
	.A1(n17),
	.B0(DATA[2]),
	.B1(n18),
	.Y(n23));
   OAI2BB1X2M U28 (.A0N(n15),
	.A1N(DATA_V[3]),
	.B0(n22),
	.Y(n33));
   AOI22X1M U29 (.A0(DATA_V[4]),
	.A1(n17),
	.B0(DATA[3]),
	.B1(n18),
	.Y(n22));
   OAI2BB1X2M U30 (.A0N(n15),
	.A1N(DATA_V[4]),
	.B0(n21),
	.Y(n32));
   AOI22X1M U31 (.A0(DATA_V[5]),
	.A1(n17),
	.B0(DATA[4]),
	.B1(n18),
	.Y(n21));
   OAI2BB1X2M U32 (.A0N(n15),
	.A1N(DATA_V[5]),
	.B0(n20),
	.Y(n31));
   AOI22X1M U33 (.A0(DATA_V[6]),
	.A1(n17),
	.B0(DATA[5]),
	.B1(n18),
	.Y(n20));
   OAI2BB1X2M U34 (.A0N(n15),
	.A1N(DATA_V[6]),
	.B0(n19),
	.Y(n30));
   AOI22X1M U35 (.A0(DATA_V[7]),
	.A1(n17),
	.B0(DATA[6]),
	.B1(n18),
	.Y(n19));
   AO22X1M U36 (.A0(n15),
	.A1(DATA_V[7]),
	.B0(DATA[7]),
	.B1(n18),
	.Y(n29));
   AND3X2M U37 (.A(ser_count[0]),
	.B(ser_count[2]),
	.C(ser_count[1]),
	.Y(ser_done));
   NOR2BX2M U39 (.AN(Data_Valid),
	.B(Busy),
	.Y(n18));
   NOR2X2M U40 (.A(n27),
	.B(n13),
	.Y(N24));
   CLKXOR2X2M U41 (.A(ser_count[0]),
	.B(n14),
	.Y(n27));
   INVX2M U42 (.A(ser_count[1]),
	.Y(n14));
endmodule

module mux_test_1 (
	CLK, 
	RST, 
	IN_0, 
	IN_1, 
	IN_2, 
	IN_3, 
	SEL, 
	OUT, 
	test_si, 
	test_se);
   input CLK;
   input RST;
   input IN_0;
   input IN_1;
   input IN_2;
   input IN_3;
   input [1:0] SEL;
   output OUT;
   input test_si;
   input test_se;

   // Internal wires
   wire HTIE_LTIEHI_NET;
   wire LTIE_LTIELO_NET;
   wire mux_out;
   wire n3;
   wire n4;
   wire n5;

   TIEHIM HTIE_LTIEHI (.Y(HTIE_LTIEHI_NET));
   TIELOM LTIE_LTIELO (.Y(LTIE_LTIELO_NET));
   INVX2M U5 (.A(SEL[0]),
	.Y(n5));
   OAI2B2X1M U6 (.A0(n3),
	.A1N(SEL[1]),
	.B0(SEL[1]),
	.B1(n4),
	.Y(mux_out));
   AOI22X1M U7 (.A0(LTIE_LTIELO_NET),
	.A1(n5),
	.B0(SEL[0]),
	.B1(IN_1),
	.Y(n4));
   AOI22X1M U8 (.A0(IN_2),
	.A1(n5),
	.B0(HTIE_LTIEHI_NET),
	.B1(SEL[0]),
	.Y(n3));
   SDFFRQX2M OUT_reg (.SI(test_si),
	.SE(test_se),
	.D(mux_out),
	.CK(CLK),
	.RN(RST),
	.Q(OUT));
endmodule

module parity_calc_test_1 (
	CLK, 
	RST, 
	parity_enable, 
	parity_type, 
	DATA, 
	Data_Valid, 
	parity, 
	test_si, 
	test_se);
   input CLK;
   input RST;
   input parity_enable;
   input parity_type;
   input [7:0] DATA;
   input Data_Valid;
   output parity;
   input test_si;
   input test_se;

   // Internal wires
   wire n1;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n8;
   wire n10;
   wire n12;
   wire n14;
   wire n16;
   wire n18;
   wire n20;
   wire n22;
   wire n24;
   wire n2;
   wire [7:0] DATA_V;

   SDFFRQX2M \DATA_V_reg[5]  (.SI(DATA_V[4]),
	.SE(test_se),
	.D(n20),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[5]));
   SDFFRQX2M \DATA_V_reg[1]  (.SI(DATA_V[0]),
	.SE(test_se),
	.D(n12),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[1]));
   SDFFRQX2M \DATA_V_reg[4]  (.SI(DATA_V[3]),
	.SE(test_se),
	.D(n18),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[4]));
   SDFFRQX2M \DATA_V_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(n10),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[0]));
   SDFFRQX2M \DATA_V_reg[2]  (.SI(DATA_V[1]),
	.SE(test_se),
	.D(n14),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[2]));
   SDFFRQX2M parity_reg (.SI(DATA_V[7]),
	.SE(test_se),
	.D(n8),
	.CK(CLK),
	.RN(RST),
	.Q(parity));
   SDFFRQX2M \DATA_V_reg[3]  (.SI(DATA_V[2]),
	.SE(test_se),
	.D(n16),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[3]));
   SDFFRQX2M \DATA_V_reg[6]  (.SI(DATA_V[5]),
	.SE(test_se),
	.D(n22),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[6]));
   SDFFRQX2M \DATA_V_reg[7]  (.SI(DATA_V[6]),
	.SE(test_se),
	.D(n24),
	.CK(CLK),
	.RN(RST),
	.Q(DATA_V[7]));
   XNOR2X2M U2 (.A(DATA_V[2]),
	.B(DATA_V[3]),
	.Y(n5));
   XOR3XLM U3 (.A(DATA_V[5]),
	.B(DATA_V[4]),
	.C(n6),
	.Y(n3));
   CLKXOR2X2M U4 (.A(DATA_V[7]),
	.B(DATA_V[6]),
	.Y(n6));
   OAI2BB2X1M U5 (.A0N(parity),
	.A1N(n2),
	.B0(n1),
	.B1(n2),
	.Y(n8));
   INVX2M U6 (.A(parity_enable),
	.Y(n2));
   XOR3XLM U7 (.A(n3),
	.B(parity_type),
	.C(n4),
	.Y(n1));
   XOR3XLM U8 (.A(DATA_V[1]),
	.B(DATA_V[0]),
	.C(n5),
	.Y(n4));
   AO2B2X2M U9 (.A0(DATA_V[0]),
	.A1N(Data_Valid),
	.B0(Data_Valid),
	.B1(DATA[0]),
	.Y(n10));
   AO2B2X2M U10 (.A0(DATA_V[1]),
	.A1N(Data_Valid),
	.B0(DATA[1]),
	.B1(Data_Valid),
	.Y(n12));
   AO2B2X2M U11 (.A0(DATA_V[2]),
	.A1N(Data_Valid),
	.B0(DATA[2]),
	.B1(Data_Valid),
	.Y(n14));
   AO2B2X2M U12 (.A0(DATA_V[3]),
	.A1N(Data_Valid),
	.B0(DATA[3]),
	.B1(Data_Valid),
	.Y(n16));
   AO2B2X2M U13 (.A0(DATA_V[4]),
	.A1N(Data_Valid),
	.B0(DATA[4]),
	.B1(Data_Valid),
	.Y(n18));
   AO2B2X2M U14 (.A0(DATA_V[5]),
	.A1N(Data_Valid),
	.B0(DATA[5]),
	.B1(Data_Valid),
	.Y(n20));
   AO2B2X2M U15 (.A0(DATA_V[6]),
	.A1N(Data_Valid),
	.B0(DATA[6]),
	.B1(Data_Valid),
	.Y(n22));
   AO2B2X2M U16 (.A0(DATA_V[7]),
	.A1N(Data_Valid),
	.B0(DATA[7]),
	.B1(Data_Valid),
	.Y(n24));
endmodule

module UART_TX_test_1 (
	CLK, 
	RST, 
	P_DATA, 
	Data_Valid, 
	parity_enable, 
	parity_type, 
	TX_OUT, 
	busy, 
	test_si2, 
	test_si1, 
	test_so1, 
	test_se);
   input CLK;
   input RST;
   input [7:0] P_DATA;
   input Data_Valid;
   input parity_enable;
   input parity_type;
   output TX_OUT;
   output busy;
   input test_si2;
   input test_si1;
   output test_so1;
   input test_se;

   // Internal wires
   wire seriz_en;
   wire seriz_done;
   wire ser_data;
   wire parity;
   wire n3;
   wire n4;
   wire [1:0] mux_sel;

   assign test_so1 = parity ;

   uart_tx_fsm_test_1 U0_fsm (.CLK(CLK),
	.RST(RST),
	.Data_Valid(Data_Valid),
	.ser_done(seriz_done),
	.parity_enable(parity_enable),
	.Ser_enable(seriz_en),
	.mux_sel(mux_sel),
	.busy(busy),
	.test_si(n4),
	.test_so(n3),
	.test_se(test_se));
   Serializer_test_1 U0_Serializer (.CLK(CLK),
	.RST(RST),
	.DATA(P_DATA),
	.Enable(seriz_en),
	.Busy(busy),
	.Data_Valid(Data_Valid),
	.ser_out(ser_data),
	.ser_done(seriz_done),
	.test_si(test_si1),
	.test_so(n4),
	.test_se(test_se));
   mux_test_1 U0_mux (.CLK(CLK),
	.RST(RST),
	.IN_1(ser_data),
	.IN_2(parity),
	.SEL(mux_sel),
	.OUT(TX_OUT),
	.test_si(test_si2),
	.test_se(test_se));
   parity_calc_test_1 U0_parity_calc (.CLK(CLK),
	.RST(RST),
	.parity_enable(parity_enable),
	.parity_type(parity_type),
	.DATA(P_DATA),
	.Data_Valid(Data_Valid),
	.parity(parity),
	.test_si(n3),
	.test_se(test_se));
endmodule

module uart_rx_fsm_test_1 (
	CLK, 
	RST, 
	S_DATA, 
	parity_enable, 
	bit_count, 
	edge_count, 
	par_err, 
	stp_err, 
	strt_glitch, 
	strt_chk_en, 
	edge_bit_en, 
	deser_en, 
	par_chk_en, 
	stp_chk_en, 
	dat_samp_en, 
	data_valid, 
	test_so, 
	test_se);
   input CLK;
   input RST;
   input S_DATA;
   input parity_enable;
   input [3:0] bit_count;
   input [2:0] edge_count;
   input par_err;
   input stp_err;
   input strt_glitch;
   output strt_chk_en;
   output edge_bit_en;
   output deser_en;
   output par_chk_en;
   output stp_chk_en;
   output dat_samp_en;
   output data_valid;
   output test_so;
   input test_se;

   // Internal wires
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire [2:0] current_state;
   wire [2:0] next_state;

   assign test_so = n6 ;

   SDFFRQX2M \current_state_reg[0]  (.SI(strt_glitch),
	.SE(test_se),
	.D(next_state[0]),
	.CK(CLK),
	.RN(RST),
	.Q(current_state[0]));
   SDFFRQX2M \current_state_reg[2]  (.SI(n5),
	.SE(test_se),
	.D(next_state[2]),
	.CK(CLK),
	.RN(RST),
	.Q(current_state[2]));
   SDFFRQX2M \current_state_reg[1]  (.SI(n4),
	.SE(test_se),
	.D(next_state[1]),
	.CK(CLK),
	.RN(RST),
	.Q(current_state[1]));
   NAND2X2M U6 (.A(n9),
	.B(n8),
	.Y(edge_bit_en));
   NOR2X2M U7 (.A(n6),
	.B(n9),
	.Y(stp_chk_en));
   NAND2X2M U8 (.A(n5),
	.B(n8),
	.Y(dat_samp_en));
   INVX2M U9 (.A(S_DATA),
	.Y(n7));
   NOR3BX2M U10 (.AN(edge_count[1]),
	.B(n22),
	.C(bit_count[1]),
	.Y(n13));
   OAI21X2M U11 (.A0(current_state[0]),
	.A1(n7),
	.B0(n6),
	.Y(n8));
   OAI22X1M U12 (.A0(current_state[0]),
	.A1(S_DATA),
	.B0(n23),
	.B1(n4),
	.Y(n19));
   NOR4BBX1M U13 (.AN(strt_glitch),
	.BN(n13),
	.C(bit_count[3]),
	.D(bit_count[0]),
	.Y(n23));
   NAND3BX2M U14 (.AN(bit_count[2]),
	.B(edge_count[0]),
	.C(edge_count[2]),
	.Y(n22));
   NAND2X2M U15 (.A(current_state[1]),
	.B(n4),
	.Y(n9));
   OAI211X2M U16 (.A0(n4),
	.A1(n12),
	.B0(n17),
	.C0(n18),
	.Y(next_state[0]));
   AOI22X1M U17 (.A0(deser_en),
	.A1(n14),
	.B0(data_valid),
	.B1(n7),
	.Y(n18));
   AOI31X2M U18 (.A0(n5),
	.A1(n6),
	.A2(n19),
	.B0(n20),
	.Y(n17));
   AND4X2M U19 (.A(n21),
	.B(bit_count[3]),
	.C(bit_count[1]),
	.D(stp_chk_en),
	.Y(n20));
   NAND3BX2M U20 (.AN(bit_count[0]),
	.B(n13),
	.C(bit_count[3]),
	.Y(n14));
   INVX2M U21 (.A(current_state[0]),
	.Y(n4));
   INVX2M U22 (.A(current_state[2]),
	.Y(n6));
   NOR3X2M U23 (.A(n5),
	.B(current_state[2]),
	.C(n4),
	.Y(deser_en));
   NOR3X2M U24 (.A(n6),
	.B(current_state[1]),
	.C(n4),
	.Y(data_valid));
   NOR3X2M U25 (.A(edge_count[1]),
	.B(bit_count[0]),
	.C(n22),
	.Y(n21));
   NOR2X2M U26 (.A(current_state[2]),
	.B(n9),
	.Y(par_chk_en));
   OAI21X2M U27 (.A0(current_state[2]),
	.A1(n15),
	.B0(n9),
	.Y(next_state[1]));
   AOI31X2M U28 (.A0(current_state[0]),
	.A1(n13),
	.A2(n16),
	.B0(current_state[1]),
	.Y(n15));
   NOR3X2M U29 (.A(bit_count[0]),
	.B(strt_glitch),
	.C(bit_count[3]),
	.Y(n16));
   INVX2M U30 (.A(current_state[1]),
	.Y(n5));
   NAND4BBX1M U31 (.AN(n10),
	.BN(stp_chk_en),
	.C(n11),
	.D(n12),
	.Y(next_state[2]));
   NAND4BX1M U32 (.AN(n9),
	.B(bit_count[3]),
	.C(bit_count[0]),
	.D(n13),
	.Y(n11));
   NOR3BX2M U33 (.AN(deser_en),
	.B(parity_enable),
	.C(n14),
	.Y(n10));
   OR4X1M U34 (.A(n5),
	.B(n6),
	.C(stp_err),
	.D(par_err),
	.Y(n12));
   NOR2X2M U35 (.A(current_state[1]),
	.B(n8),
	.Y(strt_chk_en));
endmodule

module edge_bit_counter_test_1 (
	CLK, 
	RST, 
	Enable, 
	bit_count, 
	edge_count, 
	test_si, 
	test_se, 
	p1);
   input CLK;
   input RST;
   input Enable;
   output [3:0] bit_count;
   output [2:0] edge_count;
   input test_si;
   input test_se;
   input p1;

   // Internal wires
   wire N13;
   wire N14;
   wire n11;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n9;
   wire n10;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n28;

   SDFFRQX2M \bit_count_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(n27),
	.CK(CLK),
	.RN(RST),
	.Q(bit_count[0]));
   SDFFRQX2M \bit_count_reg[2]  (.SI(n14),
	.SE(test_se),
	.D(n12),
	.CK(CLK),
	.RN(RST),
	.Q(bit_count[2]));
   SDFFRQX2M \edge_count_reg[2]  (.SI(edge_count[1]),
	.SE(test_se),
	.D(n10),
	.CK(CLK),
	.RN(RST),
	.Q(edge_count[2]));
   SDFFRQX2M \bit_count_reg[1]  (.SI(n13),
	.SE(test_se),
	.D(n26),
	.CK(CLK),
	.RN(RST),
	.Q(bit_count[1]));
   SDFFRQX2M \edge_count_reg[0]  (.SI(n11),
	.SE(test_se),
	.D(N13),
	.CK(CLK),
	.RN(RST),
	.Q(edge_count[0]));
   SDFFRQX2M \edge_count_reg[1]  (.SI(edge_count[0]),
	.SE(test_se),
	.D(N14),
	.CK(CLK),
	.RN(RST),
	.Q(edge_count[1]));
   SDFFRX1M \bit_count_reg[3]  (.SI(n15),
	.SE(p1),
	.D(n25),
	.CK(CLK),
	.RN(RST),
	.Q(bit_count[3]),
	.QN(n11));
   INVX2M U11 (.A(Enable),
	.Y(n28));
   NOR3X2M U12 (.A(n28),
	.B(n22),
	.C(n13),
	.Y(n18));
   AOI21X2M U13 (.A0(n13),
	.A1(Enable),
	.B0(n22),
	.Y(n21));
   INVX2M U14 (.A(n22),
	.Y(n9));
   AOI31X2M U15 (.A0(edge_count[2]),
	.A1(edge_count[0]),
	.A2(edge_count[1]),
	.B0(n28),
	.Y(n22));
   INVX2M U16 (.A(n23),
	.Y(n10));
   AOI32X1M U17 (.A0(n22),
	.A1(edge_count[0]),
	.A2(edge_count[1]),
	.B0(edge_count[2]),
	.B1(n22),
	.Y(n23));
   OAI32X1M U18 (.A0(n28),
	.A1(bit_count[0]),
	.A2(n22),
	.B0(n13),
	.B1(n9),
	.Y(n27));
   OAI21X2M U19 (.A0(bit_count[1]),
	.A1(n28),
	.B0(n21),
	.Y(n19));
   OAI2BB2X1M U20 (.A0N(n14),
	.A1N(n18),
	.B0(n21),
	.B1(n14),
	.Y(n26));
   INVX2M U21 (.A(bit_count[1]),
	.Y(n14));
   OAI21X2M U22 (.A0(n16),
	.A1(n11),
	.B0(n17),
	.Y(n25));
   NAND4X2M U23 (.A(bit_count[2]),
	.B(bit_count[1]),
	.C(n18),
	.D(n11),
	.Y(n17));
   AOI21X2M U24 (.A0(Enable),
	.A1(n15),
	.B0(n19),
	.Y(n16));
   NOR2X2M U25 (.A(n24),
	.B(n9),
	.Y(N14));
   XNOR2X2M U26 (.A(edge_count[1]),
	.B(edge_count[0]),
	.Y(n24));
   NOR2X2M U27 (.A(edge_count[0]),
	.B(n9),
	.Y(N13));
   INVX2M U28 (.A(n20),
	.Y(n12));
   AOI32X1M U29 (.A0(bit_count[1]),
	.A1(n15),
	.A2(n18),
	.B0(n19),
	.B1(bit_count[2]),
	.Y(n20));
   INVX2M U30 (.A(bit_count[0]),
	.Y(n13));
   INVX2M U31 (.A(bit_count[2]),
	.Y(n15));
endmodule

module data_sampling_test_1 (
	CLK, 
	RST, 
	S_DATA, 
	Prescale, 
	edge_count, 
	Enable, 
	sampled_bit, 
	test_si, 
	test_se);
   input CLK;
   input RST;
   input S_DATA;
   input [4:0] Prescale;
   input [2:0] edge_count;
   input Enable;
   output sampled_bit;
   input test_si;
   input test_se;

   // Internal wires
   wire N58;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire n43;
   wire n44;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire [2:0] Samples;

   SDFFRQX2M \Samples_reg[2]  (.SI(n1),
	.SE(test_se),
	.D(n44),
	.CK(CLK),
	.RN(RST),
	.Q(Samples[2]));
   SDFFRQX2M sampled_bit_reg (.SI(Samples[2]),
	.SE(test_se),
	.D(N58),
	.CK(CLK),
	.RN(RST),
	.Q(sampled_bit));
   SDFFRQX2M \Samples_reg[1]  (.SI(n2),
	.SE(test_se),
	.D(n43),
	.CK(CLK),
	.RN(RST),
	.Q(Samples[1]));
   SDFFRQX2M \Samples_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(n42),
	.CK(CLK),
	.RN(RST),
	.Q(Samples[0]));
   INVX2M U7 (.A(Enable),
	.Y(n5));
   NOR2X2M U8 (.A(n6),
	.B(n35),
	.Y(n36));
   CLKXOR2X2M U9 (.A(n23),
	.B(n24),
	.Y(n20));
   NOR2X2M U10 (.A(n25),
	.B(n26),
	.Y(n24));
   INVX2M U11 (.A(n25),
	.Y(n6));
   NAND2X2M U12 (.A(S_DATA),
	.B(Enable),
	.Y(n17));
   OAI32X1M U13 (.A0(n2),
	.A1(n4),
	.A2(n5),
	.B0(n17),
	.B1(n18),
	.Y(n42));
   INVX2M U14 (.A(Samples[0]),
	.Y(n2));
   INVX2M U15 (.A(n18),
	.Y(n4));
   NAND4X2M U16 (.A(n19),
	.B(n20),
	.C(n21),
	.D(n22),
	.Y(n18));
   OAI32X1M U17 (.A0(n1),
	.A1(n3),
	.A2(n5),
	.B0(n17),
	.B1(n27),
	.Y(n43));
   INVX2M U18 (.A(Samples[1]),
	.Y(n1));
   INVX2M U19 (.A(n27),
	.Y(n3));
   NAND4BX1M U20 (.AN(n21),
	.B(n28),
	.C(n23),
	.D(n29),
	.Y(n27));
   AOI21X2M U21 (.A0(Prescale[1]),
	.A1(Prescale[2]),
	.B0(n37),
	.Y(n30));
   XNOR2X2M U22 (.A(n39),
	.B(edge_count[1]),
	.Y(n22));
   NAND2X2M U23 (.A(n35),
	.B(n26),
	.Y(n39));
   NOR2X2M U24 (.A(Prescale[2]),
	.B(Prescale[1]),
	.Y(n37));
   XOR3XLM U25 (.A(n26),
	.B(edge_count[2]),
	.C(n25),
	.Y(n19));
   NAND2X2M U26 (.A(n30),
	.B(Prescale[1]),
	.Y(n26));
   XOR3XLM U27 (.A(edge_count[2]),
	.B(n35),
	.C(n25),
	.Y(n34));
   OAI2BB2X1M U28 (.A0N(n31),
	.A1N(Samples[2]),
	.B0(n31),
	.B1(n17),
	.Y(n44));
   AND2X2M U29 (.A(n32),
	.B(Enable),
	.Y(n31));
   NAND4BX1M U30 (.AN(n22),
	.B(n33),
	.C(n34),
	.D(n21),
	.Y(n32));
   CLKXOR2X2M U31 (.A(n23),
	.B(n36),
	.Y(n33));
   CLKXOR2X2M U32 (.A(n37),
	.B(Prescale[3]),
	.Y(n25));
   OR2X2M U33 (.A(Prescale[1]),
	.B(n30),
	.Y(n35));
   CLKXOR2X2M U34 (.A(n6),
	.B(edge_count[2]),
	.Y(n28));
   CLKXOR2X2M U35 (.A(edge_count[1]),
	.B(n30),
	.Y(n29));
   XNOR2X2M U36 (.A(Prescale[1]),
	.B(edge_count[0]),
	.Y(n21));
   AOI21X2M U37 (.A0(n40),
	.A1(n41),
	.B0(n5),
	.Y(N58));
   NAND2X2M U38 (.A(Samples[1]),
	.B(Samples[0]),
	.Y(n40));
   OAI21X2M U39 (.A0(Samples[0]),
	.A1(Samples[1]),
	.B0(Samples[2]),
	.Y(n41));
   CLKXOR2X2M U40 (.A(n38),
	.B(Prescale[4]),
	.Y(n23));
   NAND2BX2M U41 (.AN(Prescale[3]),
	.B(n37),
	.Y(n38));
endmodule

module deserializer_test_1 (
	CLK, 
	RST, 
	sampled_bit, 
	Enable, 
	edge_count, 
	P_DATA, 
	test_so, 
	test_se);
   input CLK;
   input RST;
   input sampled_bit;
   input Enable;
   input [2:0] edge_count;
   output [7:0] P_DATA;
   output test_so;
   input test_se;

   // Internal wires
   wire n1;
   wire n11;
   wire n13;
   wire n15;
   wire n17;
   wire n19;
   wire n21;
   wire n23;
   wire n25;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;

   assign test_so = n2 ;

   SDFFRQX2M \P_DATA_reg[0]  (.SI(sampled_bit),
	.SE(test_se),
	.D(n11),
	.CK(CLK),
	.RN(RST),
	.Q(P_DATA[0]));
   SDFFRQX2M \P_DATA_reg[5]  (.SI(n5),
	.SE(test_se),
	.D(n21),
	.CK(CLK),
	.RN(RST),
	.Q(P_DATA[5]));
   SDFFRQX2M \P_DATA_reg[1]  (.SI(P_DATA[0]),
	.SE(test_se),
	.D(n13),
	.CK(CLK),
	.RN(RST),
	.Q(P_DATA[1]));
   SDFFRQX2M \P_DATA_reg[4]  (.SI(n6),
	.SE(test_se),
	.D(n19),
	.CK(CLK),
	.RN(RST),
	.Q(P_DATA[4]));
   SDFFRQX2M \P_DATA_reg[7]  (.SI(n3),
	.SE(test_se),
	.D(n25),
	.CK(CLK),
	.RN(RST),
	.Q(P_DATA[7]));
   SDFFRQX2M \P_DATA_reg[3]  (.SI(n7),
	.SE(test_se),
	.D(n17),
	.CK(CLK),
	.RN(RST),
	.Q(P_DATA[3]));
   SDFFRQX2M \P_DATA_reg[6]  (.SI(n4),
	.SE(test_se),
	.D(n23),
	.CK(CLK),
	.RN(RST),
	.Q(P_DATA[6]));
   SDFFRQX2M \P_DATA_reg[2]  (.SI(n8),
	.SE(test_se),
	.D(n15),
	.CK(CLK),
	.RN(RST),
	.Q(P_DATA[2]));
   NAND4X2M U2 (.A(edge_count[2]),
	.B(edge_count[1]),
	.C(edge_count[0]),
	.D(Enable),
	.Y(n1));
   OAI22X1M U3 (.A0(n9),
	.A1(n8),
	.B0(n1),
	.B1(n7),
	.Y(n13));
   OAI22X1M U4 (.A0(n9),
	.A1(n7),
	.B0(n1),
	.B1(n6),
	.Y(n15));
   OAI22X1M U5 (.A0(n9),
	.A1(n6),
	.B0(n1),
	.B1(n5),
	.Y(n17));
   OAI22X1M U6 (.A0(n9),
	.A1(n5),
	.B0(n1),
	.B1(n4),
	.Y(n19));
   OAI22X1M U7 (.A0(n9),
	.A1(n4),
	.B0(n1),
	.B1(n3),
	.Y(n21));
   OAI22X1M U8 (.A0(n9),
	.A1(n3),
	.B0(n1),
	.B1(n2),
	.Y(n23));
   INVX2M U9 (.A(n1),
	.Y(n9));
   OAI2BB2X1M U10 (.A0N(P_DATA[0]),
	.A1N(n1),
	.B0(n1),
	.B1(n8),
	.Y(n11));
   OAI2BB2X1M U11 (.A0N(sampled_bit),
	.A1N(n9),
	.B0(n9),
	.B1(n2),
	.Y(n25));
   INVX2M U12 (.A(P_DATA[2]),
	.Y(n7));
   INVX2M U13 (.A(P_DATA[6]),
	.Y(n3));
   INVX2M U14 (.A(P_DATA[7]),
	.Y(n2));
   INVX2M U15 (.A(P_DATA[3]),
	.Y(n6));
   INVX2M U16 (.A(P_DATA[4]),
	.Y(n5));
   INVX2M U17 (.A(P_DATA[5]),
	.Y(n4));
   INVX2M U18 (.A(P_DATA[1]),
	.Y(n8));
endmodule

module strt_chk_test_1 (
	CLK, 
	RST, 
	sampled_bit, 
	Enable, 
	strt_glitch, 
	test_si, 
	test_se);
   input CLK;
   input RST;
   input sampled_bit;
   input Enable;
   output strt_glitch;
   input test_si;
   input test_se;

   // Internal wires
   wire n2;

   SDFFRQX2M strt_glitch_reg (.SI(test_si),
	.SE(test_se),
	.D(n2),
	.CK(CLK),
	.RN(RST),
	.Q(strt_glitch));
   AO2B2X2M U2 (.A0(strt_glitch),
	.A1N(Enable),
	.B0(sampled_bit),
	.B1(Enable),
	.Y(n2));
endmodule

module par_chk_test_1 (
	CLK, 
	RST, 
	parity_type, 
	sampled_bit, 
	Enable, 
	P_DATA, 
	par_err, 
	test_si, 
	test_se);
   input CLK;
   input RST;
   input parity_type;
   input sampled_bit;
   input Enable;
   input [7:0] P_DATA;
   output par_err;
   input test_si;
   input test_se;

   // Internal wires
   wire n1;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n9;
   wire n2;

   SDFFRQX2M par_err_reg (.SI(test_si),
	.SE(test_se),
	.D(n9),
	.CK(CLK),
	.RN(RST),
	.Q(par_err));
   XNOR2X2M U2 (.A(sampled_bit),
	.B(parity_type),
	.Y(n5));
   XOR3XLM U3 (.A(P_DATA[5]),
	.B(P_DATA[4]),
	.C(n6),
	.Y(n4));
   XNOR2X2M U4 (.A(P_DATA[7]),
	.B(P_DATA[6]),
	.Y(n6));
   XOR3XLM U5 (.A(P_DATA[1]),
	.B(P_DATA[0]),
	.C(n7),
	.Y(n3));
   XNOR2X2M U6 (.A(P_DATA[3]),
	.B(P_DATA[2]),
	.Y(n7));
   OAI2BB2X1M U7 (.A0N(par_err),
	.A1N(n2),
	.B0(n1),
	.B1(n2),
	.Y(n9));
   INVX2M U8 (.A(Enable),
	.Y(n2));
   XOR3XLM U9 (.A(n3),
	.B(n4),
	.C(n5),
	.Y(n1));
endmodule

module stp_chk_test_1 (
	CLK, 
	RST, 
	sampled_bit, 
	Enable, 
	stp_err, 
	test_si, 
	test_se);
   input CLK;
   input RST;
   input sampled_bit;
   input Enable;
   output stp_err;
   input test_si;
   input test_se;

   // Internal wires
   wire n3;
   wire n1;

   SDFFRQX2M stp_err_reg (.SI(test_si),
	.SE(test_se),
	.D(n3),
	.CK(CLK),
	.RN(RST),
	.Q(stp_err));
   OAI2BB2X1M U2 (.A0N(stp_err),
	.A1N(n1),
	.B0(sampled_bit),
	.B1(n1),
	.Y(n3));
   INVX2M U3 (.A(Enable),
	.Y(n1));
endmodule

module UART_RX_test_1 (
	CLK, 
	RST, 
	RX_IN, 
	Prescale, 
	parity_enable, 
	parity_type, 
	P_DATA, 
	data_valid, 
	parity_error, 
	framing_error, 
	test_si, 
	test_so, 
	test_se, 
	p1);
   input CLK;
   input RST;
   input RX_IN;
   input [4:0] Prescale;
   input parity_enable;
   input parity_type;
   output [7:0] P_DATA;
   output data_valid;
   output parity_error;
   output framing_error;
   input test_si;
   output test_so;
   input test_se;
   input p1;

   // Internal wires
   wire strt_glitch;
   wire strt_chk_en;
   wire edge_bit_en;
   wire deser_en;
   wire par_chk_en;
   wire stp_chk_en;
   wire dat_samp_en;
   wire sampled_bit;
   wire n4;
   wire [3:0] bit_count;
   wire [2:0] edge_count;

   uart_rx_fsm_test_1 U0_uart_fsm (.CLK(CLK),
	.RST(RST),
	.S_DATA(RX_IN),
	.parity_enable(parity_enable),
	.bit_count(bit_count),
	.edge_count(edge_count),
	.par_err(parity_error),
	.stp_err(framing_error),
	.strt_glitch(strt_glitch),
	.strt_chk_en(strt_chk_en),
	.edge_bit_en(edge_bit_en),
	.deser_en(deser_en),
	.par_chk_en(par_chk_en),
	.stp_chk_en(stp_chk_en),
	.dat_samp_en(dat_samp_en),
	.data_valid(data_valid),
	.test_so(test_so),
	.test_se(p1));
   edge_bit_counter_test_1 U0_edge_bit_counter (.CLK(CLK),
	.RST(RST),
	.Enable(edge_bit_en),
	.bit_count(bit_count),
	.edge_count(edge_count),
	.test_si(n4),
	.test_se(test_se),
	.p1(p1));
   data_sampling_test_1 U0_data_sampling (.CLK(CLK),
	.RST(RST),
	.S_DATA(RX_IN),
	.Prescale(Prescale),
	.edge_count(edge_count),
	.Enable(dat_samp_en),
	.sampled_bit(sampled_bit),
	.test_si(test_si),
	.test_se(test_se));
   deserializer_test_1 U0_deserializer (.CLK(CLK),
	.RST(RST),
	.sampled_bit(sampled_bit),
	.Enable(deser_en),
	.edge_count(edge_count),
	.P_DATA(P_DATA),
	.test_so(n4),
	.test_se(test_se));
   strt_chk_test_1 U0_strt_chk (.CLK(CLK),
	.RST(RST),
	.sampled_bit(sampled_bit),
	.Enable(strt_chk_en),
	.strt_glitch(strt_glitch),
	.test_si(framing_error),
	.test_se(p1));
   par_chk_test_1 U0_par_chk (.CLK(CLK),
	.RST(RST),
	.parity_type(parity_type),
	.sampled_bit(sampled_bit),
	.Enable(par_chk_en),
	.P_DATA(P_DATA),
	.par_err(parity_error),
	.test_si(edge_count[2]),
	.test_se(p1));
   stp_chk_test_1 U0_stp_chk (.CLK(CLK),
	.RST(RST),
	.sampled_bit(sampled_bit),
	.Enable(stp_chk_en),
	.stp_err(framing_error),
	.test_si(parity_error),
	.test_se(p1));
endmodule

module UART_test_1 (
	RST, 
	TX_CLK, 
	RX_CLK, 
	RX_IN_S, 
	RX_OUT_P, 
	RX_OUT_V, 
	TX_IN_P, 
	TX_IN_V, 
	TX_OUT_S, 
	TX_OUT_V, 
	Prescale, 
	parity_enable, 
	parity_type, 
	parity_error, 
	framing_error, 
	test_si2, 
	test_si1, 
	test_so1, 
	test_se, 
	p1);
   input RST;
   input TX_CLK;
   input RX_CLK;
   input RX_IN_S;
   output [7:0] RX_OUT_P;
   output RX_OUT_V;
   input [7:0] TX_IN_P;
   input TX_IN_V;
   output TX_OUT_S;
   output TX_OUT_V;
   input [4:0] Prescale;
   input parity_enable;
   input parity_type;
   output parity_error;
   output framing_error;
   input test_si2;
   input test_si1;
   output test_so1;
   input test_se;
   input p1;

   // Internal wires
   wire n4;

   UART_TX_test_1 U0_UART_TX (.CLK(TX_CLK),
	.RST(RST),
	.P_DATA(TX_IN_P),
	.Data_Valid(TX_IN_V),
	.parity_enable(parity_enable),
	.parity_type(parity_type),
	.TX_OUT(TX_OUT_S),
	.busy(TX_OUT_V),
	.test_si2(test_si2),
	.test_si1(n4),
	.test_so1(test_so1),
	.test_se(p1));
   UART_RX_test_1 U0_UART_RX (.CLK(RX_CLK),
	.RST(RST),
	.RX_IN(RX_IN_S),
	.Prescale(Prescale),
	.parity_enable(parity_enable),
	.parity_type(parity_type),
	.P_DATA(RX_OUT_P),
	.data_valid(RX_OUT_V),
	.parity_error(parity_error),
	.framing_error(framing_error),
	.test_si(test_si1),
	.test_so(n4),
	.test_se(test_se),
	.p1(p1));
endmodule

module CTRL_RX_test_1 (
	CLK, 
	RST, 
	RF_RdData, 
	RF_RdData_VLD, 
	ALU_OUT, 
	ALU_OUT_VLD, 
	UART_RX_DATA, 
	UART_RX_VLD, 
	ALU_EN, 
	ALU_FUN, 
	CLKG_EN, 
	CLKDIV_EN, 
	RF_WrEn, 
	RF_RdEn, 
	RF_Address, 
	RF_WrData, 
	UART_RF_SEND, 
	UART_ALU_SEND, 
	UART_SEND_RF_DATA, 
	UART_SEND_ALU_DATA, 
	test_si2, 
	test_si1, 
	test_so1, 
	test_se, 
	p1, 
	p2, 
	p3);
   input CLK;
   input RST;
   input [7:0] RF_RdData;
   input RF_RdData_VLD;
   input [15:0] ALU_OUT;
   input ALU_OUT_VLD;
   input [7:0] UART_RX_DATA;
   input UART_RX_VLD;
   output ALU_EN;
   output [3:0] ALU_FUN;
   output CLKG_EN;
   output CLKDIV_EN;
   output RF_WrEn;
   output RF_RdEn;
   output [3:0] RF_Address;
   output [7:0] RF_WrData;
   output UART_RF_SEND;
   output UART_ALU_SEND;
   output [7:0] UART_SEND_RF_DATA;
   output [15:0] UART_SEND_ALU_DATA;
   input test_si2;
   input test_si1;
   output test_so1;
   input test_se;
   input p1;
   input p2;
   input p3;

   // Internal wires
   wire FE_PHN31_SI_0_;
   wire FE_PHN27_SI_0_;
   wire FE_RN_2;
   wire n45;
   wire n46;
   wire n47;
   wire n48;
   wire n57;
   wire n58;
   wire n59;
   wire n60;
   wire n61;
   wire n62;
   wire n63;
   wire n64;
   wire n65;
   wire n66;
   wire n67;
   wire n68;
   wire n69;
   wire n70;
   wire n71;
   wire n72;
   wire n73;
   wire n74;
   wire n75;
   wire n76;
   wire n77;
   wire n78;
   wire n79;
   wire n80;
   wire n81;
   wire n82;
   wire n83;
   wire n84;
   wire n85;
   wire n86;
   wire n87;
   wire n88;
   wire n89;
   wire n90;
   wire n91;
   wire n92;
   wire n93;
   wire n94;
   wire n95;
   wire n96;
   wire n97;
   wire n98;
   wire n99;
   wire n100;
   wire n101;
   wire n102;
   wire n103;
   wire n104;
   wire n105;
   wire n106;
   wire n107;
   wire n108;
   wire n109;
   wire n110;
   wire n111;
   wire n112;
   wire n113;
   wire n114;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire n43;
   wire n44;
   wire n49;
   wire n50;
   wire n52;
   wire n53;
   wire n54;
   wire n55;
   wire n56;
   wire n115;
   wire n116;
   wire n117;
   wire n118;
   wire n119;
   wire n120;
   wire n122;
   wire n123;
   wire n124;
   wire n125;
   wire [3:0] current_state;
   wire [3:0] next_state;

   assign test_so1 = n53 ;

   DLY4X1M FE_PHC31_SI_0_ (.A(FE_PHN27_SI_0_),
	.Y(FE_PHN31_SI_0_));
   DLY4X1M FE_PHC27_SI_0_ (.A(test_si2),
	.Y(FE_PHN27_SI_0_));
   BUFX2M FE_OFC24_UART_ALU_SEND (.A(FE_RN_2),
	.Y(UART_ALU_SEND));
   SDFFRQX2M \UART_SEND_RF_DATA_reg[7]  (.SI(UART_SEND_RF_DATA[6]),
	.SE(p1),
	.D(n110),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_RF_DATA[7]));
   SDFFRQX2M \UART_SEND_RF_DATA_reg[6]  (.SI(UART_SEND_RF_DATA[5]),
	.SE(p1),
	.D(n109),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_RF_DATA[6]));
   SDFFRQX2M \UART_SEND_RF_DATA_reg[5]  (.SI(UART_SEND_RF_DATA[4]),
	.SE(p1),
	.D(n108),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_RF_DATA[5]));
   SDFFRQX2M \UART_SEND_RF_DATA_reg[4]  (.SI(UART_SEND_RF_DATA[3]),
	.SE(p1),
	.D(n107),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_RF_DATA[4]));
   SDFFRQX2M \UART_SEND_RF_DATA_reg[3]  (.SI(UART_SEND_RF_DATA[2]),
	.SE(p1),
	.D(n106),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_RF_DATA[3]));
   SDFFRQX2M \UART_SEND_RF_DATA_reg[2]  (.SI(FE_PHN31_SI_0_),
	.SE(p1),
	.D(n105),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_RF_DATA[2]));
   SDFFRQX2M \UART_SEND_RF_DATA_reg[1]  (.SI(UART_SEND_RF_DATA[0]),
	.SE(p1),
	.D(n104),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_RF_DATA[1]));
   SDFFRQX2M \UART_SEND_RF_DATA_reg[0]  (.SI(UART_SEND_ALU_DATA[15]),
	.SE(p1),
	.D(n103),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_RF_DATA[0]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[7]  (.SI(UART_SEND_ALU_DATA[6]),
	.SE(p1),
	.D(n94),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[7]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[6]  (.SI(UART_SEND_ALU_DATA[5]),
	.SE(p1),
	.D(n93),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[6]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[5]  (.SI(UART_SEND_ALU_DATA[4]),
	.SE(p2),
	.D(n92),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[5]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[4]  (.SI(UART_SEND_ALU_DATA[3]),
	.SE(p1),
	.D(n91),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[4]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[3]  (.SI(UART_SEND_ALU_DATA[2]),
	.SE(p1),
	.D(n90),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[3]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[2]  (.SI(UART_SEND_ALU_DATA[1]),
	.SE(p1),
	.D(n89),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[2]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[1]  (.SI(UART_SEND_ALU_DATA[0]),
	.SE(p1),
	.D(n88),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[1]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[0]  (.SI(n122),
	.SE(p1),
	.D(n87),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[0]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[15]  (.SI(UART_SEND_ALU_DATA[14]),
	.SE(p1),
	.D(n102),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[15]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[14]  (.SI(UART_SEND_ALU_DATA[13]),
	.SE(p2),
	.D(n101),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[14]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[13]  (.SI(UART_SEND_ALU_DATA[12]),
	.SE(p2),
	.D(n100),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[13]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[12]  (.SI(UART_SEND_ALU_DATA[11]),
	.SE(p2),
	.D(n99),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[12]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[11]  (.SI(UART_SEND_ALU_DATA[10]),
	.SE(p2),
	.D(n98),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[11]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[10]  (.SI(UART_SEND_ALU_DATA[9]),
	.SE(p2),
	.D(n97),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[10]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[9]  (.SI(UART_SEND_ALU_DATA[8]),
	.SE(p2),
	.D(n96),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[9]));
   SDFFRQX2M \UART_SEND_ALU_DATA_reg[8]  (.SI(UART_SEND_ALU_DATA[7]),
	.SE(p1),
	.D(n95),
	.CK(CLK),
	.RN(RST),
	.Q(UART_SEND_ALU_DATA[8]));
   SDFFRX1M \RF_ADDR_REG_reg[2]  (.SI(n124),
	.SE(test_se),
	.D(n113),
	.CK(CLK),
	.RN(p3),
	.Q(n123),
	.QN(n46));
   SDFFRX1M \RF_ADDR_REG_reg[0]  (.SI(test_si1),
	.SE(test_se),
	.D(n111),
	.CK(CLK),
	.RN(p3),
	.Q(n125),
	.QN(n48));
   SDFFRX1M \RF_ADDR_REG_reg[1]  (.SI(n125),
	.SE(test_se),
	.D(n112),
	.CK(CLK),
	.RN(p3),
	.Q(n124),
	.QN(n47));
   SDFFRQX2M \current_state_reg[1]  (.SI(n43),
	.SE(p1),
	.D(next_state[1]),
	.CK(CLK),
	.RN(RST),
	.Q(current_state[1]));
   SDFFRQX2M \current_state_reg[2]  (.SI(current_state[1]),
	.SE(p1),
	.D(next_state[2]),
	.CK(CLK),
	.RN(RST),
	.Q(current_state[2]));
   SDFFRQX2M \current_state_reg[0]  (.SI(UART_SEND_RF_DATA[7]),
	.SE(p1),
	.D(next_state[0]),
	.CK(CLK),
	.RN(RST),
	.Q(current_state[0]));
   SDFFRQX2M \current_state_reg[3]  (.SI(current_state[2]),
	.SE(p1),
	.D(next_state[3]),
	.CK(CLK),
	.RN(RST),
	.Q(current_state[3]));
   SDFFRX1M \RF_ADDR_REG_reg[3]  (.SI(n123),
	.SE(test_se),
	.D(n114),
	.CK(CLK),
	.RN(p3),
	.Q(n122),
	.QN(n45));
   NOR2X2M U38 (.A(n117),
	.B(n59),
	.Y(ALU_FUN[2]));
   NOR2X2M U39 (.A(n119),
	.B(n59),
	.Y(ALU_FUN[0]));
   NOR4X1M U40 (.A(n52),
	.B(n54),
	.C(current_state[0]),
	.D(current_state[3]),
	.Y(RF_RdEn));
   NOR4X1M U41 (.A(n52),
	.B(n43),
	.C(current_state[2]),
	.D(current_state[3]),
	.Y(n84));
   NOR2X4M U42 (.A(n85),
	.B(n46),
	.Y(RF_Address[2]));
   INVX2M U44 (.A(n75),
	.Y(n50));
   INVX2M U45 (.A(n63),
	.Y(n41));
   INVX2M U46 (.A(UART_ALU_SEND),
	.Y(n49));
   AND3X2M U48 (.A(n57),
	.B(n62),
	.C(n42),
	.Y(n83));
   NOR2X2M U49 (.A(n84),
	.B(RF_RdEn),
	.Y(n85));
   NAND2X2M U50 (.A(n86),
	.B(n43),
	.Y(n57));
   NOR2X2M U51 (.A(n83),
	.B(n120),
	.Y(RF_WrEn));
   NOR2X2M U52 (.A(n83),
	.B(n119),
	.Y(RF_WrData[0]));
   NOR2X2M U53 (.A(n83),
	.B(n118),
	.Y(RF_WrData[1]));
   NOR2X2M U54 (.A(n83),
	.B(n117),
	.Y(RF_WrData[2]));
   NOR2X2M U55 (.A(n83),
	.B(n116),
	.Y(RF_WrData[3]));
   NOR2X2M U56 (.A(n83),
	.B(n115),
	.Y(RF_WrData[4]));
   NOR2X2M U57 (.A(n83),
	.B(n56),
	.Y(RF_WrData[7]));
   NOR2X2M U58 (.A(n59),
	.B(n120),
	.Y(ALU_EN));
   NAND4X2M U59 (.A(n52),
	.B(n53),
	.C(n61),
	.D(n79),
	.Y(n75));
   NOR3X2M U60 (.A(n120),
	.B(n116),
	.C(n56),
	.Y(n79));
   INVX2M U61 (.A(n81),
	.Y(n40));
   NAND2X2M U62 (.A(n82),
	.B(n52),
	.Y(n63));
   INVX2M U63 (.A(n84),
	.Y(n42));
   NOR3X2M U65 (.A(n69),
	.B(n53),
	.C(n55),
	.Y(FE_RN_2));
   INVX2M U66 (.A(n80),
	.Y(UART_RF_SEND));
   NOR2X2M U67 (.A(n118),
	.B(n59),
	.Y(ALU_FUN[1]));
   NOR2X2M U68 (.A(n116),
	.B(n59),
	.Y(ALU_FUN[3]));
   NOR3X2M U69 (.A(current_state[1]),
	.B(current_state[2]),
	.C(n53),
	.Y(n86));
   INVX2M U70 (.A(current_state[3]),
	.Y(n53));
   INVX2M U71 (.A(current_state[1]),
	.Y(n52));
   INVX2M U72 (.A(current_state[0]),
	.Y(n43));
   INVX2M U73 (.A(current_state[2]),
	.Y(n54));
   OAI21X1M U74 (.A0(n85),
	.A1(n48),
	.B0(n57),
	.Y(RF_Address[0]));
   NOR2X4M U75 (.A(n85),
	.B(n45),
	.Y(RF_Address[3]));
   OAI21X2M U76 (.A0(n65),
	.A1(n41),
	.B0(UART_RX_VLD),
	.Y(n81));
   NOR3X2M U77 (.A(n43),
	.B(current_state[3]),
	.C(n54),
	.Y(n82));
   NAND2X2M U78 (.A(current_state[0]),
	.B(n86),
	.Y(n59));
   NOR2BX2M U79 (.AN(UART_RX_DATA[5]),
	.B(n83),
	.Y(RF_WrData[5]));
   NOR2BX2M U80 (.AN(UART_RX_DATA[6]),
	.B(n83),
	.Y(RF_WrData[6]));
   OAI22X1M U81 (.A0(n119),
	.A1(n81),
	.B0(n40),
	.B1(n48),
	.Y(n111));
   OAI22X1M U82 (.A0(n118),
	.A1(n81),
	.B0(n40),
	.B1(n47),
	.Y(n112));
   OAI22X1M U83 (.A0(n117),
	.A1(n81),
	.B0(n40),
	.B1(n46),
	.Y(n113));
   OAI22X1M U84 (.A0(n116),
	.A1(n81),
	.B0(n40),
	.B1(n45),
	.Y(n114));
   NAND2X2M U85 (.A(current_state[1]),
	.B(n82),
	.Y(n62));
   NAND4BBX1M U86 (.AN(n65),
	.BN(ALU_EN),
	.C(n66),
	.D(n67),
	.Y(next_state[1]));
   AOI221XLM U87 (.A0(n44),
	.A1(n55),
	.B0(n41),
	.B1(UART_RX_VLD),
	.C0(n68),
	.Y(n67));
   AOI33X2M U88 (.A0(n119),
	.A1(n115),
	.A2(n70),
	.B0(n71),
	.B1(n53),
	.B2(current_state[1]),
	.Y(n66));
   INVX2M U89 (.A(n69),
	.Y(n44));
   NOR2X1M U90 (.A(n85),
	.B(n47),
	.Y(RF_Address[1]));
   INVX2M U91 (.A(UART_RX_VLD),
	.Y(n120));
   NAND4BX1M U92 (.AN(n72),
	.B(n64),
	.C(n73),
	.D(n58),
	.Y(next_state[0]));
   OAI2B1X2M U93 (.A0(n65),
	.A1N(n57),
	.B0(UART_RX_VLD),
	.Y(n73));
   AOI31X2M U94 (.A0(n42),
	.A1(n59),
	.A2(n63),
	.B0(UART_RX_VLD),
	.Y(n72));
   AND4X2M U95 (.A(UART_RX_DATA[5]),
	.B(UART_RX_DATA[1]),
	.C(n78),
	.D(n50),
	.Y(n70));
   NOR2X2M U96 (.A(UART_RX_DATA[6]),
	.B(UART_RX_DATA[2]),
	.Y(n78));
   AOI31X2M U97 (.A0(n70),
	.A1(UART_RX_DATA[0]),
	.A2(UART_RX_DATA[4]),
	.B0(n68),
	.Y(n64));
   OAI22X1M U98 (.A0(current_state[2]),
	.A1(UART_RX_VLD),
	.B0(current_state[0]),
	.B1(RF_RdData_VLD),
	.Y(n71));
   NOR2X2M U99 (.A(current_state[0]),
	.B(current_state[2]),
	.Y(n61));
   NAND2X2M U100 (.A(RF_RdData_VLD),
	.B(RF_RdEn),
	.Y(n80));
   OAI2B11X2M U101 (.A0(RF_RdData_VLD),
	.A1N(RF_RdEn),
	.B0(n63),
	.C0(n64),
	.Y(next_state[2]));
   NAND2X2M U102 (.A(current_state[1]),
	.B(n61),
	.Y(n69));
   OAI21X2M U103 (.A0(UART_RX_VLD),
	.A1(n62),
	.B0(n76),
	.Y(n68));
   NAND4X2M U104 (.A(UART_RX_DATA[2]),
	.B(n50),
	.C(UART_RX_DATA[6]),
	.D(n77),
	.Y(n76));
   NOR4X1M U105 (.A(UART_RX_DATA[5]),
	.B(UART_RX_DATA[4]),
	.C(UART_RX_DATA[1]),
	.D(UART_RX_DATA[0]),
	.Y(n77));
   NOR2X2M U106 (.A(n69),
	.B(current_state[3]),
	.Y(n65));
   NAND4X2M U107 (.A(UART_RX_DATA[4]),
	.B(UART_RX_DATA[2]),
	.C(UART_RX_DATA[6]),
	.D(n74),
	.Y(n58));
   NOR4X1M U108 (.A(UART_RX_DATA[5]),
	.B(UART_RX_DATA[1]),
	.C(n75),
	.D(n119),
	.Y(n74));
   INVX2M U109 (.A(UART_RX_DATA[0]),
	.Y(n119));
   INVX2M U110 (.A(UART_RX_DATA[1]),
	.Y(n118));
   NAND4X2M U111 (.A(n57),
	.B(n58),
	.C(n59),
	.D(n60),
	.Y(next_state[3]));
   AOI32X1M U112 (.A0(n61),
	.A1(n55),
	.A2(current_state[3]),
	.B0(n39),
	.B1(UART_RX_VLD),
	.Y(n60));
   INVX2M U113 (.A(n62),
	.Y(n39));
   INVX2M U114 (.A(UART_RX_DATA[2]),
	.Y(n117));
   INVX2M U115 (.A(UART_RX_DATA[3]),
	.Y(n116));
   INVX2M U116 (.A(UART_RX_DATA[4]),
	.Y(n115));
   INVX2M U117 (.A(UART_RX_DATA[7]),
	.Y(n56));
   AO22X1M U118 (.A0(ALU_OUT[0]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[0]),
	.B1(n49),
	.Y(n87));
   AO22X1M U119 (.A0(ALU_OUT[1]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[1]),
	.B1(n49),
	.Y(n88));
   AO22X1M U120 (.A0(ALU_OUT[2]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[2]),
	.B1(n49),
	.Y(n89));
   AO22X1M U121 (.A0(ALU_OUT[3]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[3]),
	.B1(n49),
	.Y(n90));
   AO22X1M U122 (.A0(ALU_OUT[4]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[4]),
	.B1(n49),
	.Y(n91));
   AO22X1M U123 (.A0(ALU_OUT[5]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[5]),
	.B1(n49),
	.Y(n92));
   AO22X1M U124 (.A0(ALU_OUT[6]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[6]),
	.B1(n49),
	.Y(n93));
   AO22X1M U125 (.A0(ALU_OUT[7]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[7]),
	.B1(n49),
	.Y(n94));
   AO22X1M U126 (.A0(ALU_OUT[8]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[8]),
	.B1(n49),
	.Y(n95));
   AO22X1M U127 (.A0(ALU_OUT[9]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[9]),
	.B1(n49),
	.Y(n96));
   AO22X1M U128 (.A0(ALU_OUT[10]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[10]),
	.B1(n49),
	.Y(n97));
   AO22X1M U129 (.A0(ALU_OUT[11]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[11]),
	.B1(n49),
	.Y(n98));
   AO22X1M U130 (.A0(ALU_OUT[12]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[12]),
	.B1(n49),
	.Y(n99));
   AO22X1M U131 (.A0(ALU_OUT[13]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[13]),
	.B1(n49),
	.Y(n100));
   AO22X1M U132 (.A0(ALU_OUT[14]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[14]),
	.B1(n49),
	.Y(n101));
   AO22X1M U133 (.A0(ALU_OUT[15]),
	.A1(UART_ALU_SEND),
	.B0(UART_SEND_ALU_DATA[15]),
	.B1(n49),
	.Y(n102));
   AO22X1M U134 (.A0(RF_RdData[0]),
	.A1(UART_RF_SEND),
	.B0(UART_SEND_RF_DATA[0]),
	.B1(n80),
	.Y(n103));
   AO22X1M U135 (.A0(RF_RdData[1]),
	.A1(UART_RF_SEND),
	.B0(UART_SEND_RF_DATA[1]),
	.B1(n80),
	.Y(n104));
   AO22X1M U136 (.A0(RF_RdData[2]),
	.A1(UART_RF_SEND),
	.B0(UART_SEND_RF_DATA[2]),
	.B1(n80),
	.Y(n105));
   AO22X1M U137 (.A0(RF_RdData[3]),
	.A1(UART_RF_SEND),
	.B0(UART_SEND_RF_DATA[3]),
	.B1(n80),
	.Y(n106));
   AO22X1M U138 (.A0(RF_RdData[4]),
	.A1(UART_RF_SEND),
	.B0(UART_SEND_RF_DATA[4]),
	.B1(n80),
	.Y(n107));
   AO22X1M U139 (.A0(RF_RdData[5]),
	.A1(UART_RF_SEND),
	.B0(UART_SEND_RF_DATA[5]),
	.B1(n80),
	.Y(n108));
   AO22X1M U140 (.A0(RF_RdData[6]),
	.A1(UART_RF_SEND),
	.B0(UART_SEND_RF_DATA[6]),
	.B1(n80),
	.Y(n109));
   AO22X1M U141 (.A0(RF_RdData[7]),
	.A1(UART_RF_SEND),
	.B0(UART_SEND_RF_DATA[7]),
	.B1(n80),
	.Y(n110));
   INVX2M U142 (.A(ALU_OUT_VLD),
	.Y(n55));
   OAI21X2M U143 (.A0(n53),
	.A1(n69),
	.B0(n59),
	.Y(CLKG_EN));
endmodule

module CTRL_TX_test_1 (
	CLK, 
	RST, 
	UART_RF_SEND, 
	UART_SEND_RF_DATA, 
	UART_ALU_SEND, 
	UART_SEND_ALU_DATA, 
	UART_TX_Busy, 
	UART_TX_DATA, 
	UART_TX_VLD, 
	test_si, 
	test_so, 
	test_se);
   input CLK;
   input RST;
   input UART_RF_SEND;
   input [7:0] UART_SEND_RF_DATA;
   input UART_ALU_SEND;
   input [15:0] UART_SEND_ALU_DATA;
   input UART_TX_Busy;
   output [7:0] UART_TX_DATA;
   output UART_TX_VLD;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n4;
   wire n5;
   wire n6;
   wire [2:0] current_state;
   wire [2:0] next_state;

   assign test_so = n6 ;

   SDFFRQX2M \current_state_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(next_state[0]),
	.CK(CLK),
	.RN(RST),
	.Q(current_state[0]));
   SDFFRQX2M \current_state_reg[1]  (.SI(n4),
	.SE(test_se),
	.D(next_state[1]),
	.CK(CLK),
	.RN(RST),
	.Q(current_state[1]));
   SDFFRQX2M \current_state_reg[2]  (.SI(n5),
	.SE(test_se),
	.D(next_state[2]),
	.CK(CLK),
	.RN(RST),
	.Q(current_state[2]));
   NOR2X2M U6 (.A(n5),
	.B(n4),
	.Y(n9));
   NAND3BX2M U7 (.AN(n10),
	.B(n11),
	.C(n12),
	.Y(next_state[1]));
   NAND4BX1M U8 (.AN(UART_RF_SEND),
	.B(UART_ALU_SEND),
	.C(n4),
	.D(n6),
	.Y(n12));
   NOR3X2M U9 (.A(current_state[0]),
	.B(current_state[2]),
	.C(n5),
	.Y(n10));
   NOR3X2M U10 (.A(current_state[0]),
	.B(current_state[1]),
	.C(n6),
	.Y(n17));
   XNOR2X2M U11 (.A(current_state[0]),
	.B(n5),
	.Y(n7));
   NOR3X2M U12 (.A(current_state[1]),
	.B(current_state[2]),
	.C(n4),
	.Y(n13));
   OAI2B11X2M U13 (.A0(UART_TX_Busy),
	.A1N(n13),
	.B0(n14),
	.C0(n11),
	.Y(next_state[0]));
   NAND4X2M U14 (.A(UART_RF_SEND),
	.B(n4),
	.C(n5),
	.D(n6),
	.Y(n14));
   NOR3X2M U15 (.A(n7),
	.B(UART_TX_Busy),
	.C(n8),
	.Y(next_state[2]));
   XNOR2X2M U16 (.A(n9),
	.B(current_state[2]),
	.Y(n8));
   INVX2M U17 (.A(current_state[1]),
	.Y(n5));
   INVX2M U18 (.A(current_state[2]),
	.Y(n6));
   INVX2M U19 (.A(current_state[0]),
	.Y(n4));
   NAND3X2M U20 (.A(current_state[1]),
	.B(n6),
	.C(UART_TX_Busy),
	.Y(n11));
   NOR2X2M U21 (.A(n9),
	.B(n15),
	.Y(UART_TX_VLD));
   XNOR2X2M U22 (.A(n7),
	.B(current_state[2]),
	.Y(n15));
   OAI2BB1X2M U23 (.A0N(UART_SEND_RF_DATA[0]),
	.A1N(n13),
	.B0(n24),
	.Y(UART_TX_DATA[0]));
   AOI22X1M U24 (.A0(UART_SEND_ALU_DATA[8]),
	.A1(n17),
	.B0(UART_SEND_ALU_DATA[0]),
	.B1(n10),
	.Y(n24));
   OAI2BB1X2M U25 (.A0N(UART_SEND_RF_DATA[1]),
	.A1N(n13),
	.B0(n23),
	.Y(UART_TX_DATA[1]));
   AOI22X1M U26 (.A0(UART_SEND_ALU_DATA[9]),
	.A1(n17),
	.B0(UART_SEND_ALU_DATA[1]),
	.B1(n10),
	.Y(n23));
   OAI2BB1X2M U27 (.A0N(UART_SEND_RF_DATA[2]),
	.A1N(n13),
	.B0(n22),
	.Y(UART_TX_DATA[2]));
   AOI22X1M U28 (.A0(UART_SEND_ALU_DATA[10]),
	.A1(n17),
	.B0(UART_SEND_ALU_DATA[2]),
	.B1(n10),
	.Y(n22));
   OAI2BB1X2M U29 (.A0N(UART_SEND_RF_DATA[3]),
	.A1N(n13),
	.B0(n21),
	.Y(UART_TX_DATA[3]));
   AOI22X1M U30 (.A0(UART_SEND_ALU_DATA[11]),
	.A1(n17),
	.B0(UART_SEND_ALU_DATA[3]),
	.B1(n10),
	.Y(n21));
   OAI2BB1X2M U31 (.A0N(UART_SEND_RF_DATA[4]),
	.A1N(n13),
	.B0(n20),
	.Y(UART_TX_DATA[4]));
   AOI22X1M U32 (.A0(UART_SEND_ALU_DATA[12]),
	.A1(n17),
	.B0(UART_SEND_ALU_DATA[4]),
	.B1(n10),
	.Y(n20));
   OAI2BB1X2M U33 (.A0N(UART_SEND_RF_DATA[5]),
	.A1N(n13),
	.B0(n19),
	.Y(UART_TX_DATA[5]));
   AOI22X1M U34 (.A0(UART_SEND_ALU_DATA[13]),
	.A1(n17),
	.B0(UART_SEND_ALU_DATA[5]),
	.B1(n10),
	.Y(n19));
   OAI2BB1X2M U35 (.A0N(UART_SEND_RF_DATA[6]),
	.A1N(n13),
	.B0(n18),
	.Y(UART_TX_DATA[6]));
   AOI22X1M U36 (.A0(UART_SEND_ALU_DATA[14]),
	.A1(n17),
	.B0(UART_SEND_ALU_DATA[6]),
	.B1(n10),
	.Y(n18));
   OAI2BB1X2M U37 (.A0N(UART_SEND_RF_DATA[7]),
	.A1N(n13),
	.B0(n16),
	.Y(UART_TX_DATA[7]));
   AOI22X1M U38 (.A0(UART_SEND_ALU_DATA[15]),
	.A1(n17),
	.B0(UART_SEND_ALU_DATA[7]),
	.B1(n10),
	.Y(n16));
endmodule

module SYS_CTRL_test_1 (
	CLK, 
	RST, 
	RF_RdData, 
	RF_RdData_VLD, 
	RF_WrEn, 
	RF_RdEn, 
	RF_Address, 
	RF_WrData, 
	ALU_OUT, 
	ALU_OUT_VLD, 
	ALU_EN, 
	ALU_FUN, 
	CLKG_EN, 
	CLKDIV_EN, 
	UART_RX_DATA, 
	UART_RX_VLD, 
	UART_TX_Busy, 
	UART_TX_DATA, 
	UART_TX_VLD, 
	test_si2, 
	test_si1, 
	test_so2, 
	test_so1, 
	test_se, 
	p1, 
	p2, 
	p3);
   input CLK;
   input RST;
   input [7:0] RF_RdData;
   input RF_RdData_VLD;
   output RF_WrEn;
   output RF_RdEn;
   output [3:0] RF_Address;
   output [7:0] RF_WrData;
   input [15:0] ALU_OUT;
   input ALU_OUT_VLD;
   output ALU_EN;
   output [3:0] ALU_FUN;
   output CLKG_EN;
   output CLKDIV_EN;
   input [7:0] UART_RX_DATA;
   input UART_RX_VLD;
   input UART_TX_Busy;
   output [7:0] UART_TX_DATA;
   output UART_TX_VLD;
   input test_si2;
   input test_si1;
   output test_so2;
   output test_so1;
   input test_se;
   input p1;
   input p2;
   input p3;

   // Internal wires
   wire UART_RF_SEND;
   wire UART_ALU_SEND;
   wire n7;
   wire [7:0] UART_SEND_RF_DATA;
   wire [15:0] UART_SEND_ALU_DATA;

   assign test_so1 = UART_SEND_RF_DATA[1] ;

   CTRL_RX_test_1 U0_CTRL_RX (.CLK(CLK),
	.RST(RST),
	.RF_RdData(RF_RdData),
	.RF_RdData_VLD(RF_RdData_VLD),
	.ALU_OUT(ALU_OUT),
	.ALU_OUT_VLD(ALU_OUT_VLD),
	.UART_RX_DATA(UART_RX_DATA),
	.UART_RX_VLD(UART_RX_VLD),
	.ALU_EN(ALU_EN),
	.ALU_FUN(ALU_FUN),
	.CLKG_EN(CLKG_EN),
	.RF_WrEn(RF_WrEn),
	.RF_RdEn(RF_RdEn),
	.RF_Address(RF_Address),
	.RF_WrData(RF_WrData),
	.UART_RF_SEND(UART_RF_SEND),
	.UART_ALU_SEND(UART_ALU_SEND),
	.UART_SEND_RF_DATA(UART_SEND_RF_DATA),
	.UART_SEND_ALU_DATA(UART_SEND_ALU_DATA),
	.test_si2(test_si2),
	.test_si1(test_si1),
	.test_so1(n7),
	.test_se(test_se),
	.p1(p1),
	.p2(p2),
	.p3(p3));
   CTRL_TX_test_1 U0_CTRL_TX (.CLK(CLK),
	.RST(RST),
	.UART_RF_SEND(UART_RF_SEND),
	.UART_SEND_RF_DATA(UART_SEND_RF_DATA),
	.UART_ALU_SEND(UART_ALU_SEND),
	.UART_SEND_ALU_DATA(UART_SEND_ALU_DATA),
	.UART_TX_Busy(UART_TX_Busy),
	.UART_TX_DATA(UART_TX_DATA),
	.UART_TX_VLD(UART_TX_VLD),
	.test_si(n7),
	.test_so(test_so2),
	.test_se(p1));
endmodule

module RegFile_test_1 (
	CLK, 
	RST, 
	WrEn, 
	RdEn, 
	Address, 
	WrData, 
	RdData, 
	RdData_VLD, 
	REG0, 
	REG1, 
	REG2, 
	REG3, 
	test_si2, 
	test_si1, 
	test_so2, 
	test_so1, 
	test_se, 
	p1, 
	p2, 
	p3, 
	REF_SCAN_CLK__L3_N0);
   input CLK;
   input RST;
   input WrEn;
   input RdEn;
   input [3:0] Address;
   input [7:0] WrData;
   output [7:0] RdData;
   output RdData_VLD;
   output [7:0] REG0;
   output [7:0] REG1;
   output [7:0] REG2;
   output [7:0] REG3;
   input test_si2;
   input test_si1;
   output test_so2;
   output test_so1;
   input test_se;
   input p1;
   input p2;
   input p3;
   input REF_SCAN_CLK__L3_N0;

   // Internal wires
   wire FE_PHN30_SI_1_;
   wire FE_PHN28_SI_1_;
   wire FE_OFN21_REF_SCAN_RST;
   wire N11;
   wire N12;
   wire N13;
   wire N14;
   wire \regArr[15][7] ;
   wire \regArr[15][6] ;
   wire \regArr[15][5] ;
   wire \regArr[15][4] ;
   wire \regArr[15][3] ;
   wire \regArr[15][2] ;
   wire \regArr[15][1] ;
   wire \regArr[15][0] ;
   wire \regArr[14][7] ;
   wire \regArr[14][6] ;
   wire \regArr[14][5] ;
   wire \regArr[14][4] ;
   wire \regArr[14][3] ;
   wire \regArr[14][2] ;
   wire \regArr[14][1] ;
   wire \regArr[14][0] ;
   wire \regArr[13][7] ;
   wire \regArr[13][6] ;
   wire \regArr[13][5] ;
   wire \regArr[13][4] ;
   wire \regArr[13][3] ;
   wire \regArr[13][2] ;
   wire \regArr[13][1] ;
   wire \regArr[13][0] ;
   wire \regArr[12][7] ;
   wire \regArr[12][6] ;
   wire \regArr[12][5] ;
   wire \regArr[12][4] ;
   wire \regArr[12][3] ;
   wire \regArr[12][2] ;
   wire \regArr[12][1] ;
   wire \regArr[12][0] ;
   wire \regArr[11][7] ;
   wire \regArr[11][6] ;
   wire \regArr[11][5] ;
   wire \regArr[11][4] ;
   wire \regArr[11][3] ;
   wire \regArr[11][2] ;
   wire \regArr[11][1] ;
   wire \regArr[11][0] ;
   wire \regArr[10][7] ;
   wire \regArr[10][6] ;
   wire \regArr[10][5] ;
   wire \regArr[10][4] ;
   wire \regArr[10][3] ;
   wire \regArr[10][2] ;
   wire \regArr[10][1] ;
   wire \regArr[10][0] ;
   wire \regArr[9][7] ;
   wire \regArr[9][6] ;
   wire \regArr[9][5] ;
   wire \regArr[9][4] ;
   wire \regArr[9][3] ;
   wire \regArr[9][2] ;
   wire \regArr[9][1] ;
   wire \regArr[9][0] ;
   wire \regArr[8][7] ;
   wire \regArr[8][6] ;
   wire \regArr[8][5] ;
   wire \regArr[8][4] ;
   wire \regArr[8][3] ;
   wire \regArr[8][2] ;
   wire \regArr[8][1] ;
   wire \regArr[8][0] ;
   wire \regArr[7][7] ;
   wire \regArr[7][6] ;
   wire \regArr[7][5] ;
   wire \regArr[7][4] ;
   wire \regArr[7][3] ;
   wire \regArr[7][2] ;
   wire \regArr[7][1] ;
   wire \regArr[7][0] ;
   wire \regArr[6][7] ;
   wire \regArr[6][6] ;
   wire \regArr[6][5] ;
   wire \regArr[6][4] ;
   wire \regArr[6][3] ;
   wire \regArr[6][2] ;
   wire \regArr[6][1] ;
   wire \regArr[6][0] ;
   wire \regArr[5][7] ;
   wire \regArr[5][6] ;
   wire \regArr[5][5] ;
   wire \regArr[5][4] ;
   wire \regArr[5][3] ;
   wire \regArr[5][2] ;
   wire \regArr[5][1] ;
   wire \regArr[5][0] ;
   wire \regArr[4][7] ;
   wire \regArr[4][6] ;
   wire \regArr[4][5] ;
   wire \regArr[4][4] ;
   wire \regArr[4][3] ;
   wire \regArr[4][2] ;
   wire \regArr[4][1] ;
   wire \regArr[4][0] ;
   wire N36;
   wire N37;
   wire N38;
   wire N39;
   wire N40;
   wire N41;
   wire N42;
   wire N43;
   wire n151;
   wire n152;
   wire n153;
   wire n154;
   wire n155;
   wire n156;
   wire n157;
   wire n158;
   wire n159;
   wire n160;
   wire n161;
   wire n162;
   wire n163;
   wire n164;
   wire n165;
   wire n166;
   wire n167;
   wire n168;
   wire n169;
   wire n170;
   wire n171;
   wire n172;
   wire n173;
   wire n174;
   wire n175;
   wire n176;
   wire n177;
   wire n178;
   wire n179;
   wire n180;
   wire n181;
   wire n182;
   wire n183;
   wire n184;
   wire n185;
   wire n186;
   wire n187;
   wire n188;
   wire n189;
   wire n190;
   wire n191;
   wire n192;
   wire n193;
   wire n194;
   wire n195;
   wire n196;
   wire n197;
   wire n198;
   wire n199;
   wire n200;
   wire n201;
   wire n202;
   wire n203;
   wire n204;
   wire n205;
   wire n206;
   wire n207;
   wire n208;
   wire n209;
   wire n210;
   wire n211;
   wire n212;
   wire n213;
   wire n214;
   wire n215;
   wire n216;
   wire n217;
   wire n218;
   wire n219;
   wire n220;
   wire n221;
   wire n222;
   wire n223;
   wire n224;
   wire n225;
   wire n226;
   wire n227;
   wire n228;
   wire n229;
   wire n230;
   wire n231;
   wire n232;
   wire n233;
   wire n234;
   wire n235;
   wire n236;
   wire n237;
   wire n238;
   wire n239;
   wire n240;
   wire n241;
   wire n242;
   wire n243;
   wire n244;
   wire n245;
   wire n246;
   wire n247;
   wire n248;
   wire n249;
   wire n250;
   wire n251;
   wire n252;
   wire n253;
   wire n254;
   wire n255;
   wire n256;
   wire n257;
   wire n258;
   wire n259;
   wire n260;
   wire n261;
   wire n262;
   wire n263;
   wire n264;
   wire n265;
   wire n266;
   wire n267;
   wire n268;
   wire n269;
   wire n270;
   wire n271;
   wire n272;
   wire n273;
   wire n274;
   wire n275;
   wire n276;
   wire n277;
   wire n278;
   wire n279;
   wire n280;
   wire n281;
   wire n282;
   wire n283;
   wire n284;
   wire n285;
   wire n286;
   wire n287;
   wire n288;
   wire n289;
   wire n290;
   wire n291;
   wire n292;
   wire n293;
   wire n294;
   wire n295;
   wire n296;
   wire n297;
   wire n298;
   wire n299;
   wire n300;
   wire n301;
   wire n302;
   wire n303;
   wire n304;
   wire n305;
   wire n306;
   wire n307;
   wire n308;
   wire n309;
   wire n310;
   wire n311;
   wire n312;
   wire n313;
   wire n314;
   wire n315;
   wire n138;
   wire n139;
   wire n140;
   wire n141;
   wire n142;
   wire n143;
   wire n144;
   wire n145;
   wire n146;
   wire n147;
   wire n148;
   wire n149;
   wire n150;
   wire n316;
   wire n317;
   wire n318;
   wire n319;
   wire n320;
   wire n321;
   wire n322;
   wire n323;
   wire n324;
   wire n325;
   wire n326;
   wire n327;
   wire n328;
   wire n329;
   wire n330;
   wire n331;
   wire n332;
   wire n333;
   wire n334;
   wire n340;
   wire n341;
   wire n357;
   wire n358;
   wire n359;
   wire n360;
   wire n361;
   wire n362;
   wire n363;
   wire n364;
   wire n365;
   wire n366;
   wire n367;

   assign N11 = Address[0] ;
   assign N12 = Address[1] ;
   assign N13 = Address[2] ;
   assign N14 = Address[3] ;
   assign test_so2 = \regArr[15][7]  ;
   assign test_so1 = \regArr[7][2]  ;

   DLY4X1M FE_PHC30_SI_1_ (.A(FE_PHN28_SI_1_),
	.Y(FE_PHN30_SI_1_));
   DLY4X1M FE_PHC28_SI_1_ (.A(test_si2),
	.Y(FE_PHN28_SI_1_));
   BUFX8M FE_OFC21_REF_SCAN_RST (.A(p3),
	.Y(FE_OFN21_REF_SCAN_RST));
   SDFFRQX2M \RdData_reg[7]  (.SI(RdData[6]),
	.SE(p2),
	.D(n186),
	.CK(CLK),
	.RN(p3),
	.Q(RdData[7]));
   SDFFRQX2M \RdData_reg[6]  (.SI(RdData[5]),
	.SE(p2),
	.D(n185),
	.CK(CLK),
	.RN(RST),
	.Q(RdData[6]));
   SDFFRQX2M \RdData_reg[5]  (.SI(RdData[4]),
	.SE(p2),
	.D(n184),
	.CK(CLK),
	.RN(RST),
	.Q(RdData[5]));
   SDFFRQX2M \RdData_reg[4]  (.SI(RdData[3]),
	.SE(p2),
	.D(n183),
	.CK(CLK),
	.RN(RST),
	.Q(RdData[4]));
   SDFFRQX2M \RdData_reg[3]  (.SI(RdData[2]),
	.SE(p2),
	.D(n182),
	.CK(CLK),
	.RN(RST),
	.Q(RdData[3]));
   SDFFRQX2M \RdData_reg[2]  (.SI(RdData[1]),
	.SE(p2),
	.D(n181),
	.CK(CLK),
	.RN(RST),
	.Q(RdData[2]));
   SDFFRQX2M \RdData_reg[1]  (.SI(RdData[0]),
	.SE(p2),
	.D(n180),
	.CK(CLK),
	.RN(RST),
	.Q(RdData[1]));
   SDFFRQX2M \RdData_reg[0]  (.SI(RdData_VLD),
	.SE(p2),
	.D(n179),
	.CK(CLK),
	.RN(RST),
	.Q(RdData[0]));
   SDFFRQX2M \regArr_reg[13][7]  (.SI(\regArr[13][6] ),
	.SE(p1),
	.D(n299),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[13][7] ));
   SDFFRQX2M \regArr_reg[13][6]  (.SI(\regArr[13][5] ),
	.SE(p1),
	.D(n298),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[13][6] ));
   SDFFRQX2M \regArr_reg[13][5]  (.SI(\regArr[13][4] ),
	.SE(p1),
	.D(n297),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[13][5] ));
   SDFFRQX2M \regArr_reg[13][4]  (.SI(\regArr[13][3] ),
	.SE(p1),
	.D(n296),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[13][4] ));
   SDFFRQX2M \regArr_reg[13][3]  (.SI(\regArr[13][2] ),
	.SE(p1),
	.D(n295),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[13][3] ));
   SDFFRQX2M \regArr_reg[13][2]  (.SI(\regArr[13][1] ),
	.SE(p1),
	.D(n294),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[13][2] ));
   SDFFRQX2M \regArr_reg[13][1]  (.SI(\regArr[13][0] ),
	.SE(p1),
	.D(n293),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[13][1] ));
   SDFFRQX2M \regArr_reg[13][0]  (.SI(\regArr[12][7] ),
	.SE(p1),
	.D(n292),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[13][0] ));
   SDFFRQX2M \regArr_reg[9][7]  (.SI(\regArr[9][6] ),
	.SE(p1),
	.D(n267),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[9][7] ));
   SDFFRQX2M \regArr_reg[9][6]  (.SI(\regArr[9][5] ),
	.SE(p1),
	.D(n266),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[9][6] ));
   SDFFRQX2M \regArr_reg[9][5]  (.SI(\regArr[9][4] ),
	.SE(p1),
	.D(n265),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[9][5] ));
   SDFFRQX2M \regArr_reg[9][4]  (.SI(\regArr[9][3] ),
	.SE(p1),
	.D(n264),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[9][4] ));
   SDFFRQX2M \regArr_reg[9][3]  (.SI(\regArr[9][2] ),
	.SE(p1),
	.D(n263),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[9][3] ));
   SDFFRQX2M \regArr_reg[9][2]  (.SI(\regArr[9][1] ),
	.SE(test_se),
	.D(n262),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[9][2] ));
   SDFFRQX2M \regArr_reg[9][1]  (.SI(\regArr[9][0] ),
	.SE(test_se),
	.D(n261),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[9][1] ));
   SDFFRQX2M \regArr_reg[9][0]  (.SI(\regArr[8][7] ),
	.SE(test_se),
	.D(n260),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[9][0] ));
   SDFFRQX2M \regArr_reg[5][7]  (.SI(\regArr[5][6] ),
	.SE(test_se),
	.D(n235),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[5][7] ));
   SDFFRQX2M \regArr_reg[5][6]  (.SI(\regArr[5][5] ),
	.SE(test_se),
	.D(n234),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[5][6] ));
   SDFFRQX2M \regArr_reg[5][5]  (.SI(\regArr[5][4] ),
	.SE(test_se),
	.D(n233),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[5][5] ));
   SDFFRQX2M \regArr_reg[5][4]  (.SI(\regArr[5][3] ),
	.SE(test_se),
	.D(n232),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[5][4] ));
   SDFFRQX2M \regArr_reg[5][3]  (.SI(\regArr[5][2] ),
	.SE(test_se),
	.D(n231),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[5][3] ));
   SDFFRQX2M \regArr_reg[5][2]  (.SI(\regArr[5][1] ),
	.SE(test_se),
	.D(n230),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[5][2] ));
   SDFFRQX2M \regArr_reg[5][1]  (.SI(\regArr[5][0] ),
	.SE(test_se),
	.D(n229),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[5][1] ));
   SDFFRQX2M \regArr_reg[5][0]  (.SI(\regArr[4][7] ),
	.SE(test_se),
	.D(n228),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[5][0] ));
   SDFFRQX2M \regArr_reg[15][7]  (.SI(\regArr[15][6] ),
	.SE(p1),
	.D(n315),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[15][7] ));
   SDFFRQX2M \regArr_reg[15][6]  (.SI(\regArr[15][5] ),
	.SE(p1),
	.D(n314),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[15][6] ));
   SDFFRQX2M \regArr_reg[15][5]  (.SI(\regArr[15][4] ),
	.SE(p1),
	.D(n313),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[15][5] ));
   SDFFRQX2M \regArr_reg[15][4]  (.SI(\regArr[15][3] ),
	.SE(p1),
	.D(n312),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[15][4] ));
   SDFFRQX2M \regArr_reg[15][3]  (.SI(\regArr[15][2] ),
	.SE(p1),
	.D(n311),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[15][3] ));
   SDFFRQX2M \regArr_reg[15][2]  (.SI(\regArr[15][1] ),
	.SE(p1),
	.D(n310),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[15][2] ));
   SDFFRQX2M \regArr_reg[15][1]  (.SI(\regArr[15][0] ),
	.SE(p1),
	.D(n309),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[15][1] ));
   SDFFRQX2M \regArr_reg[15][0]  (.SI(\regArr[14][7] ),
	.SE(p1),
	.D(n308),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[15][0] ));
   SDFFRQX2M \regArr_reg[11][7]  (.SI(\regArr[11][6] ),
	.SE(p1),
	.D(n283),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[11][7] ));
   SDFFRQX2M \regArr_reg[11][6]  (.SI(\regArr[11][5] ),
	.SE(p1),
	.D(n282),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[11][6] ));
   SDFFRQX2M \regArr_reg[11][5]  (.SI(\regArr[11][4] ),
	.SE(p1),
	.D(n281),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[11][5] ));
   SDFFRQX2M \regArr_reg[11][4]  (.SI(\regArr[11][3] ),
	.SE(p1),
	.D(n280),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[11][4] ));
   SDFFRQX2M \regArr_reg[11][3]  (.SI(\regArr[11][2] ),
	.SE(p1),
	.D(n279),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[11][3] ));
   SDFFRQX2M \regArr_reg[11][2]  (.SI(\regArr[11][1] ),
	.SE(p1),
	.D(n278),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[11][2] ));
   SDFFRQX2M \regArr_reg[11][1]  (.SI(\regArr[11][0] ),
	.SE(test_se),
	.D(n277),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[11][1] ));
   SDFFRQX2M \regArr_reg[11][0]  (.SI(\regArr[10][7] ),
	.SE(p1),
	.D(n276),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[11][0] ));
   SDFFRQX2M \regArr_reg[7][7]  (.SI(\regArr[7][6] ),
	.SE(test_se),
	.D(n251),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[7][7] ));
   SDFFRQX2M \regArr_reg[7][6]  (.SI(\regArr[7][5] ),
	.SE(test_se),
	.D(n250),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[7][6] ));
   SDFFRQX2M \regArr_reg[7][5]  (.SI(\regArr[7][4] ),
	.SE(test_se),
	.D(n249),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[7][5] ));
   SDFFRQX2M \regArr_reg[7][4]  (.SI(\regArr[7][3] ),
	.SE(test_se),
	.D(n248),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[7][4] ));
   SDFFRQX2M \regArr_reg[7][3]  (.SI(FE_PHN30_SI_1_),
	.SE(test_se),
	.D(n247),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[7][3] ));
   SDFFRQX2M \regArr_reg[7][2]  (.SI(\regArr[7][1] ),
	.SE(test_se),
	.D(n246),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[7][2] ));
   SDFFRQX2M \regArr_reg[7][1]  (.SI(\regArr[7][0] ),
	.SE(test_se),
	.D(n245),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[7][1] ));
   SDFFRQX2M \regArr_reg[7][0]  (.SI(\regArr[6][7] ),
	.SE(test_se),
	.D(n244),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[7][0] ));
   SDFFRQX2M \regArr_reg[3][7]  (.SI(REG3[6]),
	.SE(test_se),
	.D(n219),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(REG3[7]));
   SDFFRQX2M \regArr_reg[3][6]  (.SI(REG3[5]),
	.SE(test_se),
	.D(n218),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(REG3[6]));
   SDFFRQX2M \regArr_reg[3][5]  (.SI(REG3[4]),
	.SE(test_se),
	.D(n217),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(REG3[5]));
   SDFFRQX2M \regArr_reg[3][4]  (.SI(REG3[3]),
	.SE(test_se),
	.D(n216),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(REG3[4]));
   SDFFRQX2M \regArr_reg[14][7]  (.SI(\regArr[14][6] ),
	.SE(p1),
	.D(n307),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[14][7] ));
   SDFFRQX2M \regArr_reg[14][6]  (.SI(\regArr[14][5] ),
	.SE(p1),
	.D(n306),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[14][6] ));
   SDFFRQX2M \regArr_reg[14][5]  (.SI(\regArr[14][4] ),
	.SE(p1),
	.D(n305),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[14][5] ));
   SDFFRQX2M \regArr_reg[14][4]  (.SI(\regArr[14][3] ),
	.SE(p1),
	.D(n304),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[14][4] ));
   SDFFRQX2M \regArr_reg[14][3]  (.SI(\regArr[14][2] ),
	.SE(p1),
	.D(n303),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[14][3] ));
   SDFFRQX2M \regArr_reg[14][2]  (.SI(\regArr[14][1] ),
	.SE(p1),
	.D(n302),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[14][2] ));
   SDFFRQX2M \regArr_reg[14][1]  (.SI(\regArr[14][0] ),
	.SE(p1),
	.D(n301),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[14][1] ));
   SDFFRQX2M \regArr_reg[14][0]  (.SI(\regArr[13][7] ),
	.SE(p1),
	.D(n300),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[14][0] ));
   SDFFRQX2M \regArr_reg[10][7]  (.SI(\regArr[10][6] ),
	.SE(p1),
	.D(n275),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[10][7] ));
   SDFFRQX2M \regArr_reg[10][6]  (.SI(\regArr[10][5] ),
	.SE(p1),
	.D(n274),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[10][6] ));
   SDFFRQX2M \regArr_reg[10][5]  (.SI(\regArr[10][4] ),
	.SE(p1),
	.D(n273),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[10][5] ));
   SDFFRQX2M \regArr_reg[10][4]  (.SI(\regArr[10][3] ),
	.SE(p1),
	.D(n272),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[10][4] ));
   SDFFRQX2M \regArr_reg[10][3]  (.SI(\regArr[10][2] ),
	.SE(p1),
	.D(n271),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[10][3] ));
   SDFFRQX2M \regArr_reg[10][2]  (.SI(\regArr[10][1] ),
	.SE(test_se),
	.D(n270),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[10][2] ));
   SDFFRQX2M \regArr_reg[10][1]  (.SI(\regArr[10][0] ),
	.SE(test_se),
	.D(n269),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[10][1] ));
   SDFFRQX2M \regArr_reg[10][0]  (.SI(\regArr[9][7] ),
	.SE(p1),
	.D(n268),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[10][0] ));
   SDFFRQX2M \regArr_reg[6][7]  (.SI(\regArr[6][6] ),
	.SE(test_se),
	.D(n243),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[6][7] ));
   SDFFRQX2M \regArr_reg[6][6]  (.SI(\regArr[6][5] ),
	.SE(test_se),
	.D(n242),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[6][6] ));
   SDFFRQX2M \regArr_reg[6][5]  (.SI(\regArr[6][4] ),
	.SE(test_se),
	.D(n241),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[6][5] ));
   SDFFRQX2M \regArr_reg[6][4]  (.SI(\regArr[6][3] ),
	.SE(test_se),
	.D(n240),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[6][4] ));
   SDFFRQX2M \regArr_reg[6][3]  (.SI(\regArr[6][2] ),
	.SE(test_se),
	.D(n239),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[6][3] ));
   SDFFRQX2M \regArr_reg[6][2]  (.SI(\regArr[6][1] ),
	.SE(test_se),
	.D(n238),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[6][2] ));
   SDFFRQX2M \regArr_reg[6][1]  (.SI(\regArr[6][0] ),
	.SE(test_se),
	.D(n237),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[6][1] ));
   SDFFRQX2M \regArr_reg[6][0]  (.SI(\regArr[5][7] ),
	.SE(test_se),
	.D(n236),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[6][0] ));
   SDFFRQX2M \regArr_reg[2][7]  (.SI(REG2[6]),
	.SE(p1),
	.D(n211),
	.CK(CLK),
	.RN(p3),
	.Q(REG2[7]));
   SDFFRQX2M \regArr_reg[2][2]  (.SI(REG2[1]),
	.SE(test_se),
	.D(n206),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(REG2[2]));
   SDFFRQX2M \regArr_reg[12][7]  (.SI(\regArr[12][6] ),
	.SE(p1),
	.D(n291),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[12][7] ));
   SDFFRQX2M \regArr_reg[12][6]  (.SI(\regArr[12][5] ),
	.SE(p1),
	.D(n290),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[12][6] ));
   SDFFRQX2M \regArr_reg[12][5]  (.SI(\regArr[12][4] ),
	.SE(p1),
	.D(n289),
	.CK(CLK),
	.RN(p3),
	.Q(\regArr[12][5] ));
   SDFFRQX2M \regArr_reg[12][4]  (.SI(\regArr[12][3] ),
	.SE(p1),
	.D(n288),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[12][4] ));
   SDFFRQX2M \regArr_reg[12][3]  (.SI(\regArr[12][2] ),
	.SE(p1),
	.D(n287),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[12][3] ));
   SDFFRQX2M \regArr_reg[12][2]  (.SI(\regArr[12][1] ),
	.SE(p1),
	.D(n286),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[12][2] ));
   SDFFRQX2M \regArr_reg[12][1]  (.SI(\regArr[12][0] ),
	.SE(p1),
	.D(n285),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(\regArr[12][1] ));
   SDFFRQX2M \regArr_reg[12][0]  (.SI(\regArr[11][7] ),
	.SE(p1),
	.D(n284),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[12][0] ));
   SDFFRQX2M \regArr_reg[8][7]  (.SI(\regArr[8][6] ),
	.SE(p1),
	.D(n259),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[8][7] ));
   SDFFRQX2M \regArr_reg[8][6]  (.SI(\regArr[8][5] ),
	.SE(p1),
	.D(n258),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[8][6] ));
   SDFFRQX2M \regArr_reg[8][5]  (.SI(\regArr[8][4] ),
	.SE(p1),
	.D(n257),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[8][5] ));
   SDFFRQX2M \regArr_reg[8][4]  (.SI(\regArr[8][3] ),
	.SE(p1),
	.D(n256),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[8][4] ));
   SDFFRQX2M \regArr_reg[8][3]  (.SI(\regArr[8][2] ),
	.SE(p1),
	.D(n255),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[8][3] ));
   SDFFRQX2M \regArr_reg[8][2]  (.SI(\regArr[8][1] ),
	.SE(test_se),
	.D(n254),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[8][2] ));
   SDFFRQX2M \regArr_reg[8][1]  (.SI(\regArr[8][0] ),
	.SE(test_se),
	.D(n253),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[8][1] ));
   SDFFRQX2M \regArr_reg[8][0]  (.SI(\regArr[7][7] ),
	.SE(p1),
	.D(n252),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[8][0] ));
   SDFFRQX2M \regArr_reg[4][7]  (.SI(\regArr[4][6] ),
	.SE(test_se),
	.D(n227),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[4][7] ));
   SDFFRQX2M \regArr_reg[4][6]  (.SI(\regArr[4][5] ),
	.SE(test_se),
	.D(n226),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[4][6] ));
   SDFFRQX2M \regArr_reg[4][5]  (.SI(\regArr[4][4] ),
	.SE(test_se),
	.D(n225),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[4][5] ));
   SDFFRQX2M \regArr_reg[4][4]  (.SI(\regArr[4][3] ),
	.SE(test_se),
	.D(n224),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[4][4] ));
   SDFFRQX2M \regArr_reg[4][3]  (.SI(\regArr[4][2] ),
	.SE(test_se),
	.D(n223),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[4][3] ));
   SDFFRQX2M \regArr_reg[4][2]  (.SI(\regArr[4][1] ),
	.SE(test_se),
	.D(n222),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[4][2] ));
   SDFFRQX2M \regArr_reg[4][1]  (.SI(\regArr[4][0] ),
	.SE(test_se),
	.D(n221),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[4][1] ));
   SDFFRQX2M \regArr_reg[4][0]  (.SI(REG3[7]),
	.SE(test_se),
	.D(n220),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(\regArr[4][0] ));
   SDFFSQX2M \regArr_reg[2][5]  (.SI(REG2[4]),
	.SE(p1),
	.D(n209),
	.CK(CLK),
	.SN(p3),
	.Q(REG2[5]));
   SDFFRQX2M \regArr_reg[1][6]  (.SI(REG1[5]),
	.SE(p1),
	.D(n202),
	.CK(CLK),
	.RN(p3),
	.Q(REG1[6]));
   SDFFRQX2M \regArr_reg[0][7]  (.SI(REG0[6]),
	.SE(p2),
	.D(n195),
	.CK(CLK),
	.RN(p3),
	.Q(REG0[7]));
   SDFFRQX2M \regArr_reg[0][6]  (.SI(REG0[5]),
	.SE(p2),
	.D(n194),
	.CK(CLK),
	.RN(p3),
	.Q(REG0[6]));
   SDFFRQX2M \regArr_reg[0][5]  (.SI(REG0[4]),
	.SE(p1),
	.D(n193),
	.CK(CLK),
	.RN(p3),
	.Q(REG0[5]));
   SDFFRQX2M \regArr_reg[0][4]  (.SI(REG0[3]),
	.SE(test_se),
	.D(n192),
	.CK(CLK),
	.RN(p3),
	.Q(REG0[4]));
   SDFFRQX2M \regArr_reg[0][3]  (.SI(REG0[2]),
	.SE(test_se),
	.D(n191),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(REG0[3]));
   SDFFRQX2M \regArr_reg[0][2]  (.SI(REG0[1]),
	.SE(test_se),
	.D(n190),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(REG0[2]));
   SDFFRQX2M \regArr_reg[0][1]  (.SI(REG0[0]),
	.SE(test_se),
	.D(n189),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(REG0[1]));
   SDFFRQX2M \regArr_reg[0][0]  (.SI(RdData[7]),
	.SE(p2),
	.D(n188),
	.CK(CLK),
	.RN(p3),
	.Q(REG0[0]));
   SDFFRQX2M \regArr_reg[2][1]  (.SI(REG2[0]),
	.SE(p1),
	.D(n205),
	.CK(CLK),
	.RN(p3),
	.Q(REG2[1]));
   SDFFSQX2M \regArr_reg[2][0]  (.SI(REG1[7]),
	.SE(p1),
	.D(n204),
	.CK(CLK),
	.SN(p3),
	.Q(REG2[0]));
   SDFFRQX2M \regArr_reg[2][6]  (.SI(REG2[5]),
	.SE(p1),
	.D(n210),
	.CK(CLK),
	.RN(p3),
	.Q(REG2[6]));
   SDFFRQX2M \regArr_reg[3][0]  (.SI(REG2[7]),
	.SE(test_se),
	.D(n212),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(REG3[0]));
   SDFFRQX2M RdData_VLD_reg (.SI(test_si1),
	.SE(p2),
	.D(n187),
	.CK(CLK),
	.RN(RST),
	.Q(RdData_VLD));
   SDFFSQX2M \regArr_reg[3][3]  (.SI(REG3[2]),
	.SE(test_se),
	.D(n215),
	.CK(REF_SCAN_CLK__L3_N0),
	.SN(FE_OFN21_REF_SCAN_RST),
	.Q(REG3[3]));
   SDFFRQX2M \regArr_reg[1][1]  (.SI(REG1[0]),
	.SE(test_se),
	.D(n197),
	.CK(CLK),
	.RN(p3),
	.Q(REG1[1]));
   SDFFRQX2M \regArr_reg[1][5]  (.SI(REG1[4]),
	.SE(test_se),
	.D(n201),
	.CK(CLK),
	.RN(p3),
	.Q(REG1[5]));
   SDFFRQX2M \regArr_reg[1][4]  (.SI(REG1[3]),
	.SE(test_se),
	.D(n200),
	.CK(CLK),
	.RN(p3),
	.Q(REG1[4]));
   SDFFRQX2M \regArr_reg[1][7]  (.SI(REG1[6]),
	.SE(p2),
	.D(n203),
	.CK(CLK),
	.RN(p3),
	.Q(REG1[7]));
   SDFFRQX2M \regArr_reg[1][3]  (.SI(REG1[2]),
	.SE(test_se),
	.D(n199),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(REG1[3]));
   SDFFRQX2M \regArr_reg[1][2]  (.SI(REG1[1]),
	.SE(test_se),
	.D(n198),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(REG1[2]));
   SDFFRQX2M \regArr_reg[1][0]  (.SI(REG0[7]),
	.SE(test_se),
	.D(n196),
	.CK(CLK),
	.RN(p3),
	.Q(REG1[0]));
   SDFFRQX2M \regArr_reg[3][1]  (.SI(REG3[0]),
	.SE(test_se),
	.D(n213),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(REG3[1]));
   SDFFRQX2M \regArr_reg[2][4]  (.SI(REG2[3]),
	.SE(p1),
	.D(n208),
	.CK(CLK),
	.RN(p3),
	.Q(REG2[4]));
   SDFFRQX2M \regArr_reg[3][2]  (.SI(REG3[1]),
	.SE(test_se),
	.D(n214),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(FE_OFN21_REF_SCAN_RST),
	.Q(REG3[2]));
   SDFFRQX2M \regArr_reg[2][3]  (.SI(REG2[2]),
	.SE(test_se),
	.D(n207),
	.CK(REF_SCAN_CLK__L3_N0),
	.RN(p3),
	.Q(REG2[3]));
   NOR2X2M U140 (.A(n341),
	.B(N13),
	.Y(n167));
   NOR2X2M U141 (.A(N12),
	.B(N13),
	.Y(n162));
   NOR2X2M U142 (.A(n341),
	.B(n367),
	.Y(n156));
   INVX2M U143 (.A(WrData[5]),
	.Y(n362));
   INVX2M U144 (.A(WrData[6]),
	.Y(n363));
   NAND2X2M U147 (.A(n165),
	.B(n154),
	.Y(n170));
   NAND2X2M U150 (.A(n153),
	.B(n154),
	.Y(n152));
   NAND2X2M U152 (.A(n162),
	.B(n163),
	.Y(n161));
   NAND2X2M U153 (.A(n167),
	.B(n163),
	.Y(n166));
   NAND2X2M U154 (.A(n167),
	.B(n165),
	.Y(n168));
   NAND2X2M U155 (.A(n162),
	.B(n157),
	.Y(n174));
   NAND2X2M U156 (.A(n162),
	.B(n153),
	.Y(n175));
   NAND2X2M U157 (.A(n167),
	.B(n157),
	.Y(n176));
   NAND2X2M U158 (.A(n167),
	.B(n153),
	.Y(n177));
   NAND2X2M U159 (.A(n156),
	.B(n157),
	.Y(n155));
   NAND2X2M U160 (.A(n156),
	.B(n153),
	.Y(n158));
   NAND2X2M U161 (.A(n165),
	.B(n162),
	.Y(n164));
   NAND2X2M U162 (.A(n163),
	.B(n154),
	.Y(n169));
   NAND2X2M U163 (.A(n163),
	.B(n156),
	.Y(n171));
   NAND2X2M U164 (.A(n165),
	.B(n156),
	.Y(n173));
   AND2X2M U165 (.A(n178),
	.B(N11),
	.Y(n153));
   AND2X2M U166 (.A(n172),
	.B(N11),
	.Y(n165));
   NOR2X2M U167 (.A(n367),
	.B(N12),
	.Y(n154));
   NAND2X2M U168 (.A(n154),
	.B(n157),
	.Y(n151));
   INVX2M U169 (.A(n159),
	.Y(n365));
   NOR2X2M U180 (.A(n366),
	.B(RdEn),
	.Y(n160));
   AND2X2M U181 (.A(n178),
	.B(n340),
	.Y(n157));
   AND2X2M U182 (.A(n172),
	.B(n340),
	.Y(n163));
   NOR2BX2M U183 (.AN(n160),
	.B(N14),
	.Y(n172));
   INVX2M U184 (.A(WrEn),
	.Y(n366));
   AND2X2M U185 (.A(N14),
	.B(n160),
	.Y(n178));
   INVX2M U186 (.A(WrData[0]),
	.Y(n357));
   INVX2M U187 (.A(WrData[1]),
	.Y(n358));
   INVX2M U188 (.A(WrData[2]),
	.Y(n359));
   INVX2M U189 (.A(WrData[3]),
	.Y(n360));
   INVX2M U190 (.A(WrData[4]),
	.Y(n361));
   INVX2M U191 (.A(WrData[7]),
	.Y(n364));
   NAND2X2M U192 (.A(RdEn),
	.B(n366),
	.Y(n159));
   INVX2M U193 (.A(N13),
	.Y(n367));
   OAI2BB2X1M U199 (.A0N(\regArr[14][0] ),
	.A1N(n155),
	.B0(n357),
	.B1(n155),
	.Y(n300));
   OAI2BB2X1M U200 (.A0N(\regArr[14][1] ),
	.A1N(n155),
	.B0(n358),
	.B1(n155),
	.Y(n301));
   OAI2BB2X1M U201 (.A0N(\regArr[14][2] ),
	.A1N(n155),
	.B0(n359),
	.B1(n155),
	.Y(n302));
   OAI2BB2X1M U202 (.A0N(\regArr[14][3] ),
	.A1N(n155),
	.B0(n360),
	.B1(n155),
	.Y(n303));
   OAI2BB2X1M U203 (.A0N(\regArr[14][4] ),
	.A1N(n155),
	.B0(n361),
	.B1(n155),
	.Y(n304));
   OAI2BB2X1M U204 (.A0N(\regArr[14][5] ),
	.A1N(n155),
	.B0(n362),
	.B1(n155),
	.Y(n305));
   OAI2BB2X1M U205 (.A0N(\regArr[14][6] ),
	.A1N(n155),
	.B0(n363),
	.B1(n155),
	.Y(n306));
   OAI2BB2X1M U206 (.A0N(\regArr[14][7] ),
	.A1N(n155),
	.B0(n364),
	.B1(n155),
	.Y(n307));
   OAI2BB2X1M U207 (.A0N(\regArr[15][0] ),
	.A1N(n158),
	.B0(n357),
	.B1(n158),
	.Y(n308));
   OAI2BB2X1M U208 (.A0N(\regArr[15][1] ),
	.A1N(n158),
	.B0(n358),
	.B1(n158),
	.Y(n309));
   OAI2BB2X1M U209 (.A0N(\regArr[15][2] ),
	.A1N(n158),
	.B0(n359),
	.B1(n158),
	.Y(n310));
   OAI2BB2X1M U210 (.A0N(\regArr[15][3] ),
	.A1N(n158),
	.B0(n360),
	.B1(n158),
	.Y(n311));
   OAI2BB2X1M U211 (.A0N(\regArr[15][4] ),
	.A1N(n158),
	.B0(n361),
	.B1(n158),
	.Y(n312));
   OAI2BB2X1M U212 (.A0N(\regArr[15][5] ),
	.A1N(n158),
	.B0(n362),
	.B1(n158),
	.Y(n313));
   OAI2BB2X1M U213 (.A0N(\regArr[15][6] ),
	.A1N(n158),
	.B0(n363),
	.B1(n158),
	.Y(n314));
   OAI2BB2X1M U214 (.A0N(\regArr[15][7] ),
	.A1N(n158),
	.B0(n364),
	.B1(n158),
	.Y(n315));
   OAI2BB2X1M U215 (.A0N(REG0[0]),
	.A1N(n161),
	.B0(n357),
	.B1(n161),
	.Y(n188));
   OAI2BB2X1M U216 (.A0N(REG0[1]),
	.A1N(n161),
	.B0(n358),
	.B1(n161),
	.Y(n189));
   OAI2BB2X1M U217 (.A0N(REG0[2]),
	.A1N(n161),
	.B0(n359),
	.B1(n161),
	.Y(n190));
   OAI2BB2X1M U218 (.A0N(REG0[3]),
	.A1N(n161),
	.B0(n360),
	.B1(n161),
	.Y(n191));
   OAI2BB2X1M U219 (.A0N(REG0[4]),
	.A1N(n161),
	.B0(n361),
	.B1(n161),
	.Y(n192));
   OAI2BB2X1M U220 (.A0N(REG0[5]),
	.A1N(n161),
	.B0(n362),
	.B1(n161),
	.Y(n193));
   OAI2BB2X1M U221 (.A0N(REG0[6]),
	.A1N(n161),
	.B0(n363),
	.B1(n161),
	.Y(n194));
   OAI2BB2X1M U222 (.A0N(REG0[7]),
	.A1N(n161),
	.B0(n364),
	.B1(n161),
	.Y(n195));
   OAI2BB2X1M U223 (.A0N(\regArr[8][0] ),
	.A1N(n174),
	.B0(n357),
	.B1(n174),
	.Y(n252));
   OAI2BB2X1M U224 (.A0N(\regArr[8][1] ),
	.A1N(n174),
	.B0(n358),
	.B1(n174),
	.Y(n253));
   OAI2BB2X1M U225 (.A0N(\regArr[8][2] ),
	.A1N(n174),
	.B0(n359),
	.B1(n174),
	.Y(n254));
   OAI2BB2X1M U226 (.A0N(\regArr[8][3] ),
	.A1N(n174),
	.B0(n360),
	.B1(n174),
	.Y(n255));
   OAI2BB2X1M U227 (.A0N(\regArr[8][4] ),
	.A1N(n174),
	.B0(n361),
	.B1(n174),
	.Y(n256));
   OAI2BB2X1M U228 (.A0N(\regArr[8][5] ),
	.A1N(n174),
	.B0(n362),
	.B1(n174),
	.Y(n257));
   OAI2BB2X1M U229 (.A0N(\regArr[8][6] ),
	.A1N(n174),
	.B0(n363),
	.B1(n174),
	.Y(n258));
   OAI2BB2X1M U230 (.A0N(\regArr[8][7] ),
	.A1N(n174),
	.B0(n364),
	.B1(n174),
	.Y(n259));
   OAI2BB2X1M U231 (.A0N(\regArr[9][0] ),
	.A1N(n175),
	.B0(n357),
	.B1(n175),
	.Y(n260));
   OAI2BB2X1M U232 (.A0N(\regArr[9][1] ),
	.A1N(n175),
	.B0(n358),
	.B1(n175),
	.Y(n261));
   OAI2BB2X1M U233 (.A0N(\regArr[9][2] ),
	.A1N(n175),
	.B0(n359),
	.B1(n175),
	.Y(n262));
   OAI2BB2X1M U234 (.A0N(\regArr[9][3] ),
	.A1N(n175),
	.B0(n360),
	.B1(n175),
	.Y(n263));
   OAI2BB2X1M U235 (.A0N(\regArr[9][4] ),
	.A1N(n175),
	.B0(n361),
	.B1(n175),
	.Y(n264));
   OAI2BB2X1M U236 (.A0N(\regArr[9][5] ),
	.A1N(n175),
	.B0(n362),
	.B1(n175),
	.Y(n265));
   OAI2BB2X1M U237 (.A0N(\regArr[9][6] ),
	.A1N(n175),
	.B0(n363),
	.B1(n175),
	.Y(n266));
   OAI2BB2X1M U238 (.A0N(\regArr[9][7] ),
	.A1N(n175),
	.B0(n364),
	.B1(n175),
	.Y(n267));
   OAI2BB2X1M U239 (.A0N(REG2[1]),
	.A1N(n166),
	.B0(n358),
	.B1(n166),
	.Y(n205));
   OAI2BB2X1M U240 (.A0N(REG2[2]),
	.A1N(n166),
	.B0(n359),
	.B1(n166),
	.Y(n206));
   OAI2BB2X1M U241 (.A0N(REG2[3]),
	.A1N(n166),
	.B0(n360),
	.B1(n166),
	.Y(n207));
   OAI2BB2X1M U242 (.A0N(REG2[4]),
	.A1N(n166),
	.B0(n361),
	.B1(n166),
	.Y(n208));
   OAI2BB2X1M U243 (.A0N(REG2[6]),
	.A1N(n166),
	.B0(n363),
	.B1(n166),
	.Y(n210));
   OAI2BB2X1M U244 (.A0N(REG2[7]),
	.A1N(n166),
	.B0(n364),
	.B1(n166),
	.Y(n211));
   OAI2BB2X1M U245 (.A0N(REG3[0]),
	.A1N(n168),
	.B0(n357),
	.B1(n168),
	.Y(n212));
   OAI2BB2X1M U246 (.A0N(REG3[1]),
	.A1N(n168),
	.B0(n358),
	.B1(n168),
	.Y(n213));
   OAI2BB2X1M U247 (.A0N(REG3[2]),
	.A1N(n168),
	.B0(n359),
	.B1(n168),
	.Y(n214));
   OAI2BB2X1M U248 (.A0N(REG3[4]),
	.A1N(n168),
	.B0(n361),
	.B1(n168),
	.Y(n216));
   OAI2BB2X1M U249 (.A0N(REG3[5]),
	.A1N(n168),
	.B0(n362),
	.B1(n168),
	.Y(n217));
   OAI2BB2X1M U250 (.A0N(REG3[6]),
	.A1N(n168),
	.B0(n363),
	.B1(n168),
	.Y(n218));
   OAI2BB2X1M U251 (.A0N(REG3[7]),
	.A1N(n168),
	.B0(n364),
	.B1(n168),
	.Y(n219));
   OAI2BB2X1M U252 (.A0N(\regArr[10][0] ),
	.A1N(n176),
	.B0(n357),
	.B1(n176),
	.Y(n268));
   OAI2BB2X1M U253 (.A0N(\regArr[10][1] ),
	.A1N(n176),
	.B0(n358),
	.B1(n176),
	.Y(n269));
   OAI2BB2X1M U254 (.A0N(\regArr[10][2] ),
	.A1N(n176),
	.B0(n359),
	.B1(n176),
	.Y(n270));
   OAI2BB2X1M U255 (.A0N(\regArr[10][3] ),
	.A1N(n176),
	.B0(n360),
	.B1(n176),
	.Y(n271));
   OAI2BB2X1M U256 (.A0N(\regArr[10][4] ),
	.A1N(n176),
	.B0(n361),
	.B1(n176),
	.Y(n272));
   OAI2BB2X1M U257 (.A0N(\regArr[10][5] ),
	.A1N(n176),
	.B0(n362),
	.B1(n176),
	.Y(n273));
   OAI2BB2X1M U258 (.A0N(\regArr[10][6] ),
	.A1N(n176),
	.B0(n363),
	.B1(n176),
	.Y(n274));
   OAI2BB2X1M U259 (.A0N(\regArr[10][7] ),
	.A1N(n176),
	.B0(n364),
	.B1(n176),
	.Y(n275));
   OAI2BB2X1M U260 (.A0N(\regArr[11][0] ),
	.A1N(n177),
	.B0(n357),
	.B1(n177),
	.Y(n276));
   OAI2BB2X1M U261 (.A0N(\regArr[11][1] ),
	.A1N(n177),
	.B0(n358),
	.B1(n177),
	.Y(n277));
   OAI2BB2X1M U262 (.A0N(\regArr[11][2] ),
	.A1N(n177),
	.B0(n359),
	.B1(n177),
	.Y(n278));
   OAI2BB2X1M U263 (.A0N(\regArr[11][3] ),
	.A1N(n177),
	.B0(n360),
	.B1(n177),
	.Y(n279));
   OAI2BB2X1M U264 (.A0N(\regArr[11][4] ),
	.A1N(n177),
	.B0(n361),
	.B1(n177),
	.Y(n280));
   OAI2BB2X1M U265 (.A0N(\regArr[11][5] ),
	.A1N(n177),
	.B0(n362),
	.B1(n177),
	.Y(n281));
   OAI2BB2X1M U266 (.A0N(\regArr[11][6] ),
	.A1N(n177),
	.B0(n363),
	.B1(n177),
	.Y(n282));
   OAI2BB2X1M U267 (.A0N(\regArr[11][7] ),
	.A1N(n177),
	.B0(n364),
	.B1(n177),
	.Y(n283));
   OAI2BB2X1M U268 (.A0N(\regArr[4][0] ),
	.A1N(n169),
	.B0(n357),
	.B1(n169),
	.Y(n220));
   OAI2BB2X1M U269 (.A0N(\regArr[4][1] ),
	.A1N(n169),
	.B0(n358),
	.B1(n169),
	.Y(n221));
   OAI2BB2X1M U270 (.A0N(\regArr[4][2] ),
	.A1N(n169),
	.B0(n359),
	.B1(n169),
	.Y(n222));
   OAI2BB2X1M U271 (.A0N(\regArr[4][3] ),
	.A1N(n169),
	.B0(n360),
	.B1(n169),
	.Y(n223));
   OAI2BB2X1M U272 (.A0N(\regArr[4][4] ),
	.A1N(n169),
	.B0(n361),
	.B1(n169),
	.Y(n224));
   OAI2BB2X1M U273 (.A0N(\regArr[4][5] ),
	.A1N(n169),
	.B0(n362),
	.B1(n169),
	.Y(n225));
   OAI2BB2X1M U274 (.A0N(\regArr[4][6] ),
	.A1N(n169),
	.B0(n363),
	.B1(n169),
	.Y(n226));
   OAI2BB2X1M U275 (.A0N(\regArr[4][7] ),
	.A1N(n169),
	.B0(n364),
	.B1(n169),
	.Y(n227));
   OAI2BB2X1M U276 (.A0N(\regArr[5][0] ),
	.A1N(n170),
	.B0(n357),
	.B1(n170),
	.Y(n228));
   OAI2BB2X1M U277 (.A0N(\regArr[5][1] ),
	.A1N(n170),
	.B0(n358),
	.B1(n170),
	.Y(n229));
   OAI2BB2X1M U278 (.A0N(\regArr[5][2] ),
	.A1N(n170),
	.B0(n359),
	.B1(n170),
	.Y(n230));
   OAI2BB2X1M U279 (.A0N(\regArr[5][3] ),
	.A1N(n170),
	.B0(n360),
	.B1(n170),
	.Y(n231));
   OAI2BB2X1M U280 (.A0N(\regArr[5][4] ),
	.A1N(n170),
	.B0(n361),
	.B1(n170),
	.Y(n232));
   OAI2BB2X1M U281 (.A0N(\regArr[5][5] ),
	.A1N(n170),
	.B0(n362),
	.B1(n170),
	.Y(n233));
   OAI2BB2X1M U282 (.A0N(\regArr[5][6] ),
	.A1N(n170),
	.B0(n363),
	.B1(n170),
	.Y(n234));
   OAI2BB2X1M U283 (.A0N(\regArr[5][7] ),
	.A1N(n170),
	.B0(n364),
	.B1(n170),
	.Y(n235));
   OAI2BB2X1M U284 (.A0N(\regArr[6][0] ),
	.A1N(n171),
	.B0(n357),
	.B1(n171),
	.Y(n236));
   OAI2BB2X1M U285 (.A0N(\regArr[6][1] ),
	.A1N(n171),
	.B0(n358),
	.B1(n171),
	.Y(n237));
   OAI2BB2X1M U286 (.A0N(\regArr[6][2] ),
	.A1N(n171),
	.B0(n359),
	.B1(n171),
	.Y(n238));
   OAI2BB2X1M U287 (.A0N(\regArr[6][3] ),
	.A1N(n171),
	.B0(n360),
	.B1(n171),
	.Y(n239));
   OAI2BB2X1M U288 (.A0N(\regArr[6][4] ),
	.A1N(n171),
	.B0(n361),
	.B1(n171),
	.Y(n240));
   OAI2BB2X1M U289 (.A0N(\regArr[6][5] ),
	.A1N(n171),
	.B0(n362),
	.B1(n171),
	.Y(n241));
   OAI2BB2X1M U290 (.A0N(\regArr[6][6] ),
	.A1N(n171),
	.B0(n363),
	.B1(n171),
	.Y(n242));
   OAI2BB2X1M U291 (.A0N(\regArr[6][7] ),
	.A1N(n171),
	.B0(n364),
	.B1(n171),
	.Y(n243));
   OAI2BB2X1M U292 (.A0N(\regArr[7][0] ),
	.A1N(n173),
	.B0(n357),
	.B1(n173),
	.Y(n244));
   OAI2BB2X1M U293 (.A0N(\regArr[7][1] ),
	.A1N(n173),
	.B0(n358),
	.B1(n173),
	.Y(n245));
   OAI2BB2X1M U294 (.A0N(\regArr[7][2] ),
	.A1N(n173),
	.B0(n359),
	.B1(n173),
	.Y(n246));
   OAI2BB2X1M U295 (.A0N(\regArr[7][3] ),
	.A1N(n173),
	.B0(n360),
	.B1(n173),
	.Y(n247));
   OAI2BB2X1M U296 (.A0N(\regArr[7][4] ),
	.A1N(n173),
	.B0(n361),
	.B1(n173),
	.Y(n248));
   OAI2BB2X1M U297 (.A0N(\regArr[7][5] ),
	.A1N(n173),
	.B0(n362),
	.B1(n173),
	.Y(n249));
   OAI2BB2X1M U298 (.A0N(\regArr[7][6] ),
	.A1N(n173),
	.B0(n363),
	.B1(n173),
	.Y(n250));
   OAI2BB2X1M U299 (.A0N(\regArr[7][7] ),
	.A1N(n173),
	.B0(n364),
	.B1(n173),
	.Y(n251));
   OAI2BB2X1M U300 (.A0N(REG1[0]),
	.A1N(n164),
	.B0(n357),
	.B1(n164),
	.Y(n196));
   OAI2BB2X1M U301 (.A0N(REG1[1]),
	.A1N(n164),
	.B0(n358),
	.B1(n164),
	.Y(n197));
   OAI2BB2X1M U302 (.A0N(REG1[2]),
	.A1N(n164),
	.B0(n359),
	.B1(n164),
	.Y(n198));
   OAI2BB2X1M U303 (.A0N(REG1[3]),
	.A1N(n164),
	.B0(n360),
	.B1(n164),
	.Y(n199));
   OAI2BB2X1M U304 (.A0N(REG1[4]),
	.A1N(n164),
	.B0(n361),
	.B1(n164),
	.Y(n200));
   OAI2BB2X1M U305 (.A0N(REG1[5]),
	.A1N(n164),
	.B0(n362),
	.B1(n164),
	.Y(n201));
   OAI2BB2X1M U306 (.A0N(REG1[6]),
	.A1N(n164),
	.B0(n363),
	.B1(n164),
	.Y(n202));
   OAI2BB2X1M U307 (.A0N(REG1[7]),
	.A1N(n164),
	.B0(n364),
	.B1(n164),
	.Y(n203));
   OAI2BB2X1M U308 (.A0N(REG2[0]),
	.A1N(n166),
	.B0(n357),
	.B1(n166),
	.Y(n204));
   OAI2BB2X1M U309 (.A0N(REG2[5]),
	.A1N(n166),
	.B0(n362),
	.B1(n166),
	.Y(n209));
   OAI2BB2X1M U310 (.A0N(REG3[3]),
	.A1N(n168),
	.B0(n360),
	.B1(n168),
	.Y(n215));
   AO22X1M U311 (.A0(N42),
	.A1(n365),
	.B0(RdData[1]),
	.B1(n159),
	.Y(n180));
   MX4X1M U312 (.S1(N13),
	.S0(N14),
	.D(n142),
	.C(n144),
	.B(n143),
	.A(n145),
	.Y(N42));
   MX4X1M U313 (.S1(N12),
	.S0(N11),
	.D(\regArr[11][1] ),
	.C(\regArr[10][1] ),
	.B(\regArr[9][1] ),
	.A(\regArr[8][1] ),
	.Y(n143));
   MX4X1M U314 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\regArr[15][1] ),
	.C(\regArr[14][1] ),
	.B(\regArr[13][1] ),
	.A(\regArr[12][1] ),
	.Y(n142));
   AO22X1M U315 (.A0(N41),
	.A1(n365),
	.B0(RdData[2]),
	.B1(n159),
	.Y(n181));
   MX4X1M U316 (.S1(N13),
	.S0(N14),
	.D(n146),
	.C(n148),
	.B(n147),
	.A(n149),
	.Y(N41));
   MX4X1M U317 (.S1(Address[1]),
	.S0(Address[0]),
	.D(REG3[2]),
	.C(REG2[2]),
	.B(REG1[2]),
	.A(REG0[2]),
	.Y(n149));
   MX4X1M U318 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\regArr[11][2] ),
	.C(\regArr[10][2] ),
	.B(\regArr[9][2] ),
	.A(\regArr[8][2] ),
	.Y(n147));
   AO22X1M U319 (.A0(N40),
	.A1(n365),
	.B0(RdData[3]),
	.B1(n159),
	.Y(n182));
   MX4X1M U320 (.S1(N13),
	.S0(N14),
	.D(n150),
	.C(n317),
	.B(n316),
	.A(n318),
	.Y(N40));
   MX4X1M U321 (.S1(Address[1]),
	.S0(Address[0]),
	.D(REG3[3]),
	.C(REG2[3]),
	.B(REG1[3]),
	.A(REG0[3]),
	.Y(n318));
   MX4X1M U322 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\regArr[11][3] ),
	.C(\regArr[10][3] ),
	.B(\regArr[9][3] ),
	.A(\regArr[8][3] ),
	.Y(n316));
   AO22X1M U323 (.A0(N39),
	.A1(n365),
	.B0(RdData[4]),
	.B1(n159),
	.Y(n183));
   MX4X1M U324 (.S1(N13),
	.S0(N14),
	.D(n319),
	.C(n321),
	.B(n320),
	.A(n322),
	.Y(N39));
   MX4X1M U325 (.S1(Address[1]),
	.S0(Address[0]),
	.D(REG3[4]),
	.C(REG2[4]),
	.B(REG1[4]),
	.A(REG0[4]),
	.Y(n322));
   MX4X1M U326 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\regArr[11][4] ),
	.C(\regArr[10][4] ),
	.B(\regArr[9][4] ),
	.A(\regArr[8][4] ),
	.Y(n320));
   MX4X1M U327 (.S1(N12),
	.S0(Address[0]),
	.D(REG3[1]),
	.C(REG2[1]),
	.B(REG1[1]),
	.A(REG0[1]),
	.Y(n145));
   MX4X1M U328 (.S1(N12),
	.S0(N11),
	.D(\regArr[7][0] ),
	.C(\regArr[6][0] ),
	.B(\regArr[5][0] ),
	.A(\regArr[4][0] ),
	.Y(n140));
   MX4X1M U329 (.S1(N12),
	.S0(Address[0]),
	.D(\regArr[7][1] ),
	.C(\regArr[6][1] ),
	.B(\regArr[5][1] ),
	.A(\regArr[4][1] ),
	.Y(n144));
   MX4X1M U330 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\regArr[7][2] ),
	.C(\regArr[6][2] ),
	.B(\regArr[5][2] ),
	.A(\regArr[4][2] ),
	.Y(n148));
   MX4X1M U331 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\regArr[7][3] ),
	.C(\regArr[6][3] ),
	.B(\regArr[5][3] ),
	.A(\regArr[4][3] ),
	.Y(n317));
   MX4X1M U332 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\regArr[7][4] ),
	.C(\regArr[6][4] ),
	.B(\regArr[5][4] ),
	.A(\regArr[4][4] ),
	.Y(n321));
   MX4X1M U333 (.S1(N12),
	.S0(Address[0]),
	.D(\regArr[7][5] ),
	.C(\regArr[6][5] ),
	.B(\regArr[5][5] ),
	.A(\regArr[4][5] ),
	.Y(n325));
   MX4X1M U334 (.S1(N12),
	.S0(Address[0]),
	.D(\regArr[7][6] ),
	.C(\regArr[6][6] ),
	.B(\regArr[5][6] ),
	.A(\regArr[4][6] ),
	.Y(n329));
   MX4X1M U335 (.S1(N12),
	.S0(Address[0]),
	.D(\regArr[7][7] ),
	.C(\regArr[6][7] ),
	.B(\regArr[5][7] ),
	.A(\regArr[4][7] ),
	.Y(n333));
   MX4X1M U336 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\regArr[15][0] ),
	.C(\regArr[14][0] ),
	.B(\regArr[13][0] ),
	.A(\regArr[12][0] ),
	.Y(n138));
   MX4X1M U337 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\regArr[15][2] ),
	.C(\regArr[14][2] ),
	.B(\regArr[13][2] ),
	.A(\regArr[12][2] ),
	.Y(n146));
   MX4X1M U338 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\regArr[15][3] ),
	.C(\regArr[14][3] ),
	.B(\regArr[13][3] ),
	.A(\regArr[12][3] ),
	.Y(n150));
   MX4X1M U339 (.S1(Address[1]),
	.S0(Address[0]),
	.D(\regArr[15][4] ),
	.C(\regArr[14][4] ),
	.B(\regArr[13][4] ),
	.A(\regArr[12][4] ),
	.Y(n319));
   MX4X1M U340 (.S1(N12),
	.S0(Address[0]),
	.D(\regArr[15][5] ),
	.C(\regArr[14][5] ),
	.B(\regArr[13][5] ),
	.A(\regArr[12][5] ),
	.Y(n323));
   MX4X1M U341 (.S1(N12),
	.S0(Address[0]),
	.D(\regArr[15][6] ),
	.C(\regArr[14][6] ),
	.B(\regArr[13][6] ),
	.A(\regArr[12][6] ),
	.Y(n327));
   MX4X1M U342 (.S1(N12),
	.S0(Address[0]),
	.D(\regArr[15][7] ),
	.C(\regArr[14][7] ),
	.B(\regArr[13][7] ),
	.A(\regArr[12][7] ),
	.Y(n331));
   AO22X1M U343 (.A0(N43),
	.A1(n365),
	.B0(RdData[0]),
	.B1(n159),
	.Y(n179));
   MX4X1M U344 (.S1(N13),
	.S0(N14),
	.D(n138),
	.C(n140),
	.B(n139),
	.A(n141),
	.Y(N43));
   MX4X1M U345 (.S1(N12),
	.S0(N11),
	.D(REG3[0]),
	.C(REG2[0]),
	.B(REG1[0]),
	.A(REG0[0]),
	.Y(n141));
   MX4X1M U346 (.S1(N12),
	.S0(N11),
	.D(\regArr[11][0] ),
	.C(\regArr[10][0] ),
	.B(\regArr[9][0] ),
	.A(\regArr[8][0] ),
	.Y(n139));
   AO22X1M U347 (.A0(N38),
	.A1(n365),
	.B0(RdData[5]),
	.B1(n159),
	.Y(n184));
   MX4X1M U348 (.S1(N13),
	.S0(N14),
	.D(n323),
	.C(n325),
	.B(n324),
	.A(n326),
	.Y(N38));
   MX4X1M U349 (.S1(N12),
	.S0(Address[0]),
	.D(REG3[5]),
	.C(REG2[5]),
	.B(REG1[5]),
	.A(REG0[5]),
	.Y(n326));
   MX4X1M U350 (.S1(N12),
	.S0(Address[0]),
	.D(\regArr[11][5] ),
	.C(\regArr[10][5] ),
	.B(\regArr[9][5] ),
	.A(\regArr[8][5] ),
	.Y(n324));
   AO22X1M U351 (.A0(N37),
	.A1(n365),
	.B0(RdData[6]),
	.B1(n159),
	.Y(n185));
   MX4X1M U352 (.S1(N13),
	.S0(N14),
	.D(n327),
	.C(n329),
	.B(n328),
	.A(n330),
	.Y(N37));
   MX4X1M U353 (.S1(N12),
	.S0(Address[0]),
	.D(REG3[6]),
	.C(REG2[6]),
	.B(REG1[6]),
	.A(REG0[6]),
	.Y(n330));
   MX4X1M U354 (.S1(N12),
	.S0(Address[0]),
	.D(\regArr[11][6] ),
	.C(\regArr[10][6] ),
	.B(\regArr[9][6] ),
	.A(\regArr[8][6] ),
	.Y(n328));
   AO22X1M U355 (.A0(N36),
	.A1(n365),
	.B0(RdData[7]),
	.B1(n159),
	.Y(n186));
   MX4X1M U356 (.S1(N13),
	.S0(N14),
	.D(n331),
	.C(n333),
	.B(n332),
	.A(n334),
	.Y(N36));
   MX4X1M U357 (.S1(N12),
	.S0(Address[0]),
	.D(REG3[7]),
	.C(REG2[7]),
	.B(REG1[7]),
	.A(REG0[7]),
	.Y(n334));
   MX4X1M U358 (.S1(N12),
	.S0(Address[0]),
	.D(\regArr[11][7] ),
	.C(\regArr[10][7] ),
	.B(\regArr[9][7] ),
	.A(\regArr[8][7] ),
	.Y(n332));
   INVX2M U359 (.A(N11),
	.Y(n340));
   OAI2BB2X1M U360 (.A0N(\regArr[12][0] ),
	.A1N(n151),
	.B0(n151),
	.B1(n357),
	.Y(n284));
   OAI2BB2X1M U361 (.A0N(\regArr[12][1] ),
	.A1N(n151),
	.B0(n151),
	.B1(n358),
	.Y(n285));
   OAI2BB2X1M U362 (.A0N(\regArr[12][2] ),
	.A1N(n151),
	.B0(n151),
	.B1(n359),
	.Y(n286));
   OAI2BB2X1M U363 (.A0N(\regArr[12][3] ),
	.A1N(n151),
	.B0(n151),
	.B1(n360),
	.Y(n287));
   OAI2BB2X1M U364 (.A0N(\regArr[12][4] ),
	.A1N(n151),
	.B0(n151),
	.B1(n361),
	.Y(n288));
   OAI2BB2X1M U365 (.A0N(\regArr[12][5] ),
	.A1N(n151),
	.B0(n151),
	.B1(n362),
	.Y(n289));
   OAI2BB2X1M U366 (.A0N(\regArr[12][6] ),
	.A1N(n151),
	.B0(n151),
	.B1(n363),
	.Y(n290));
   OAI2BB2X1M U367 (.A0N(\regArr[12][7] ),
	.A1N(n151),
	.B0(n151),
	.B1(n364),
	.Y(n291));
   OAI2BB2X1M U368 (.A0N(\regArr[13][0] ),
	.A1N(n152),
	.B0(n152),
	.B1(n357),
	.Y(n292));
   OAI2BB2X1M U369 (.A0N(\regArr[13][1] ),
	.A1N(n152),
	.B0(n152),
	.B1(n358),
	.Y(n293));
   OAI2BB2X1M U370 (.A0N(\regArr[13][2] ),
	.A1N(n152),
	.B0(n152),
	.B1(n359),
	.Y(n294));
   OAI2BB2X1M U371 (.A0N(\regArr[13][3] ),
	.A1N(n152),
	.B0(n152),
	.B1(n360),
	.Y(n295));
   OAI2BB2X1M U372 (.A0N(\regArr[13][4] ),
	.A1N(n152),
	.B0(n361),
	.B1(n152),
	.Y(n296));
   OAI2BB2X1M U373 (.A0N(\regArr[13][5] ),
	.A1N(n152),
	.B0(n362),
	.B1(n152),
	.Y(n297));
   OAI2BB2X1M U374 (.A0N(\regArr[13][6] ),
	.A1N(n152),
	.B0(n363),
	.B1(n152),
	.Y(n298));
   OAI2BB2X1M U375 (.A0N(\regArr[13][7] ),
	.A1N(n152),
	.B0(n364),
	.B1(n152),
	.Y(n299));
   INVX2M U376 (.A(N12),
	.Y(n341));
   AO21XLM U377 (.A0(RdData_VLD),
	.A1(n160),
	.B0(n365),
	.Y(n187));
endmodule

module ALU_DW_div_uns_0 (
	a, 
	b, 
	quotient, 
	remainder, 
	divide_by_0, 
	p1, 
	p2, 
	p3, 
	p4, 
	p5, 
	p6, 
	p7, 
	p8, 
	p9);
   input [7:0] a;
   input [7:0] b;
   output [7:0] quotient;
   output [7:0] remainder;
   output divide_by_0;
   input p1;
   input p2;
   input p3;
   input p4;
   input p5;
   input p6;
   input p7;
   input p8;
   input p9;

   // Internal wires
   wire \u_div/SumTmp[1][0] ;
   wire \u_div/SumTmp[1][1] ;
   wire \u_div/SumTmp[1][2] ;
   wire \u_div/SumTmp[1][3] ;
   wire \u_div/SumTmp[1][4] ;
   wire \u_div/SumTmp[1][5] ;
   wire \u_div/SumTmp[1][6] ;
   wire \u_div/SumTmp[2][0] ;
   wire \u_div/SumTmp[2][1] ;
   wire \u_div/SumTmp[2][2] ;
   wire \u_div/SumTmp[2][3] ;
   wire \u_div/SumTmp[2][4] ;
   wire \u_div/SumTmp[2][5] ;
   wire \u_div/SumTmp[3][0] ;
   wire \u_div/SumTmp[3][1] ;
   wire \u_div/SumTmp[3][2] ;
   wire \u_div/SumTmp[3][3] ;
   wire \u_div/SumTmp[3][4] ;
   wire \u_div/SumTmp[4][0] ;
   wire \u_div/SumTmp[4][1] ;
   wire \u_div/SumTmp[4][2] ;
   wire \u_div/SumTmp[4][3] ;
   wire \u_div/SumTmp[5][0] ;
   wire \u_div/SumTmp[5][1] ;
   wire \u_div/SumTmp[5][2] ;
   wire \u_div/SumTmp[6][0] ;
   wire \u_div/SumTmp[6][1] ;
   wire \u_div/SumTmp[7][0] ;
   wire \u_div/CryTmp[0][1] ;
   wire \u_div/CryTmp[0][2] ;
   wire \u_div/CryTmp[0][3] ;
   wire \u_div/CryTmp[0][4] ;
   wire \u_div/CryTmp[0][5] ;
   wire \u_div/CryTmp[0][6] ;
   wire \u_div/CryTmp[0][7] ;
   wire \u_div/CryTmp[1][1] ;
   wire \u_div/CryTmp[1][2] ;
   wire \u_div/CryTmp[1][3] ;
   wire \u_div/CryTmp[1][4] ;
   wire \u_div/CryTmp[1][5] ;
   wire \u_div/CryTmp[1][6] ;
   wire \u_div/CryTmp[1][7] ;
   wire \u_div/CryTmp[2][1] ;
   wire \u_div/CryTmp[2][2] ;
   wire \u_div/CryTmp[2][3] ;
   wire \u_div/CryTmp[2][4] ;
   wire \u_div/CryTmp[2][5] ;
   wire \u_div/CryTmp[2][6] ;
   wire \u_div/CryTmp[3][1] ;
   wire \u_div/CryTmp[3][2] ;
   wire \u_div/CryTmp[3][3] ;
   wire \u_div/CryTmp[3][4] ;
   wire \u_div/CryTmp[3][5] ;
   wire \u_div/CryTmp[4][1] ;
   wire \u_div/CryTmp[4][2] ;
   wire \u_div/CryTmp[4][3] ;
   wire \u_div/CryTmp[4][4] ;
   wire \u_div/CryTmp[5][1] ;
   wire \u_div/CryTmp[5][2] ;
   wire \u_div/CryTmp[5][3] ;
   wire \u_div/CryTmp[6][1] ;
   wire \u_div/CryTmp[6][2] ;
   wire \u_div/CryTmp[7][1] ;
   wire \u_div/PartRem[1][1] ;
   wire \u_div/PartRem[1][2] ;
   wire \u_div/PartRem[1][3] ;
   wire \u_div/PartRem[1][4] ;
   wire \u_div/PartRem[1][5] ;
   wire \u_div/PartRem[1][6] ;
   wire \u_div/PartRem[1][7] ;
   wire \u_div/PartRem[2][1] ;
   wire \u_div/PartRem[2][2] ;
   wire \u_div/PartRem[2][3] ;
   wire \u_div/PartRem[2][4] ;
   wire \u_div/PartRem[2][5] ;
   wire \u_div/PartRem[2][6] ;
   wire \u_div/PartRem[3][1] ;
   wire \u_div/PartRem[3][2] ;
   wire \u_div/PartRem[3][3] ;
   wire \u_div/PartRem[3][4] ;
   wire \u_div/PartRem[3][5] ;
   wire \u_div/PartRem[4][1] ;
   wire \u_div/PartRem[4][2] ;
   wire \u_div/PartRem[4][3] ;
   wire \u_div/PartRem[4][4] ;
   wire \u_div/PartRem[5][1] ;
   wire \u_div/PartRem[5][2] ;
   wire \u_div/PartRem[5][3] ;
   wire \u_div/PartRem[6][1] ;
   wire \u_div/PartRem[6][2] ;
   wire \u_div/PartRem[7][1] ;
   wire n17;
   wire n19;
   wire n20;
   wire n21;

   ADDFX2M \u_div/u_fa_PartRem_0_2_5  (.A(\u_div/PartRem[3][5] ),
	.B(b[5]),
	.CI(\u_div/CryTmp[2][5] ),
	.S(\u_div/SumTmp[2][5] ),
	.CO(\u_div/CryTmp[2][6] ));
   ADDFX2M \u_div/u_fa_PartRem_0_4_3  (.A(\u_div/PartRem[5][3] ),
	.B(b[3]),
	.CI(\u_div/CryTmp[4][3] ),
	.S(\u_div/SumTmp[4][3] ),
	.CO(\u_div/CryTmp[4][4] ));
   ADDFX2M \u_div/u_fa_PartRem_0_5_2  (.A(\u_div/PartRem[6][2] ),
	.B(b[2]),
	.CI(\u_div/CryTmp[5][2] ),
	.S(\u_div/SumTmp[5][2] ),
	.CO(\u_div/CryTmp[5][3] ));
   ADDFX2M \u_div/u_fa_PartRem_0_6_1  (.A(\u_div/PartRem[7][1] ),
	.B(n17),
	.CI(\u_div/CryTmp[6][1] ),
	.S(\u_div/SumTmp[6][1] ),
	.CO(\u_div/CryTmp[6][2] ));
   ADDFX2M \u_div/u_fa_PartRem_0_3_4  (.A(\u_div/PartRem[4][4] ),
	.B(b[4]),
	.CI(\u_div/CryTmp[3][4] ),
	.S(\u_div/SumTmp[3][4] ),
	.CO(\u_div/CryTmp[3][5] ));
   ADDFX2M \u_div/u_fa_PartRem_0_0_5  (.A(\u_div/PartRem[1][5] ),
	.B(b[5]),
	.CI(\u_div/CryTmp[0][5] ),
	.CO(\u_div/CryTmp[0][6] ));
   ADDFX2M \u_div/u_fa_PartRem_0_0_6  (.A(\u_div/PartRem[1][6] ),
	.B(p2),
	.CI(\u_div/CryTmp[0][6] ),
	.CO(\u_div/CryTmp[0][7] ));
   ADDFX2M \u_div/u_fa_PartRem_0_0_7  (.A(\u_div/PartRem[1][7] ),
	.B(p3),
	.CI(\u_div/CryTmp[0][7] ),
	.CO(quotient[0]));
   ADDFX2M \u_div/u_fa_PartRem_0_0_1  (.A(\u_div/PartRem[1][1] ),
	.B(n17),
	.CI(\u_div/CryTmp[0][1] ),
	.CO(\u_div/CryTmp[0][2] ));
   ADDFX2M \u_div/u_fa_PartRem_0_1_1  (.A(\u_div/PartRem[2][1] ),
	.B(n17),
	.CI(\u_div/CryTmp[1][1] ),
	.S(\u_div/SumTmp[1][1] ),
	.CO(\u_div/CryTmp[1][2] ));
   ADDFX2M \u_div/u_fa_PartRem_0_2_1  (.A(\u_div/PartRem[3][1] ),
	.B(n17),
	.CI(\u_div/CryTmp[2][1] ),
	.S(\u_div/SumTmp[2][1] ),
	.CO(\u_div/CryTmp[2][2] ));
   ADDFX2M \u_div/u_fa_PartRem_0_3_1  (.A(\u_div/PartRem[4][1] ),
	.B(n17),
	.CI(\u_div/CryTmp[3][1] ),
	.S(\u_div/SumTmp[3][1] ),
	.CO(\u_div/CryTmp[3][2] ));
   ADDFX2M \u_div/u_fa_PartRem_0_4_1  (.A(\u_div/PartRem[5][1] ),
	.B(n17),
	.CI(\u_div/CryTmp[4][1] ),
	.S(\u_div/SumTmp[4][1] ),
	.CO(\u_div/CryTmp[4][2] ));
   ADDFX2M \u_div/u_fa_PartRem_0_5_1  (.A(\u_div/PartRem[6][1] ),
	.B(n17),
	.CI(\u_div/CryTmp[5][1] ),
	.S(\u_div/SumTmp[5][1] ),
	.CO(\u_div/CryTmp[5][2] ));
   ADDFX2M \u_div/u_fa_PartRem_0_0_2  (.A(\u_div/PartRem[1][2] ),
	.B(b[2]),
	.CI(\u_div/CryTmp[0][2] ),
	.CO(\u_div/CryTmp[0][3] ));
   ADDFX2M \u_div/u_fa_PartRem_0_0_3  (.A(\u_div/PartRem[1][3] ),
	.B(b[3]),
	.CI(\u_div/CryTmp[0][3] ),
	.CO(\u_div/CryTmp[0][4] ));
   ADDFX2M \u_div/u_fa_PartRem_0_0_4  (.A(\u_div/PartRem[1][4] ),
	.B(b[4]),
	.CI(\u_div/CryTmp[0][4] ),
	.CO(\u_div/CryTmp[0][5] ));
   ADDFX2M \u_div/u_fa_PartRem_0_1_5  (.A(\u_div/PartRem[2][5] ),
	.B(b[5]),
	.CI(\u_div/CryTmp[1][5] ),
	.S(\u_div/SumTmp[1][5] ),
	.CO(\u_div/CryTmp[1][6] ));
   ADDFX2M \u_div/u_fa_PartRem_0_1_4  (.A(\u_div/PartRem[2][4] ),
	.B(b[4]),
	.CI(\u_div/CryTmp[1][4] ),
	.S(\u_div/SumTmp[1][4] ),
	.CO(\u_div/CryTmp[1][5] ));
   ADDFX2M \u_div/u_fa_PartRem_0_1_3  (.A(\u_div/PartRem[2][3] ),
	.B(b[3]),
	.CI(\u_div/CryTmp[1][3] ),
	.S(\u_div/SumTmp[1][3] ),
	.CO(\u_div/CryTmp[1][4] ));
   ADDFX2M \u_div/u_fa_PartRem_0_2_4  (.A(\u_div/PartRem[3][4] ),
	.B(b[4]),
	.CI(\u_div/CryTmp[2][4] ),
	.S(\u_div/SumTmp[2][4] ),
	.CO(\u_div/CryTmp[2][5] ));
   ADDFX2M \u_div/u_fa_PartRem_0_1_2  (.A(\u_div/PartRem[2][2] ),
	.B(b[2]),
	.CI(\u_div/CryTmp[1][2] ),
	.S(\u_div/SumTmp[1][2] ),
	.CO(\u_div/CryTmp[1][3] ));
   ADDFX2M \u_div/u_fa_PartRem_0_2_3  (.A(\u_div/PartRem[3][3] ),
	.B(b[3]),
	.CI(\u_div/CryTmp[2][3] ),
	.S(\u_div/SumTmp[2][3] ),
	.CO(\u_div/CryTmp[2][4] ));
   ADDFX2M \u_div/u_fa_PartRem_0_2_2  (.A(\u_div/PartRem[3][2] ),
	.B(b[2]),
	.CI(\u_div/CryTmp[2][2] ),
	.S(\u_div/SumTmp[2][2] ),
	.CO(\u_div/CryTmp[2][3] ));
   ADDFX2M \u_div/u_fa_PartRem_0_3_3  (.A(\u_div/PartRem[4][3] ),
	.B(b[3]),
	.CI(\u_div/CryTmp[3][3] ),
	.S(\u_div/SumTmp[3][3] ),
	.CO(\u_div/CryTmp[3][4] ));
   ADDFX2M \u_div/u_fa_PartRem_0_3_2  (.A(\u_div/PartRem[4][2] ),
	.B(b[2]),
	.CI(\u_div/CryTmp[3][2] ),
	.S(\u_div/SumTmp[3][2] ),
	.CO(\u_div/CryTmp[3][3] ));
   ADDFX2M \u_div/u_fa_PartRem_0_4_2  (.A(\u_div/PartRem[5][2] ),
	.B(b[2]),
	.CI(\u_div/CryTmp[4][2] ),
	.S(\u_div/SumTmp[4][2] ),
	.CO(\u_div/CryTmp[4][3] ));
   ADDFX2M \u_div/u_fa_PartRem_0_1_6  (.A(\u_div/PartRem[2][6] ),
	.B(p2),
	.CI(\u_div/CryTmp[1][6] ),
	.S(\u_div/SumTmp[1][6] ),
	.CO(\u_div/CryTmp[1][7] ));
   XNOR2X2M U2 (.A(p1),
	.B(a[7]),
	.Y(\u_div/SumTmp[7][0] ));
   XNOR2X2M U3 (.A(p1),
	.B(a[6]),
	.Y(\u_div/SumTmp[6][0] ));
   XNOR2X2M U4 (.A(p1),
	.B(a[5]),
	.Y(\u_div/SumTmp[5][0] ));
   XNOR2X2M U5 (.A(p1),
	.B(a[4]),
	.Y(\u_div/SumTmp[4][0] ));
   XNOR2X2M U6 (.A(p1),
	.B(a[3]),
	.Y(\u_div/SumTmp[3][0] ));
   XNOR2X2M U7 (.A(p1),
	.B(a[2]),
	.Y(\u_div/SumTmp[2][0] ));
   OR2X2M U8 (.A(p1),
	.B(a[7]),
	.Y(\u_div/CryTmp[7][1] ));
   XNOR2X2M U9 (.A(p1),
	.B(a[1]),
	.Y(\u_div/SumTmp[1][0] ));
   NAND2X2M U10 (.A(b[0]),
	.B(p8),
	.Y(\u_div/CryTmp[5][1] ));
   NAND2X2M U13 (.A(b[0]),
	.B(p7),
	.Y(\u_div/CryTmp[4][1] ));
   NAND2X2M U16 (.A(b[0]),
	.B(p6),
	.Y(\u_div/CryTmp[3][1] ));
   NAND2X2M U19 (.A(b[0]),
	.B(p5),
	.Y(\u_div/CryTmp[2][1] ));
   NAND2X2M U21 (.A(b[0]),
	.B(p4),
	.Y(\u_div/CryTmp[1][1] ));
   NAND2X2M U23 (.A(b[0]),
	.B(a[0]),
	.Y(\u_div/CryTmp[0][1] ));
   NAND2X2M U25 (.A(b[0]),
	.B(p9),
	.Y(\u_div/CryTmp[6][1] ));
   INVX2M U28 (.A(b[1]),
	.Y(n17));
   CLKMX2X2M U34 (.S0(quotient[1]),
	.B(\u_div/SumTmp[1][6] ),
	.A(\u_div/PartRem[2][6] ),
	.Y(\u_div/PartRem[1][7] ));
   CLKMX2X2M U35 (.S0(quotient[2]),
	.B(\u_div/SumTmp[2][5] ),
	.A(\u_div/PartRem[3][5] ),
	.Y(\u_div/PartRem[2][6] ));
   CLKMX2X2M U36 (.S0(quotient[3]),
	.B(\u_div/SumTmp[3][4] ),
	.A(\u_div/PartRem[4][4] ),
	.Y(\u_div/PartRem[3][5] ));
   CLKMX2X2M U37 (.S0(quotient[4]),
	.B(\u_div/SumTmp[4][3] ),
	.A(\u_div/PartRem[5][3] ),
	.Y(\u_div/PartRem[4][4] ));
   CLKMX2X2M U38 (.S0(quotient[5]),
	.B(\u_div/SumTmp[5][2] ),
	.A(\u_div/PartRem[6][2] ),
	.Y(\u_div/PartRem[5][3] ));
   CLKMX2X2M U39 (.S0(quotient[6]),
	.B(\u_div/SumTmp[6][1] ),
	.A(\u_div/PartRem[7][1] ),
	.Y(\u_div/PartRem[6][2] ));
   CLKMX2X2M U40 (.S0(quotient[7]),
	.B(\u_div/SumTmp[7][0] ),
	.A(a[7]),
	.Y(\u_div/PartRem[7][1] ));
   CLKMX2X2M U41 (.S0(quotient[1]),
	.B(\u_div/SumTmp[1][5] ),
	.A(\u_div/PartRem[2][5] ),
	.Y(\u_div/PartRem[1][6] ));
   CLKMX2X2M U42 (.S0(quotient[2]),
	.B(\u_div/SumTmp[2][4] ),
	.A(\u_div/PartRem[3][4] ),
	.Y(\u_div/PartRem[2][5] ));
   CLKMX2X2M U43 (.S0(quotient[3]),
	.B(\u_div/SumTmp[3][3] ),
	.A(\u_div/PartRem[4][3] ),
	.Y(\u_div/PartRem[3][4] ));
   CLKMX2X2M U44 (.S0(quotient[4]),
	.B(\u_div/SumTmp[4][2] ),
	.A(\u_div/PartRem[5][2] ),
	.Y(\u_div/PartRem[4][3] ));
   CLKMX2X2M U45 (.S0(quotient[5]),
	.B(\u_div/SumTmp[5][1] ),
	.A(\u_div/PartRem[6][1] ),
	.Y(\u_div/PartRem[5][2] ));
   CLKMX2X2M U46 (.S0(quotient[6]),
	.B(\u_div/SumTmp[6][0] ),
	.A(a[6]),
	.Y(\u_div/PartRem[6][1] ));
   CLKMX2X2M U47 (.S0(quotient[1]),
	.B(\u_div/SumTmp[1][4] ),
	.A(\u_div/PartRem[2][4] ),
	.Y(\u_div/PartRem[1][5] ));
   CLKMX2X2M U48 (.S0(quotient[2]),
	.B(\u_div/SumTmp[2][3] ),
	.A(\u_div/PartRem[3][3] ),
	.Y(\u_div/PartRem[2][4] ));
   CLKMX2X2M U49 (.S0(quotient[3]),
	.B(\u_div/SumTmp[3][2] ),
	.A(\u_div/PartRem[4][2] ),
	.Y(\u_div/PartRem[3][3] ));
   CLKMX2X2M U50 (.S0(quotient[4]),
	.B(\u_div/SumTmp[4][1] ),
	.A(\u_div/PartRem[5][1] ),
	.Y(\u_div/PartRem[4][2] ));
   CLKMX2X2M U51 (.S0(quotient[5]),
	.B(\u_div/SumTmp[5][0] ),
	.A(a[5]),
	.Y(\u_div/PartRem[5][1] ));
   CLKMX2X2M U52 (.S0(quotient[1]),
	.B(\u_div/SumTmp[1][3] ),
	.A(\u_div/PartRem[2][3] ),
	.Y(\u_div/PartRem[1][4] ));
   CLKMX2X2M U53 (.S0(quotient[2]),
	.B(\u_div/SumTmp[2][2] ),
	.A(\u_div/PartRem[3][2] ),
	.Y(\u_div/PartRem[2][3] ));
   CLKMX2X2M U54 (.S0(quotient[3]),
	.B(\u_div/SumTmp[3][1] ),
	.A(\u_div/PartRem[4][1] ),
	.Y(\u_div/PartRem[3][2] ));
   CLKMX2X2M U55 (.S0(quotient[4]),
	.B(\u_div/SumTmp[4][0] ),
	.A(a[4]),
	.Y(\u_div/PartRem[4][1] ));
   CLKMX2X2M U56 (.S0(quotient[1]),
	.B(\u_div/SumTmp[1][2] ),
	.A(\u_div/PartRem[2][2] ),
	.Y(\u_div/PartRem[1][3] ));
   CLKMX2X2M U57 (.S0(quotient[2]),
	.B(\u_div/SumTmp[2][1] ),
	.A(\u_div/PartRem[3][1] ),
	.Y(\u_div/PartRem[2][2] ));
   CLKMX2X2M U58 (.S0(quotient[3]),
	.B(\u_div/SumTmp[3][0] ),
	.A(a[3]),
	.Y(\u_div/PartRem[3][1] ));
   CLKMX2X2M U59 (.S0(quotient[1]),
	.B(\u_div/SumTmp[1][1] ),
	.A(\u_div/PartRem[2][1] ),
	.Y(\u_div/PartRem[1][2] ));
   CLKMX2X2M U60 (.S0(quotient[2]),
	.B(\u_div/SumTmp[2][0] ),
	.A(a[2]),
	.Y(\u_div/PartRem[2][1] ));
   CLKMX2X2M U61 (.S0(quotient[1]),
	.B(\u_div/SumTmp[1][0] ),
	.A(a[1]),
	.Y(\u_div/PartRem[1][1] ));
   AND4X1M U62 (.A(\u_div/CryTmp[7][1] ),
	.B(n19),
	.C(n17),
	.D(b[2]),
	.Y(quotient[7]));
   AND3X1M U63 (.A(n19),
	.B(b[2]),
	.C(\u_div/CryTmp[6][2] ),
	.Y(quotient[6]));
   AND2X1M U64 (.A(\u_div/CryTmp[5][3] ),
	.B(n19),
	.Y(quotient[5]));
   AND2X1M U65 (.A(n20),
	.B(b[3]),
	.Y(n19));
   AND2X1M U66 (.A(\u_div/CryTmp[4][4] ),
	.B(n20),
	.Y(quotient[4]));
   AND3X1M U67 (.A(n21),
	.B(b[4]),
	.C(b[5]),
	.Y(n20));
   AND3X1M U68 (.A(n21),
	.B(b[5]),
	.C(\u_div/CryTmp[3][5] ),
	.Y(quotient[3]));
   AND2X1M U69 (.A(\u_div/CryTmp[2][6] ),
	.B(n21),
	.Y(quotient[2]));
   NOR2X1M U70 (.A(b[6]),
	.B(b[7]),
	.Y(n21));
   AND2X1M U71 (.A(\u_div/CryTmp[1][7] ),
	.B(p3),
	.Y(quotient[1]));
endmodule

module ALU_DW01_sub_0 (
	A, 
	B, 
	CI, 
	DIFF, 
	CO, 
	p1, 
	p2);
   input [8:0] A;
   input [8:0] B;
   input CI;
   output [8:0] DIFF;
   output CO;
   input p1;
   input p2;

   // Internal wires
   wire n8;
   wire [9:0] carry;

   ADDFX2M U2_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(DIFF[7]),
	.CO(carry[8]));
   ADDFX2M U2_1 (.A(A[1]),
	.B(n8),
	.CI(carry[1]),
	.S(DIFF[1]),
	.CO(carry[2]));
   ADDFX2M U2_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(DIFF[5]),
	.CO(carry[6]));
   ADDFX2M U2_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(DIFF[4]),
	.CO(carry[5]));
   ADDFX2M U2_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(DIFF[3]),
	.CO(carry[4]));
   ADDFX2M U2_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(DIFF[2]),
	.CO(carry[3]));
   ADDFX2M U2_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(DIFF[6]),
	.CO(carry[7]));
   XNOR2X2M U1 (.A(p1),
	.B(A[0]),
	.Y(DIFF[0]));
   NAND2X2M U8 (.A(B[0]),
	.B(p2),
	.Y(carry[1]));
   INVX2M U9 (.A(B[1]),
	.Y(n8));
   CLKINVX1M U12 (.A(carry[8]),
	.Y(DIFF[8]));
endmodule

module ALU_DW01_add_0 (
	A, 
	B, 
	CI, 
	SUM, 
	CO);
   input [8:0] A;
   input [8:0] B;
   input CI;
   output [8:0] SUM;
   output CO;

   // Internal wires
   wire n1;
   wire [8:1] carry;

   ADDFX2M U1_7 (.A(A[7]),
	.B(B[7]),
	.CI(carry[7]),
	.S(SUM[7]),
	.CO(SUM[8]));
   ADDFX2M U1_1 (.A(A[1]),
	.B(B[1]),
	.CI(n1),
	.S(SUM[1]),
	.CO(carry[2]));
   ADDFX2M U1_5 (.A(A[5]),
	.B(B[5]),
	.CI(carry[5]),
	.S(SUM[5]),
	.CO(carry[6]));
   ADDFX2M U1_4 (.A(A[4]),
	.B(B[4]),
	.CI(carry[4]),
	.S(SUM[4]),
	.CO(carry[5]));
   ADDFX2M U1_3 (.A(A[3]),
	.B(B[3]),
	.CI(carry[3]),
	.S(SUM[3]),
	.CO(carry[4]));
   ADDFX2M U1_2 (.A(A[2]),
	.B(B[2]),
	.CI(carry[2]),
	.S(SUM[2]),
	.CO(carry[3]));
   ADDFX2M U1_6 (.A(A[6]),
	.B(B[6]),
	.CI(carry[6]),
	.S(SUM[6]),
	.CO(carry[7]));
   AND2X2M U1 (.A(B[0]),
	.B(A[0]),
	.Y(n1));
   CLKXOR2X2M U2 (.A(B[0]),
	.B(A[0]),
	.Y(SUM[0]));
endmodule

module ALU_DW01_add_1 (
	A, 
	B, 
	CI, 
	SUM, 
	CO);
   input [13:0] A;
   input [13:0] B;
   input CI;
   output [13:0] SUM;
   output CO;

   // Internal wires
   wire n1;
   wire n8;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;

   assign SUM[6] = A[6] ;
   assign SUM[5] = A[5] ;
   assign SUM[4] = A[4] ;
   assign SUM[3] = A[3] ;
   assign SUM[2] = A[2] ;
   assign SUM[1] = A[1] ;
   assign SUM[0] = A[0] ;

   AOI21BX2M U2 (.A0(n18),
	.A1(A[12]),
	.B0N(n19),
	.Y(n1));
   NAND2X2M U3 (.A(A[7]),
	.B(B[7]),
	.Y(n15));
   XNOR2X2M U4 (.A(A[7]),
	.B(n8),
	.Y(SUM[7]));
   INVX2M U5 (.A(B[7]),
	.Y(n8));
   XNOR2X2M U6 (.A(B[13]),
	.B(n1),
	.Y(SUM[13]));
   XNOR2X1M U15 (.A(n10),
	.B(n11),
	.Y(SUM[9]));
   NOR2X1M U16 (.A(n12),
	.B(n13),
	.Y(n11));
   CLKXOR2X2M U17 (.A(n14),
	.B(n15),
	.Y(SUM[8]));
   NAND2BX1M U18 (.AN(n16),
	.B(n17),
	.Y(n14));
   OAI21X1M U19 (.A0(A[12]),
	.A1(n18),
	.B0(B[12]),
	.Y(n19));
   XOR3XLM U20 (.A(B[12]),
	.B(A[12]),
	.C(n18),
	.Y(SUM[12]));
   OAI21BX1M U21 (.A0(n20),
	.A1(n21),
	.B0N(n22),
	.Y(n18));
   XNOR2X1M U22 (.A(n21),
	.B(n23),
	.Y(SUM[11]));
   NOR2X1M U23 (.A(n22),
	.B(n20),
	.Y(n23));
   NOR2X1M U24 (.A(B[11]),
	.B(A[11]),
	.Y(n20));
   AND2X1M U25 (.A(B[11]),
	.B(A[11]),
	.Y(n22));
   OA21X1M U26 (.A0(n24),
	.A1(n25),
	.B0(n26),
	.Y(n21));
   CLKXOR2X2M U27 (.A(n27),
	.B(n25),
	.Y(SUM[10]));
   AOI2BB1X1M U28 (.A0N(n10),
	.A1N(n13),
	.B0(n12),
	.Y(n25));
   AND2X1M U29 (.A(B[9]),
	.B(A[9]),
	.Y(n12));
   NOR2X1M U30 (.A(B[9]),
	.B(A[9]),
	.Y(n13));
   OA21X1M U31 (.A0(n15),
	.A1(n16),
	.B0(n17),
	.Y(n10));
   CLKNAND2X2M U32 (.A(B[8]),
	.B(A[8]),
	.Y(n17));
   NOR2X1M U33 (.A(B[8]),
	.B(A[8]),
	.Y(n16));
   NAND2BX1M U34 (.AN(n24),
	.B(n26),
	.Y(n27));
   CLKNAND2X2M U35 (.A(B[10]),
	.B(A[10]),
	.Y(n26));
   NOR2X1M U36 (.A(B[10]),
	.B(A[10]),
	.Y(n24));
endmodule

module ALU_DW02_mult_0 (
	A, 
	B, 
	TC, 
	PRODUCT);
   input [7:0] A;
   input [7:0] B;
   input TC;
   output [15:0] PRODUCT;

   // Internal wires
   wire \ab[7][7] ;
   wire \ab[7][6] ;
   wire \ab[7][5] ;
   wire \ab[7][4] ;
   wire \ab[7][3] ;
   wire \ab[7][2] ;
   wire \ab[7][1] ;
   wire \ab[7][0] ;
   wire \ab[6][7] ;
   wire \ab[6][6] ;
   wire \ab[6][5] ;
   wire \ab[6][4] ;
   wire \ab[6][3] ;
   wire \ab[6][2] ;
   wire \ab[6][1] ;
   wire \ab[6][0] ;
   wire \ab[5][7] ;
   wire \ab[5][6] ;
   wire \ab[5][5] ;
   wire \ab[5][4] ;
   wire \ab[5][3] ;
   wire \ab[5][2] ;
   wire \ab[5][1] ;
   wire \ab[5][0] ;
   wire \ab[4][7] ;
   wire \ab[4][6] ;
   wire \ab[4][5] ;
   wire \ab[4][4] ;
   wire \ab[4][3] ;
   wire \ab[4][2] ;
   wire \ab[4][1] ;
   wire \ab[4][0] ;
   wire \ab[3][7] ;
   wire \ab[3][6] ;
   wire \ab[3][5] ;
   wire \ab[3][4] ;
   wire \ab[3][3] ;
   wire \ab[3][2] ;
   wire \ab[3][1] ;
   wire \ab[3][0] ;
   wire \ab[2][7] ;
   wire \ab[2][6] ;
   wire \ab[2][5] ;
   wire \ab[2][4] ;
   wire \ab[2][3] ;
   wire \ab[2][2] ;
   wire \ab[2][1] ;
   wire \ab[2][0] ;
   wire \ab[1][7] ;
   wire \ab[1][6] ;
   wire \ab[1][5] ;
   wire \ab[1][4] ;
   wire \ab[1][3] ;
   wire \ab[1][2] ;
   wire \ab[1][1] ;
   wire \ab[1][0] ;
   wire \ab[0][7] ;
   wire \ab[0][6] ;
   wire \ab[0][5] ;
   wire \ab[0][4] ;
   wire \ab[0][3] ;
   wire \ab[0][2] ;
   wire \ab[0][1] ;
   wire \CARRYB[7][6] ;
   wire \CARRYB[7][5] ;
   wire \CARRYB[7][4] ;
   wire \CARRYB[7][3] ;
   wire \CARRYB[7][2] ;
   wire \CARRYB[7][1] ;
   wire \CARRYB[7][0] ;
   wire \CARRYB[6][6] ;
   wire \CARRYB[6][5] ;
   wire \CARRYB[6][4] ;
   wire \CARRYB[6][3] ;
   wire \CARRYB[6][2] ;
   wire \CARRYB[6][1] ;
   wire \CARRYB[6][0] ;
   wire \CARRYB[5][6] ;
   wire \CARRYB[5][5] ;
   wire \CARRYB[5][4] ;
   wire \CARRYB[5][3] ;
   wire \CARRYB[5][2] ;
   wire \CARRYB[5][1] ;
   wire \CARRYB[5][0] ;
   wire \CARRYB[4][6] ;
   wire \CARRYB[4][5] ;
   wire \CARRYB[4][4] ;
   wire \CARRYB[4][3] ;
   wire \CARRYB[4][2] ;
   wire \CARRYB[4][1] ;
   wire \CARRYB[4][0] ;
   wire \CARRYB[3][6] ;
   wire \CARRYB[3][5] ;
   wire \CARRYB[3][4] ;
   wire \CARRYB[3][3] ;
   wire \CARRYB[3][2] ;
   wire \CARRYB[3][1] ;
   wire \CARRYB[3][0] ;
   wire \CARRYB[2][6] ;
   wire \CARRYB[2][5] ;
   wire \CARRYB[2][4] ;
   wire \CARRYB[2][3] ;
   wire \CARRYB[2][2] ;
   wire \CARRYB[2][1] ;
   wire \CARRYB[2][0] ;
   wire \SUMB[7][6] ;
   wire \SUMB[7][5] ;
   wire \SUMB[7][4] ;
   wire \SUMB[7][3] ;
   wire \SUMB[7][2] ;
   wire \SUMB[7][1] ;
   wire \SUMB[7][0] ;
   wire \SUMB[6][6] ;
   wire \SUMB[6][5] ;
   wire \SUMB[6][4] ;
   wire \SUMB[6][3] ;
   wire \SUMB[6][2] ;
   wire \SUMB[6][1] ;
   wire \SUMB[5][6] ;
   wire \SUMB[5][5] ;
   wire \SUMB[5][4] ;
   wire \SUMB[5][3] ;
   wire \SUMB[5][2] ;
   wire \SUMB[5][1] ;
   wire \SUMB[4][6] ;
   wire \SUMB[4][5] ;
   wire \SUMB[4][4] ;
   wire \SUMB[4][3] ;
   wire \SUMB[4][2] ;
   wire \SUMB[4][1] ;
   wire \SUMB[3][6] ;
   wire \SUMB[3][5] ;
   wire \SUMB[3][4] ;
   wire \SUMB[3][3] ;
   wire \SUMB[3][2] ;
   wire \SUMB[3][1] ;
   wire \SUMB[2][6] ;
   wire \SUMB[2][5] ;
   wire \SUMB[2][4] ;
   wire \SUMB[2][3] ;
   wire \SUMB[2][2] ;
   wire \SUMB[2][1] ;
   wire \SUMB[1][6] ;
   wire \SUMB[1][5] ;
   wire \SUMB[1][4] ;
   wire \SUMB[1][3] ;
   wire \SUMB[1][2] ;
   wire \SUMB[1][1] ;
   wire \A1[12] ;
   wire \A1[11] ;
   wire \A1[10] ;
   wire \A1[9] ;
   wire \A1[8] ;
   wire \A1[7] ;
   wire \A1[6] ;
   wire \A1[4] ;
   wire \A1[3] ;
   wire \A1[2] ;
   wire \A1[1] ;
   wire \A1[0] ;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n30;

   ADDFX2M S2_6_5 (.A(\ab[6][5] ),
	.B(\CARRYB[5][5] ),
	.CI(\SUMB[5][6] ),
	.S(\SUMB[6][5] ),
	.CO(\CARRYB[6][5] ));
   ADDFX2M S2_6_4 (.A(\ab[6][4] ),
	.B(\CARRYB[5][4] ),
	.CI(\SUMB[5][5] ),
	.S(\SUMB[6][4] ),
	.CO(\CARRYB[6][4] ));
   ADDFX2M S2_5_5 (.A(\ab[5][5] ),
	.B(\CARRYB[4][5] ),
	.CI(\SUMB[4][6] ),
	.S(\SUMB[5][5] ),
	.CO(\CARRYB[5][5] ));
   ADDFX2M S2_6_3 (.A(\ab[6][3] ),
	.B(\CARRYB[5][3] ),
	.CI(\SUMB[5][4] ),
	.S(\SUMB[6][3] ),
	.CO(\CARRYB[6][3] ));
   ADDFX2M S2_5_4 (.A(\ab[5][4] ),
	.B(\CARRYB[4][4] ),
	.CI(\SUMB[4][5] ),
	.S(\SUMB[5][4] ),
	.CO(\CARRYB[5][4] ));
   ADDFX2M S1_6_0 (.A(\ab[6][0] ),
	.B(\CARRYB[5][0] ),
	.CI(\SUMB[5][1] ),
	.S(\A1[4] ),
	.CO(\CARRYB[6][0] ));
   ADDFX2M S2_6_1 (.A(\ab[6][1] ),
	.B(\CARRYB[5][1] ),
	.CI(\SUMB[5][2] ),
	.S(\SUMB[6][1] ),
	.CO(\CARRYB[6][1] ));
   ADDFX2M S2_6_2 (.A(\ab[6][2] ),
	.B(\CARRYB[5][2] ),
	.CI(\SUMB[5][3] ),
	.S(\SUMB[6][2] ),
	.CO(\CARRYB[6][2] ));
   ADDFX2M S2_4_5 (.A(\ab[4][5] ),
	.B(\CARRYB[3][5] ),
	.CI(\SUMB[3][6] ),
	.S(\SUMB[4][5] ),
	.CO(\CARRYB[4][5] ));
   ADDFX2M S1_5_0 (.A(\ab[5][0] ),
	.B(\CARRYB[4][0] ),
	.CI(\SUMB[4][1] ),
	.S(\A1[3] ),
	.CO(\CARRYB[5][0] ));
   ADDFX2M S2_5_1 (.A(\ab[5][1] ),
	.B(\CARRYB[4][1] ),
	.CI(\SUMB[4][2] ),
	.S(\SUMB[5][1] ),
	.CO(\CARRYB[5][1] ));
   ADDFX2M S2_5_2 (.A(\ab[5][2] ),
	.B(\CARRYB[4][2] ),
	.CI(\SUMB[4][3] ),
	.S(\SUMB[5][2] ),
	.CO(\CARRYB[5][2] ));
   ADDFX2M S2_5_3 (.A(\ab[5][3] ),
	.B(\CARRYB[4][3] ),
	.CI(\SUMB[4][4] ),
	.S(\SUMB[5][3] ),
	.CO(\CARRYB[5][3] ));
   ADDFX2M S1_4_0 (.A(\ab[4][0] ),
	.B(\CARRYB[3][0] ),
	.CI(\SUMB[3][1] ),
	.S(\A1[2] ),
	.CO(\CARRYB[4][0] ));
   ADDFX2M S2_4_1 (.A(\ab[4][1] ),
	.B(\CARRYB[3][1] ),
	.CI(\SUMB[3][2] ),
	.S(\SUMB[4][1] ),
	.CO(\CARRYB[4][1] ));
   ADDFX2M S2_4_2 (.A(\ab[4][2] ),
	.B(\CARRYB[3][2] ),
	.CI(\SUMB[3][3] ),
	.S(\SUMB[4][2] ),
	.CO(\CARRYB[4][2] ));
   ADDFX2M S2_4_3 (.A(\ab[4][3] ),
	.B(\CARRYB[3][3] ),
	.CI(\SUMB[3][4] ),
	.S(\SUMB[4][3] ),
	.CO(\CARRYB[4][3] ));
   ADDFX2M S2_4_4 (.A(\ab[4][4] ),
	.B(\CARRYB[3][4] ),
	.CI(\SUMB[3][5] ),
	.S(\SUMB[4][4] ),
	.CO(\CARRYB[4][4] ));
   ADDFX2M S1_3_0 (.A(\ab[3][0] ),
	.B(\CARRYB[2][0] ),
	.CI(\SUMB[2][1] ),
	.S(\A1[1] ),
	.CO(\CARRYB[3][0] ));
   ADDFX2M S2_3_1 (.A(\ab[3][1] ),
	.B(\CARRYB[2][1] ),
	.CI(\SUMB[2][2] ),
	.S(\SUMB[3][1] ),
	.CO(\CARRYB[3][1] ));
   ADDFX2M S2_3_2 (.A(\ab[3][2] ),
	.B(\CARRYB[2][2] ),
	.CI(\SUMB[2][3] ),
	.S(\SUMB[3][2] ),
	.CO(\CARRYB[3][2] ));
   ADDFX2M S2_3_3 (.A(\ab[3][3] ),
	.B(\CARRYB[2][3] ),
	.CI(\SUMB[2][4] ),
	.S(\SUMB[3][3] ),
	.CO(\CARRYB[3][3] ));
   ADDFX2M S2_3_4 (.A(\ab[3][4] ),
	.B(\CARRYB[2][4] ),
	.CI(\SUMB[2][5] ),
	.S(\SUMB[3][4] ),
	.CO(\CARRYB[3][4] ));
   ADDFX2M S2_3_5 (.A(\ab[3][5] ),
	.B(\CARRYB[2][5] ),
	.CI(\SUMB[2][6] ),
	.S(\SUMB[3][5] ),
	.CO(\CARRYB[3][5] ));
   ADDFX2M S3_6_6 (.A(\ab[6][6] ),
	.B(\CARRYB[5][6] ),
	.CI(\ab[5][7] ),
	.S(\SUMB[6][6] ),
	.CO(\CARRYB[6][6] ));
   ADDFX2M S3_5_6 (.A(\ab[5][6] ),
	.B(\CARRYB[4][6] ),
	.CI(\ab[4][7] ),
	.S(\SUMB[5][6] ),
	.CO(\CARRYB[5][6] ));
   ADDFX2M S3_4_6 (.A(\ab[4][6] ),
	.B(\CARRYB[3][6] ),
	.CI(\ab[3][7] ),
	.S(\SUMB[4][6] ),
	.CO(\CARRYB[4][6] ));
   ADDFX2M S3_3_6 (.A(\ab[3][6] ),
	.B(\CARRYB[2][6] ),
	.CI(\ab[2][7] ),
	.S(\SUMB[3][6] ),
	.CO(\CARRYB[3][6] ));
   ADDFX2M S3_2_6 (.A(\ab[2][6] ),
	.B(n8),
	.CI(\ab[1][7] ),
	.S(\SUMB[2][6] ),
	.CO(\CARRYB[2][6] ));
   ADDFX2M S1_2_0 (.A(\ab[2][0] ),
	.B(n9),
	.CI(\SUMB[1][1] ),
	.S(\A1[0] ),
	.CO(\CARRYB[2][0] ));
   ADDFX2M S2_2_1 (.A(\ab[2][1] ),
	.B(n7),
	.CI(\SUMB[1][2] ),
	.S(\SUMB[2][1] ),
	.CO(\CARRYB[2][1] ));
   ADDFX2M S2_2_2 (.A(\ab[2][2] ),
	.B(n6),
	.CI(\SUMB[1][3] ),
	.S(\SUMB[2][2] ),
	.CO(\CARRYB[2][2] ));
   ADDFX2M S2_2_3 (.A(\ab[2][3] ),
	.B(n5),
	.CI(\SUMB[1][4] ),
	.S(\SUMB[2][3] ),
	.CO(\CARRYB[2][3] ));
   ADDFX2M S2_2_4 (.A(\ab[2][4] ),
	.B(n4),
	.CI(\SUMB[1][5] ),
	.S(\SUMB[2][4] ),
	.CO(\CARRYB[2][4] ));
   ADDFX2M S2_2_5 (.A(\ab[2][5] ),
	.B(n3),
	.CI(\SUMB[1][6] ),
	.S(\SUMB[2][5] ),
	.CO(\CARRYB[2][5] ));
   ADDFX2M S5_6 (.A(\ab[7][6] ),
	.B(\CARRYB[6][6] ),
	.CI(\ab[6][7] ),
	.S(\SUMB[7][6] ),
	.CO(\CARRYB[7][6] ));
   ADDFX2M S4_5 (.A(\ab[7][5] ),
	.B(\CARRYB[6][5] ),
	.CI(\SUMB[6][6] ),
	.S(\SUMB[7][5] ),
	.CO(\CARRYB[7][5] ));
   ADDFX2M S4_4 (.A(\ab[7][4] ),
	.B(\CARRYB[6][4] ),
	.CI(\SUMB[6][5] ),
	.S(\SUMB[7][4] ),
	.CO(\CARRYB[7][4] ));
   ADDFX2M S4_3 (.A(\ab[7][3] ),
	.B(\CARRYB[6][3] ),
	.CI(\SUMB[6][4] ),
	.S(\SUMB[7][3] ),
	.CO(\CARRYB[7][3] ));
   ADDFX2M S4_2 (.A(\ab[7][2] ),
	.B(\CARRYB[6][2] ),
	.CI(\SUMB[6][3] ),
	.S(\SUMB[7][2] ),
	.CO(\CARRYB[7][2] ));
   ADDFX2M S4_0 (.A(\ab[7][0] ),
	.B(\CARRYB[6][0] ),
	.CI(\SUMB[6][1] ),
	.S(\SUMB[7][0] ),
	.CO(\CARRYB[7][0] ));
   ADDFX2M S4_1 (.A(\ab[7][1] ),
	.B(\CARRYB[6][1] ),
	.CI(\SUMB[6][2] ),
	.S(\SUMB[7][1] ),
	.CO(\CARRYB[7][1] ));
   AND2X2M U2 (.A(\ab[0][6] ),
	.B(\ab[1][5] ),
	.Y(n3));
   AND2X2M U3 (.A(\ab[0][5] ),
	.B(\ab[1][4] ),
	.Y(n4));
   AND2X2M U4 (.A(\ab[0][4] ),
	.B(\ab[1][3] ),
	.Y(n5));
   AND2X2M U5 (.A(\ab[0][3] ),
	.B(\ab[1][2] ),
	.Y(n6));
   AND2X2M U6 (.A(\ab[0][2] ),
	.B(\ab[1][1] ),
	.Y(n7));
   AND2X2M U7 (.A(\ab[0][7] ),
	.B(\ab[1][6] ),
	.Y(n8));
   AND2X2M U8 (.A(\ab[0][1] ),
	.B(\ab[1][0] ),
	.Y(n9));
   AND2X2M U9 (.A(\CARRYB[7][6] ),
	.B(\ab[7][7] ),
	.Y(n10));
   INVX2M U10 (.A(\ab[0][6] ),
	.Y(n22));
   CLKXOR2X2M U11 (.A(\CARRYB[7][1] ),
	.B(\SUMB[7][2] ),
	.Y(\A1[7] ));
   CLKXOR2X2M U12 (.A(\ab[1][0] ),
	.B(\ab[0][1] ),
	.Y(PRODUCT[1]));
   CLKXOR2X2M U13 (.A(\CARRYB[7][6] ),
	.B(\ab[7][7] ),
	.Y(\A1[12] ));
   CLKXOR2X2M U14 (.A(\CARRYB[7][2] ),
	.B(\SUMB[7][3] ),
	.Y(\A1[8] ));
   CLKXOR2X2M U15 (.A(\CARRYB[7][4] ),
	.B(\SUMB[7][5] ),
	.Y(\A1[10] ));
   CLKXOR2X2M U16 (.A(\CARRYB[7][3] ),
	.B(\SUMB[7][4] ),
	.Y(\A1[9] ));
   CLKXOR2X2M U17 (.A(\CARRYB[7][5] ),
	.B(\SUMB[7][6] ),
	.Y(\A1[11] ));
   INVX2M U18 (.A(\ab[0][7] ),
	.Y(n23));
   INVX2M U19 (.A(\ab[0][5] ),
	.Y(n21));
   INVX2M U20 (.A(\ab[0][4] ),
	.Y(n20));
   INVX2M U21 (.A(\ab[0][3] ),
	.Y(n19));
   INVX2M U22 (.A(\ab[0][2] ),
	.Y(n18));
   XNOR2X2M U23 (.A(\CARRYB[7][0] ),
	.B(n17),
	.Y(\A1[6] ));
   INVX2M U24 (.A(\SUMB[7][1] ),
	.Y(n17));
   AND2X2M U25 (.A(\CARRYB[7][0] ),
	.B(\SUMB[7][1] ),
	.Y(n11));
   AND2X2M U26 (.A(\CARRYB[7][1] ),
	.B(\SUMB[7][2] ),
	.Y(n12));
   AND2X2M U27 (.A(\CARRYB[7][3] ),
	.B(\SUMB[7][4] ),
	.Y(n13));
   AND2X2M U28 (.A(\CARRYB[7][5] ),
	.B(\SUMB[7][6] ),
	.Y(n14));
   AND2X2M U29 (.A(\CARRYB[7][2] ),
	.B(\SUMB[7][3] ),
	.Y(n15));
   AND2X2M U30 (.A(\CARRYB[7][4] ),
	.B(\SUMB[7][5] ),
	.Y(n16));
   XNOR2X2M U31 (.A(\ab[1][6] ),
	.B(n23),
	.Y(\SUMB[1][6] ));
   XNOR2X2M U32 (.A(\ab[1][5] ),
	.B(n22),
	.Y(\SUMB[1][5] ));
   XNOR2X2M U33 (.A(\ab[1][4] ),
	.B(n21),
	.Y(\SUMB[1][4] ));
   XNOR2X2M U34 (.A(\ab[1][3] ),
	.B(n20),
	.Y(\SUMB[1][3] ));
   XNOR2X2M U35 (.A(\ab[1][2] ),
	.B(n19),
	.Y(\SUMB[1][2] ));
   XNOR2X2M U36 (.A(\ab[1][1] ),
	.B(n18),
	.Y(\SUMB[1][1] ));
   INVX2M U52 (.A(B[1]),
	.Y(n30));
   NOR2X1M U54 (.A(A[7]),
	.B(B[7]),
	.Y(\ab[7][7] ));
   NOR2X1M U55 (.A(A[7]),
	.B(B[6]),
	.Y(\ab[7][6] ));
   NOR2X1M U56 (.A(A[7]),
	.B(B[5]),
	.Y(\ab[7][5] ));
   NOR2X1M U57 (.A(A[7]),
	.B(B[4]),
	.Y(\ab[7][4] ));
   NOR2X1M U58 (.A(A[7]),
	.B(B[3]),
	.Y(\ab[7][3] ));
   NOR2X1M U59 (.A(A[7]),
	.B(B[2]),
	.Y(\ab[7][2] ));
   NOR2X1M U60 (.A(A[7]),
	.B(n30),
	.Y(\ab[7][1] ));
   NOR2X1M U61 (.A(A[7]),
	.B(B[0]),
	.Y(\ab[7][0] ));
   NOR2X1M U62 (.A(B[7]),
	.B(A[6]),
	.Y(\ab[6][7] ));
   NOR2X1M U63 (.A(B[6]),
	.B(A[6]),
	.Y(\ab[6][6] ));
   NOR2X1M U64 (.A(B[5]),
	.B(A[6]),
	.Y(\ab[6][5] ));
   NOR2X1M U65 (.A(B[4]),
	.B(A[6]),
	.Y(\ab[6][4] ));
   NOR2X1M U66 (.A(B[3]),
	.B(A[6]),
	.Y(\ab[6][3] ));
   NOR2X1M U67 (.A(B[2]),
	.B(A[6]),
	.Y(\ab[6][2] ));
   NOR2X1M U68 (.A(n30),
	.B(A[6]),
	.Y(\ab[6][1] ));
   NOR2X1M U69 (.A(B[0]),
	.B(A[6]),
	.Y(\ab[6][0] ));
   NOR2X1M U70 (.A(B[7]),
	.B(A[5]),
	.Y(\ab[5][7] ));
   NOR2X1M U71 (.A(B[6]),
	.B(A[5]),
	.Y(\ab[5][6] ));
   NOR2X1M U72 (.A(B[5]),
	.B(A[5]),
	.Y(\ab[5][5] ));
   NOR2X1M U73 (.A(B[4]),
	.B(A[5]),
	.Y(\ab[5][4] ));
   NOR2X1M U74 (.A(B[3]),
	.B(A[5]),
	.Y(\ab[5][3] ));
   NOR2X1M U75 (.A(B[2]),
	.B(A[5]),
	.Y(\ab[5][2] ));
   NOR2X1M U76 (.A(n30),
	.B(A[5]),
	.Y(\ab[5][1] ));
   NOR2X1M U77 (.A(B[0]),
	.B(A[5]),
	.Y(\ab[5][0] ));
   NOR2X1M U78 (.A(B[7]),
	.B(A[4]),
	.Y(\ab[4][7] ));
   NOR2X1M U79 (.A(B[6]),
	.B(A[4]),
	.Y(\ab[4][6] ));
   NOR2X1M U80 (.A(B[5]),
	.B(A[4]),
	.Y(\ab[4][5] ));
   NOR2X1M U81 (.A(B[4]),
	.B(A[4]),
	.Y(\ab[4][4] ));
   NOR2X1M U82 (.A(B[3]),
	.B(A[4]),
	.Y(\ab[4][3] ));
   NOR2X1M U83 (.A(B[2]),
	.B(A[4]),
	.Y(\ab[4][2] ));
   NOR2X1M U84 (.A(n30),
	.B(A[4]),
	.Y(\ab[4][1] ));
   NOR2X1M U85 (.A(B[0]),
	.B(A[4]),
	.Y(\ab[4][0] ));
   NOR2X1M U86 (.A(B[7]),
	.B(A[3]),
	.Y(\ab[3][7] ));
   NOR2X1M U87 (.A(B[6]),
	.B(A[3]),
	.Y(\ab[3][6] ));
   NOR2X1M U88 (.A(B[5]),
	.B(A[3]),
	.Y(\ab[3][5] ));
   NOR2X1M U89 (.A(B[4]),
	.B(A[3]),
	.Y(\ab[3][4] ));
   NOR2X1M U90 (.A(B[3]),
	.B(A[3]),
	.Y(\ab[3][3] ));
   NOR2X1M U91 (.A(B[2]),
	.B(A[3]),
	.Y(\ab[3][2] ));
   NOR2X1M U92 (.A(n30),
	.B(A[3]),
	.Y(\ab[3][1] ));
   NOR2X1M U93 (.A(B[0]),
	.B(A[3]),
	.Y(\ab[3][0] ));
   NOR2X1M U94 (.A(B[7]),
	.B(A[2]),
	.Y(\ab[2][7] ));
   NOR2X1M U95 (.A(B[6]),
	.B(A[2]),
	.Y(\ab[2][6] ));
   NOR2X1M U96 (.A(B[5]),
	.B(A[2]),
	.Y(\ab[2][5] ));
   NOR2X1M U97 (.A(B[4]),
	.B(A[2]),
	.Y(\ab[2][4] ));
   NOR2X1M U98 (.A(B[3]),
	.B(A[2]),
	.Y(\ab[2][3] ));
   NOR2X1M U99 (.A(B[2]),
	.B(A[2]),
	.Y(\ab[2][2] ));
   NOR2X1M U100 (.A(n30),
	.B(A[2]),
	.Y(\ab[2][1] ));
   NOR2X1M U101 (.A(B[0]),
	.B(A[2]),
	.Y(\ab[2][0] ));
   NOR2X1M U102 (.A(B[7]),
	.B(A[1]),
	.Y(\ab[1][7] ));
   NOR2X1M U103 (.A(B[6]),
	.B(A[1]),
	.Y(\ab[1][6] ));
   NOR2X1M U104 (.A(B[5]),
	.B(A[1]),
	.Y(\ab[1][5] ));
   NOR2X1M U105 (.A(B[4]),
	.B(A[1]),
	.Y(\ab[1][4] ));
   NOR2X1M U106 (.A(B[3]),
	.B(A[1]),
	.Y(\ab[1][3] ));
   NOR2X1M U107 (.A(B[2]),
	.B(A[1]),
	.Y(\ab[1][2] ));
   NOR2X1M U108 (.A(n30),
	.B(A[1]),
	.Y(\ab[1][1] ));
   NOR2X1M U109 (.A(B[0]),
	.B(A[1]),
	.Y(\ab[1][0] ));
   NOR2X1M U110 (.A(B[7]),
	.B(A[0]),
	.Y(\ab[0][7] ));
   NOR2X1M U111 (.A(B[6]),
	.B(A[0]),
	.Y(\ab[0][6] ));
   NOR2X1M U112 (.A(B[5]),
	.B(A[0]),
	.Y(\ab[0][5] ));
   NOR2X1M U113 (.A(B[4]),
	.B(A[0]),
	.Y(\ab[0][4] ));
   NOR2X1M U114 (.A(B[3]),
	.B(A[0]),
	.Y(\ab[0][3] ));
   NOR2X1M U115 (.A(B[2]),
	.B(A[0]),
	.Y(\ab[0][2] ));
   NOR2X1M U116 (.A(n30),
	.B(A[0]),
	.Y(\ab[0][1] ));
   NOR2X1M U117 (.A(B[0]),
	.B(A[0]),
	.Y(PRODUCT[0]));
   ALU_DW01_add_1 FS_1 (.A({ FE_UNCONNECTEDZ_0,
		\A1[12] ,
		\A1[11] ,
		\A1[10] ,
		\A1[9] ,
		\A1[8] ,
		\A1[7] ,
		\A1[6] ,
		\SUMB[7][0] ,
		\A1[4] ,
		\A1[3] ,
		\A1[2] ,
		\A1[1] ,
		\A1[0]  }),
	.B({ n10,
		n14,
		n16,
		n13,
		n15,
		n12,
		n11,
		FE_UNCONNECTEDZ_1,
		FE_UNCONNECTEDZ_2,
		FE_UNCONNECTEDZ_3,
		FE_UNCONNECTEDZ_4,
		FE_UNCONNECTEDZ_5,
		FE_UNCONNECTEDZ_6,
		FE_UNCONNECTEDZ_7 }),
	.SUM({ PRODUCT[15],
		PRODUCT[14],
		PRODUCT[13],
		PRODUCT[12],
		PRODUCT[11],
		PRODUCT[10],
		PRODUCT[9],
		PRODUCT[8],
		PRODUCT[7],
		PRODUCT[6],
		PRODUCT[5],
		PRODUCT[4],
		PRODUCT[3],
		PRODUCT[2] }));
endmodule

module ALU_test_1 (
	A, 
	B, 
	EN, 
	ALU_FUN, 
	CLK, 
	RST, 
	ALU_OUT, 
	OUT_VALID, 
	test_si, 
	test_se, 
	p1);
   input [7:0] A;
   input [7:0] B;
   input EN;
   input [3:0] ALU_FUN;
   input CLK;
   input RST;
   output [15:0] ALU_OUT;
   output OUT_VALID;
   input test_si;
   input test_se;
   input p1;

   // Internal wires
   wire FE_OFN25_n52;
   wire FE_DBTN14_Operand_A_7_;
   wire FE_DBTN13_Operand_A_6_;
   wire FE_DBTN12_Operand_A_5_;
   wire FE_DBTN11_Operand_A_4_;
   wire FE_DBTN10_Operand_A_3_;
   wire FE_DBTN9_Operand_A_2_;
   wire FE_DBTN8_Operand_A_1_;
   wire FE_DBTN7_Operand_A_0_;
   wire FE_DBTN6_Operand_B_7_;
   wire FE_DBTN5_Operand_B_6_;
   wire FE_DBTN4_Operand_B_5_;
   wire FE_DBTN3_Operand_B_4_;
   wire FE_DBTN2_Operand_B_3_;
   wire FE_DBTN1_Operand_B_2_;
   wire FE_DBTN0_Operand_B_0_;
   wire N91;
   wire N92;
   wire N93;
   wire N94;
   wire N95;
   wire N96;
   wire N97;
   wire N98;
   wire N99;
   wire N100;
   wire N101;
   wire N102;
   wire N103;
   wire N104;
   wire N105;
   wire N106;
   wire N107;
   wire N108;
   wire N109;
   wire N110;
   wire N111;
   wire N112;
   wire N113;
   wire N114;
   wire N115;
   wire N116;
   wire N117;
   wire N118;
   wire N119;
   wire N120;
   wire N121;
   wire N122;
   wire N123;
   wire N124;
   wire N125;
   wire N126;
   wire N127;
   wire N128;
   wire N129;
   wire N130;
   wire N131;
   wire N132;
   wire N157;
   wire N158;
   wire N159;
   wire n48;
   wire n49;
   wire n50;
   wire n51;
   wire n52;
   wire n53;
   wire n54;
   wire n55;
   wire n56;
   wire n57;
   wire n58;
   wire n59;
   wire n60;
   wire n61;
   wire n62;
   wire n63;
   wire n64;
   wire n65;
   wire n66;
   wire n67;
   wire n68;
   wire n69;
   wire n70;
   wire n71;
   wire n72;
   wire n73;
   wire n74;
   wire n75;
   wire n76;
   wire n77;
   wire n78;
   wire n79;
   wire n80;
   wire n81;
   wire n82;
   wire n83;
   wire n84;
   wire n85;
   wire n86;
   wire n87;
   wire n88;
   wire n89;
   wire n90;
   wire n91;
   wire n92;
   wire n93;
   wire n94;
   wire n95;
   wire n96;
   wire n97;
   wire n98;
   wire n99;
   wire n100;
   wire n101;
   wire n102;
   wire n103;
   wire n104;
   wire n105;
   wire n106;
   wire n107;
   wire n108;
   wire n109;
   wire n110;
   wire n111;
   wire n112;
   wire n113;
   wire n114;
   wire n115;
   wire n116;
   wire n117;
   wire n118;
   wire n119;
   wire n120;
   wire n121;
   wire n122;
   wire n123;
   wire n124;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire n43;
   wire n44;
   wire n45;
   wire n46;
   wire n47;
   wire n125;
   wire n126;
   wire n127;
   wire n128;
   wire n129;
   wire n130;
   wire n131;
   wire n132;
   wire n133;
   wire n135;
   wire n137;
   wire n140;
   wire n141;
   wire n142;
   wire n143;
   wire n144;
   wire n145;
   wire n146;
   wire [15:0] ALU_OUT_Comb;

   BUFX2M FE_OFC25_n52 (.A(n52),
	.Y(FE_OFN25_n52));
   INVX2M FE_DBTC14_Operand_A_7_ (.A(A[7]),
	.Y(FE_DBTN14_Operand_A_7_));
   INVX2M FE_DBTC13_Operand_A_6_ (.A(A[6]),
	.Y(FE_DBTN13_Operand_A_6_));
   INVX2M FE_DBTC12_Operand_A_5_ (.A(A[5]),
	.Y(FE_DBTN12_Operand_A_5_));
   INVX2M FE_DBTC11_Operand_A_4_ (.A(A[4]),
	.Y(FE_DBTN11_Operand_A_4_));
   INVX2M FE_DBTC10_Operand_A_3_ (.A(A[3]),
	.Y(FE_DBTN10_Operand_A_3_));
   INVX2M FE_DBTC9_Operand_A_2_ (.A(A[2]),
	.Y(FE_DBTN9_Operand_A_2_));
   INVX2M FE_DBTC8_Operand_A_1_ (.A(A[1]),
	.Y(FE_DBTN8_Operand_A_1_));
   INVX2M FE_DBTC7_Operand_A_0_ (.A(A[0]),
	.Y(FE_DBTN7_Operand_A_0_));
   INVX2M FE_DBTC6_Operand_B_7_ (.A(B[7]),
	.Y(FE_DBTN6_Operand_B_7_));
   INVX2M FE_DBTC5_Operand_B_6_ (.A(B[6]),
	.Y(FE_DBTN5_Operand_B_6_));
   INVX2M FE_DBTC4_Operand_B_5_ (.A(B[5]),
	.Y(FE_DBTN4_Operand_B_5_));
   INVX2M FE_DBTC3_Operand_B_4_ (.A(B[4]),
	.Y(FE_DBTN3_Operand_B_4_));
   INVX2M FE_DBTC2_Operand_B_3_ (.A(B[3]),
	.Y(FE_DBTN2_Operand_B_3_));
   INVX2M FE_DBTC1_Operand_B_2_ (.A(B[2]),
	.Y(FE_DBTN1_Operand_B_2_));
   INVX2M FE_DBTC0_Operand_B_0_ (.A(B[0]),
	.Y(FE_DBTN0_Operand_B_0_));
   SDFFRQX2M \ALU_OUT_reg[15]  (.SI(ALU_OUT[14]),
	.SE(p1),
	.D(ALU_OUT_Comb[15]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[15]));
   SDFFRQX2M \ALU_OUT_reg[14]  (.SI(ALU_OUT[13]),
	.SE(p1),
	.D(ALU_OUT_Comb[14]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[14]));
   SDFFRQX2M \ALU_OUT_reg[13]  (.SI(ALU_OUT[12]),
	.SE(p1),
	.D(ALU_OUT_Comb[13]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[13]));
   SDFFRQX2M \ALU_OUT_reg[12]  (.SI(ALU_OUT[11]),
	.SE(p1),
	.D(ALU_OUT_Comb[12]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[12]));
   SDFFRQX2M \ALU_OUT_reg[11]  (.SI(ALU_OUT[10]),
	.SE(p1),
	.D(ALU_OUT_Comb[11]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[11]));
   SDFFRQX2M \ALU_OUT_reg[10]  (.SI(ALU_OUT[9]),
	.SE(p1),
	.D(ALU_OUT_Comb[10]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[10]));
   SDFFRQX2M \ALU_OUT_reg[9]  (.SI(ALU_OUT[8]),
	.SE(p1),
	.D(ALU_OUT_Comb[9]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[9]));
   SDFFRQX2M \ALU_OUT_reg[8]  (.SI(ALU_OUT[7]),
	.SE(test_se),
	.D(ALU_OUT_Comb[8]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[8]));
   SDFFRQX2M \ALU_OUT_reg[7]  (.SI(ALU_OUT[6]),
	.SE(test_se),
	.D(ALU_OUT_Comb[7]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[7]));
   SDFFRQX2M \ALU_OUT_reg[6]  (.SI(ALU_OUT[5]),
	.SE(test_se),
	.D(ALU_OUT_Comb[6]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[6]));
   SDFFRQX2M \ALU_OUT_reg[5]  (.SI(ALU_OUT[4]),
	.SE(test_se),
	.D(ALU_OUT_Comb[5]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[5]));
   SDFFRQX2M \ALU_OUT_reg[4]  (.SI(ALU_OUT[3]),
	.SE(test_se),
	.D(ALU_OUT_Comb[4]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[4]));
   SDFFRQX2M \ALU_OUT_reg[3]  (.SI(ALU_OUT[2]),
	.SE(test_se),
	.D(ALU_OUT_Comb[3]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[3]));
   SDFFRQX2M \ALU_OUT_reg[2]  (.SI(ALU_OUT[1]),
	.SE(test_se),
	.D(ALU_OUT_Comb[2]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[2]));
   SDFFRQX2M \ALU_OUT_reg[1]  (.SI(ALU_OUT[0]),
	.SE(test_se),
	.D(ALU_OUT_Comb[1]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[1]));
   SDFFRQX2M \ALU_OUT_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(ALU_OUT_Comb[0]),
	.CK(CLK),
	.RN(RST),
	.Q(ALU_OUT[0]));
   SDFFRQX2M OUT_VALID_reg (.SI(ALU_OUT[15]),
	.SE(test_se),
	.D(EN),
	.CK(CLK),
	.RN(RST),
	.Q(OUT_VALID));
   OAI2BB1X2M U23 (.A0N(n146),
	.A1N(n122),
	.B0(n118),
	.Y(n64));
   OAI2BB1X2M U24 (.A0N(n117),
	.A1N(n116),
	.B0(n118),
	.Y(n65));
   NOR2BX2M U25 (.AN(n123),
	.B(n143),
	.Y(n54));
   AND2X2M U26 (.A(n116),
	.B(n122),
	.Y(n59));
   NOR2BX2M U27 (.AN(FE_OFN25_n52),
	.B(n141),
	.Y(n48));
   AND2X2M U28 (.A(n123),
	.B(n122),
	.Y(n67));
   NOR2X2M U30 (.A(n124),
	.B(n143),
	.Y(n58));
   INVX2M U31 (.A(n117),
	.Y(n143));
   INVX2M U32 (.A(n108),
	.Y(n144));
   OAI2BB1X2M U33 (.A0N(N118),
	.A1N(n48),
	.B0(n49),
	.Y(ALU_OUT_Comb[9]));
   OAI2BB1X2M U34 (.A0N(N119),
	.A1N(n48),
	.B0(n49),
	.Y(ALU_OUT_Comb[10]));
   OAI2BB1X2M U35 (.A0N(N120),
	.A1N(n48),
	.B0(n49),
	.Y(ALU_OUT_Comb[11]));
   OAI2BB1X2M U36 (.A0N(N121),
	.A1N(n48),
	.B0(n49),
	.Y(ALU_OUT_Comb[12]));
   OAI2BB1X2M U37 (.A0N(N122),
	.A1N(n48),
	.B0(n49),
	.Y(ALU_OUT_Comb[13]));
   OAI2BB1X2M U38 (.A0N(N123),
	.A1N(n48),
	.B0(n49),
	.Y(ALU_OUT_Comb[14]));
   OAI2BB1X2M U39 (.A0N(N124),
	.A1N(n48),
	.B0(n49),
	.Y(ALU_OUT_Comb[15]));
   INVX2M U40 (.A(n124),
	.Y(n146));
   NOR3BX2M U41 (.AN(n122),
	.B(n145),
	.C(ALU_FUN[2]),
	.Y(n66));
   NOR3X2M U42 (.A(n143),
	.B(ALU_FUN[2]),
	.C(n145),
	.Y(n52));
   NOR2X2M U43 (.A(ALU_FUN[2]),
	.B(ALU_FUN[1]),
	.Y(n123));
   AND3X2M U44 (.A(n123),
	.B(n142),
	.C(ALU_FUN[3]),
	.Y(n63));
   NAND3X2M U45 (.A(n146),
	.B(n142),
	.C(ALU_FUN[3]),
	.Y(n53));
   NAND2X2M U46 (.A(ALU_FUN[2]),
	.B(ALU_FUN[1]),
	.Y(n124));
   INVX2M U47 (.A(ALU_FUN[0]),
	.Y(n142));
   NOR2X2M U48 (.A(n142),
	.B(ALU_FUN[3]),
	.Y(n122));
   NOR2X2M U49 (.A(ALU_FUN[3]),
	.B(ALU_FUN[0]),
	.Y(n117));
   NAND3X2M U50 (.A(ALU_FUN[3]),
	.B(ALU_FUN[0]),
	.C(n116),
	.Y(n108));
   INVX2M U51 (.A(ALU_FUN[1]),
	.Y(n145));
   NAND2X2M U52 (.A(EN),
	.B(n140),
	.Y(n49));
   INVX2M U53 (.A(EN),
	.Y(n141));
   NAND3X2M U54 (.A(n123),
	.B(ALU_FUN[0]),
	.C(ALU_FUN[3]),
	.Y(n118));
   AND2X2M U55 (.A(ALU_FUN[2]),
	.B(n145),
	.Y(n116));
   AND4X2M U56 (.A(N159),
	.B(n116),
	.C(ALU_FUN[3]),
	.D(n142),
	.Y(n107));
   OAI222X1M U58 (.A0(n72),
	.A1(FE_DBTN5_Operand_B_6_),
	.B0(B[6]),
	.B1(n73),
	.C0(n53),
	.C1(FE_DBTN12_Operand_A_5_),
	.Y(n71));
   AOI221XLM U59 (.A0(A[6]),
	.A1(n63),
	.B0(n64),
	.B1(FE_DBTN13_Operand_A_6_),
	.C0(n58),
	.Y(n73));
   AOI221XLM U60 (.A0(n63),
	.A1(FE_DBTN13_Operand_A_6_),
	.B0(A[6]),
	.B1(n65),
	.C0(n59),
	.Y(n72));
   AOI31X2M U61 (.A0(n92),
	.A1(n93),
	.A2(n94),
	.B0(n141),
	.Y(ALU_OUT_Comb[2]));
   AOI22X1M U62 (.A0(N102),
	.A1(n67),
	.B0(N93),
	.B1(n54),
	.Y(n92));
   AOI221XLM U63 (.A0(A[3]),
	.A1(n144),
	.B0(n58),
	.B1(FE_DBTN9_Operand_A_2_),
	.C0(n95),
	.Y(n94));
   AOI222X1M U64 (.A0(N111),
	.A1(FE_OFN25_n52),
	.B0(A[2]),
	.B1(n59),
	.C0(N127),
	.C1(n66),
	.Y(n93));
   AOI31X2M U65 (.A0(n86),
	.A1(n87),
	.A2(n88),
	.B0(n141),
	.Y(ALU_OUT_Comb[3]));
   AOI22X1M U66 (.A0(N103),
	.A1(n67),
	.B0(N94),
	.B1(n54),
	.Y(n86));
   AOI221XLM U67 (.A0(A[4]),
	.A1(n144),
	.B0(n58),
	.B1(FE_DBTN10_Operand_A_3_),
	.C0(n89),
	.Y(n88));
   AOI222X1M U68 (.A0(N112),
	.A1(FE_OFN25_n52),
	.B0(A[3]),
	.B1(n59),
	.C0(N128),
	.C1(n66),
	.Y(n87));
   AOI31X2M U69 (.A0(n80),
	.A1(n81),
	.A2(n82),
	.B0(n141),
	.Y(ALU_OUT_Comb[4]));
   AOI22X1M U70 (.A0(N104),
	.A1(n67),
	.B0(N95),
	.B1(n54),
	.Y(n80));
   AOI221XLM U71 (.A0(n144),
	.A1(A[5]),
	.B0(n58),
	.B1(FE_DBTN11_Operand_A_4_),
	.C0(n83),
	.Y(n82));
   AOI222X1M U72 (.A0(N113),
	.A1(FE_OFN25_n52),
	.B0(A[4]),
	.B1(n59),
	.C0(N129),
	.C1(n66),
	.Y(n81));
   AOI31X2M U73 (.A0(n74),
	.A1(n75),
	.A2(n76),
	.B0(n141),
	.Y(ALU_OUT_Comb[5]));
   AOI22X1M U74 (.A0(N105),
	.A1(n67),
	.B0(N96),
	.B1(n54),
	.Y(n74));
   AOI221XLM U75 (.A0(n144),
	.A1(A[6]),
	.B0(n58),
	.B1(FE_DBTN12_Operand_A_5_),
	.C0(n77),
	.Y(n76));
   AOI222X1M U76 (.A0(N114),
	.A1(FE_OFN25_n52),
	.B0(A[5]),
	.B1(n59),
	.C0(N130),
	.C1(n66),
	.Y(n75));
   AOI31X2M U77 (.A0(n68),
	.A1(n69),
	.A2(n70),
	.B0(n141),
	.Y(ALU_OUT_Comb[6]));
   AOI22X1M U78 (.A0(N106),
	.A1(n67),
	.B0(N97),
	.B1(n54),
	.Y(n68));
   AOI221XLM U79 (.A0(n144),
	.A1(A[7]),
	.B0(n58),
	.B1(FE_DBTN13_Operand_A_6_),
	.C0(n71),
	.Y(n70));
   AOI222X1M U80 (.A0(N115),
	.A1(FE_OFN25_n52),
	.B0(n59),
	.B1(A[6]),
	.C0(N131),
	.C1(n66),
	.Y(n69));
   AOI31X2M U81 (.A0(n55),
	.A1(n56),
	.A2(n57),
	.B0(n141),
	.Y(ALU_OUT_Comb[7]));
   AOI22X1M U82 (.A0(N132),
	.A1(n66),
	.B0(N116),
	.B1(FE_OFN25_n52),
	.Y(n56));
   AOI22X1M U83 (.A0(N107),
	.A1(n67),
	.B0(N98),
	.B1(n54),
	.Y(n55));
   AOI221XLM U84 (.A0(n58),
	.A1(FE_DBTN14_Operand_A_7_),
	.B0(n59),
	.B1(A[7]),
	.C0(n60),
	.Y(n57));
   AOI31X2M U85 (.A0(n110),
	.A1(n111),
	.A2(n112),
	.B0(n141),
	.Y(ALU_OUT_Comb[0]));
   AOI22X1M U86 (.A0(N100),
	.A1(n67),
	.B0(N91),
	.B1(n54),
	.Y(n110));
   AOI211X2M U87 (.A0(n58),
	.A1(FE_DBTN7_Operand_A_0_),
	.B0(n113),
	.C0(n114),
	.Y(n112));
   AOI222X1M U88 (.A0(N109),
	.A1(FE_OFN25_n52),
	.B0(A[0]),
	.B1(n59),
	.C0(N125),
	.C1(n66),
	.Y(n111));
   AOI31X2M U89 (.A0(n98),
	.A1(n99),
	.A2(n100),
	.B0(n141),
	.Y(ALU_OUT_Comb[1]));
   AOI211X2M U90 (.A0(A[2]),
	.A1(n144),
	.B0(n101),
	.C0(n102),
	.Y(n100));
   AOI222X1M U91 (.A0(N126),
	.A1(n66),
	.B0(n58),
	.B1(FE_DBTN8_Operand_A_1_),
	.C0(A[1]),
	.C1(n59),
	.Y(n99));
   AOI222X1M U92 (.A0(N92),
	.A1(n54),
	.B0(N110),
	.B1(FE_OFN25_n52),
	.C0(N101),
	.C1(n67),
	.Y(n98));
   INVX2M U93 (.A(n109),
	.Y(n140));
   AOI211X2M U94 (.A0(N108),
	.A1(n67),
	.B0(n58),
	.C0(n64),
	.Y(n109));
   AOI21X2M U95 (.A0(n50),
	.A1(n51),
	.B0(n141),
	.Y(ALU_OUT_Comb[8]));
   AOI21X2M U96 (.A0(N99),
	.A1(n54),
	.B0(n140),
	.Y(n50));
   AOI2BB2XLM U97 (.A0N(FE_DBTN14_Operand_A_7_),
	.A1N(n53),
	.B0(N117),
	.B1(FE_OFN25_n52),
	.Y(n51));
   OAI222X1M U107 (.A0(n96),
	.A1(FE_DBTN1_Operand_B_2_),
	.B0(B[2]),
	.B1(n97),
	.C0(n53),
	.C1(FE_DBTN8_Operand_A_1_),
	.Y(n95));
   AOI221XLM U108 (.A0(A[2]),
	.A1(n63),
	.B0(n64),
	.B1(FE_DBTN9_Operand_A_2_),
	.C0(n58),
	.Y(n97));
   AOI221XLM U109 (.A0(n63),
	.A1(FE_DBTN9_Operand_A_2_),
	.B0(A[2]),
	.B1(n65),
	.C0(n59),
	.Y(n96));
   OAI222X1M U110 (.A0(n90),
	.A1(FE_DBTN2_Operand_B_3_),
	.B0(B[3]),
	.B1(n91),
	.C0(n53),
	.C1(FE_DBTN9_Operand_A_2_),
	.Y(n89));
   AOI221XLM U111 (.A0(A[3]),
	.A1(n63),
	.B0(n64),
	.B1(FE_DBTN10_Operand_A_3_),
	.C0(n58),
	.Y(n91));
   AOI221XLM U112 (.A0(n63),
	.A1(FE_DBTN10_Operand_A_3_),
	.B0(A[3]),
	.B1(n65),
	.C0(n59),
	.Y(n90));
   OAI222X1M U113 (.A0(n84),
	.A1(FE_DBTN3_Operand_B_4_),
	.B0(B[4]),
	.B1(n85),
	.C0(n53),
	.C1(FE_DBTN10_Operand_A_3_),
	.Y(n83));
   AOI221XLM U115 (.A0(A[4]),
	.A1(n63),
	.B0(n64),
	.B1(FE_DBTN11_Operand_A_4_),
	.C0(n58),
	.Y(n85));
   AOI221XLM U116 (.A0(n63),
	.A1(FE_DBTN11_Operand_A_4_),
	.B0(A[4]),
	.B1(n65),
	.C0(n59),
	.Y(n84));
   OAI222X1M U117 (.A0(n78),
	.A1(FE_DBTN4_Operand_B_5_),
	.B0(B[5]),
	.B1(n79),
	.C0(n53),
	.C1(FE_DBTN11_Operand_A_4_),
	.Y(n77));
   AOI221XLM U119 (.A0(A[5]),
	.A1(n63),
	.B0(n64),
	.B1(FE_DBTN12_Operand_A_5_),
	.C0(n58),
	.Y(n79));
   AOI221XLM U120 (.A0(n63),
	.A1(FE_DBTN12_Operand_A_5_),
	.B0(A[5]),
	.B1(n65),
	.C0(n59),
	.Y(n78));
   OAI222X1M U121 (.A0(n61),
	.A1(FE_DBTN6_Operand_B_7_),
	.B0(B[7]),
	.B1(n62),
	.C0(n53),
	.C1(FE_DBTN13_Operand_A_6_),
	.Y(n60));
   AOI221XLM U123 (.A0(n63),
	.A1(A[7]),
	.B0(n64),
	.B1(FE_DBTN14_Operand_A_7_),
	.C0(n58),
	.Y(n62));
   AOI221XLM U124 (.A0(n63),
	.A1(FE_DBTN14_Operand_A_7_),
	.B0(A[7]),
	.B1(n65),
	.C0(n59),
	.Y(n61));
   INVX2M U125 (.A(n31),
	.Y(n135));
   OAI2B2X1M U126 (.A0(n115),
	.A1N(B[0]),
	.B0(n108),
	.B1(FE_DBTN8_Operand_A_1_),
	.Y(n114));
   AOI221XLM U127 (.A0(n63),
	.A1(FE_DBTN7_Operand_A_0_),
	.B0(A[0]),
	.B1(n65),
	.C0(n59),
	.Y(n115));
   OAI2B2X1M U128 (.A0(n103),
	.A1N(B[1]),
	.B0(n53),
	.B1(FE_DBTN7_Operand_A_0_),
	.Y(n102));
   AOI221XLM U129 (.A0(n63),
	.A1(FE_DBTN8_Operand_A_1_),
	.B0(A[1]),
	.B1(n65),
	.C0(n59),
	.Y(n103));
   INVX2M U130 (.A(n42),
	.Y(n137));
   OAI21X2M U131 (.A0(B[0]),
	.A1(n119),
	.B0(n120),
	.Y(n113));
   AOI31X2M U132 (.A0(N157),
	.A1(ALU_FUN[3]),
	.A2(n121),
	.B0(n107),
	.Y(n120));
   AOI221XLM U133 (.A0(A[0]),
	.A1(n63),
	.B0(n64),
	.B1(FE_DBTN7_Operand_A_0_),
	.C0(n58),
	.Y(n119));
   NOR3X2M U134 (.A(n145),
	.B(ALU_FUN[2]),
	.C(ALU_FUN[0]),
	.Y(n121));
   OAI21X2M U135 (.A0(B[1]),
	.A1(n104),
	.B0(n105),
	.Y(n101));
   AOI31X2M U136 (.A0(N158),
	.A1(ALU_FUN[3]),
	.A2(n106),
	.B0(n107),
	.Y(n105));
   AOI221XLM U137 (.A0(A[1]),
	.A1(n63),
	.B0(n64),
	.B1(FE_DBTN8_Operand_A_1_),
	.C0(n58),
	.Y(n104));
   NOR3X2M U138 (.A(n142),
	.B(ALU_FUN[2]),
	.C(n145),
	.Y(n106));
   NOR2X1M U150 (.A(FE_DBTN14_Operand_A_7_),
	.B(B[7]),
	.Y(n130));
   NAND2BX1M U151 (.AN(B[4]),
	.B(A[4]),
	.Y(n46));
   NAND2BX1M U152 (.AN(A[4]),
	.B(B[4]),
	.Y(n35));
   CLKNAND2X2M U153 (.A(n46),
	.B(n35),
	.Y(n125));
   NOR2X1M U154 (.A(FE_DBTN2_Operand_B_3_),
	.B(A[3]),
	.Y(n43));
   NOR2X1M U155 (.A(FE_DBTN1_Operand_B_2_),
	.B(A[2]),
	.Y(n34));
   NOR2X1M U156 (.A(FE_DBTN0_Operand_B_0_),
	.B(A[0]),
	.Y(n31));
   CLKNAND2X2M U157 (.A(A[2]),
	.B(FE_DBTN1_Operand_B_2_),
	.Y(n45));
   NAND2BX1M U158 (.AN(n34),
	.B(n45),
	.Y(n40));
   AOI21X1M U159 (.A0(n31),
	.A1(FE_DBTN8_Operand_A_1_),
	.B0(B[1]),
	.Y(n32));
   AOI211X1M U160 (.A0(A[1]),
	.A1(n135),
	.B0(n40),
	.C0(n32),
	.Y(n33));
   CLKNAND2X2M U161 (.A(A[3]),
	.B(FE_DBTN2_Operand_B_3_),
	.Y(n44));
   OAI31X1M U162 (.A0(n43),
	.A1(n34),
	.A2(n33),
	.B0(n44),
	.Y(n36));
   NAND2BX1M U163 (.AN(A[5]),
	.B(B[5]),
	.Y(n128));
   OAI211X1M U164 (.A0(n125),
	.A1(n36),
	.B0(n35),
	.C0(n128),
	.Y(n37));
   NAND2BX1M U165 (.AN(B[5]),
	.B(A[5]),
	.Y(n47));
   XNOR2X1M U166 (.A(A[6]),
	.B(B[6]),
	.Y(n127));
   AOI32X1M U167 (.A0(n37),
	.A1(n47),
	.A2(n127),
	.B0(B[6]),
	.B1(FE_DBTN13_Operand_A_6_),
	.Y(n38));
   CLKNAND2X2M U168 (.A(B[7]),
	.B(FE_DBTN14_Operand_A_7_),
	.Y(n131));
   OAI21X1M U169 (.A0(n130),
	.A1(n38),
	.B0(n131),
	.Y(N159));
   CLKNAND2X2M U170 (.A(A[0]),
	.B(FE_DBTN0_Operand_B_0_),
	.Y(n41));
   OA21X1M U171 (.A0(n41),
	.A1(FE_DBTN8_Operand_A_1_),
	.B0(B[1]),
	.Y(n39));
   AOI211X1M U172 (.A0(n41),
	.A1(FE_DBTN8_Operand_A_1_),
	.B0(n40),
	.C0(n39),
	.Y(n42));
   AOI31X1M U173 (.A0(n137),
	.A1(n45),
	.A2(n44),
	.B0(n43),
	.Y(n126));
   OAI2B11X1M U174 (.A0(n125),
	.A1N(n126),
	.B0(n47),
	.C0(n46),
	.Y(n129));
   AOI32X1M U175 (.A0(n129),
	.A1(n128),
	.A2(n127),
	.B0(A[6]),
	.B1(FE_DBTN5_Operand_B_6_),
	.Y(n132));
   AOI2B1X1M U176 (.A0(n131),
	.A1N(n132),
	.B0(n130),
	.Y(n133));
   CLKINVX1M U177 (.A(n133),
	.Y(N158));
   NOR2X1M U178 (.A(N159),
	.B(N158),
	.Y(N157));
   ALU_DW_div_uns_0 div_52 (.a({ A[7],
		A[6],
		A[5],
		A[4],
		A[3],
		A[2],
		A[1],
		FE_DBTN7_Operand_A_0_ }),
	.b({ B[7],
		B[6],
		FE_DBTN4_Operand_B_5_,
		FE_DBTN3_Operand_B_4_,
		FE_DBTN2_Operand_B_3_,
		FE_DBTN1_Operand_B_2_,
		B[1],
		B[0] }),
	.quotient({ N132,
		N131,
		N130,
		N129,
		N128,
		N127,
		N126,
		N125 }),
	.p1(FE_DBTN0_Operand_B_0_),
	.p2(FE_DBTN5_Operand_B_6_),
	.p3(FE_DBTN6_Operand_B_7_),
	.p4(FE_DBTN8_Operand_A_1_),
	.p5(FE_DBTN9_Operand_A_2_),
	.p6(FE_DBTN10_Operand_A_3_),
	.p7(FE_DBTN11_Operand_A_4_),
	.p8(FE_DBTN12_Operand_A_5_),
	.p9(FE_DBTN13_Operand_A_6_));
   ALU_DW01_sub_0 sub_46 (.A({ FE_UNCONNECTEDZ_0,
		A }),
	.B({ FE_UNCONNECTEDZ_1,
		FE_DBTN6_Operand_B_7_,
		FE_DBTN5_Operand_B_6_,
		FE_DBTN4_Operand_B_5_,
		FE_DBTN3_Operand_B_4_,
		FE_DBTN2_Operand_B_3_,
		FE_DBTN1_Operand_B_2_,
		B[1],
		B[0] }),
	.DIFF({ N108,
		N107,
		N106,
		N105,
		N104,
		N103,
		N102,
		N101,
		N100 }),
	.p1(FE_DBTN0_Operand_B_0_),
	.p2(FE_DBTN7_Operand_A_0_));
   ALU_DW01_add_0 add_43 (.A({ FE_UNCONNECTEDZ_2,
		A }),
	.B({ FE_UNCONNECTEDZ_3,
		B }),
	.SUM({ N99,
		N98,
		N97,
		N96,
		N95,
		N94,
		N93,
		N92,
		N91 }));
   ALU_DW02_mult_0 mult_49 (.A({ FE_DBTN14_Operand_A_7_,
		FE_DBTN13_Operand_A_6_,
		FE_DBTN12_Operand_A_5_,
		FE_DBTN11_Operand_A_4_,
		FE_DBTN10_Operand_A_3_,
		FE_DBTN9_Operand_A_2_,
		FE_DBTN8_Operand_A_1_,
		FE_DBTN7_Operand_A_0_ }),
	.B({ FE_DBTN6_Operand_B_7_,
		FE_DBTN5_Operand_B_6_,
		FE_DBTN4_Operand_B_5_,
		FE_DBTN3_Operand_B_4_,
		FE_DBTN2_Operand_B_3_,
		FE_DBTN1_Operand_B_2_,
		B[1],
		FE_DBTN0_Operand_B_0_ }),
	.PRODUCT({ N124,
		N123,
		N122,
		N121,
		N120,
		N119,
		N118,
		N117,
		N116,
		N115,
		N114,
		N113,
		N112,
		N111,
		N110,
		N109 }));
endmodule

module CLK_GATE (
	CLK_EN, 
	CLK, 
	GATED_CLK);
   input CLK_EN;
   input CLK;
   output GATED_CLK;

   TLATNCAX20M U0_TLATNCAX12M (.E(CLK_EN),
	.CK(CLK),
	.ECK(GATED_CLK));
endmodule

